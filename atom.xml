<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Chenfan's blog]]></title>
  <subtitle><![CDATA[It's the way I choose.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jcf94.github.io/"/>
  <updated>2015-08-23T12:16:38.912Z</updated>
  <id>http://jcf94.github.io/</id>
  
  <author>
    <name><![CDATA[Jcf94]]></name>
    <email><![CDATA[jcf94@outlook.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Treap]]></title>
    <link href="http://jcf94.github.io/2015/08/23/2015-08-23-treap/"/>
    <id>http://jcf94.github.io/2015/08/23/2015-08-23-treap/</id>
    <published>2015-08-23T08:45:01.000Z</published>
    <updated>2015-08-23T12:16:38.912Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>据说平衡树界最经典的三大树是<br>SBT、Splay、Treap<br></blockquote>

<h1 id="从一道笔试题开始说起">从一道笔试题开始说起</h1><p>上午帮舍友助攻阿里笔试的时候，遇上这么一道题：</p>
<blockquote>
<p>输入是一些数对<code>&lt;a,b&gt;</code>，要求把它们用树结构存储下来，树的一个结点里面要同时保存a、b两个值，然后保证a是二叉搜索树性质，b是堆的性质。这样的树是唯一的。</p>
</blockquote>
<p>我心想…平衡树+堆…Tree+Heap…这不就是Treap嘛!!!</p>
<p>然而几大平衡树里面我学了SBT、Splay，没学Treap哇，当时就心凉了半截。</p>
<p>好在仔细看了看题，感觉实现起来不太难，于是试了下。</p>
<a id="more"></a>
<p>以下是上面这棵树的实现：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">MYID	: Chen Fan</span><br><span class="line">LANG	: G++</span><br><span class="line">PROG	: tree</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> treenod</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> left,right,a,b;</span><br><span class="line">&#125; treenode;</span><br><span class="line"></span><br><span class="line">treenode tree[<span class="number">10000</span>];</span><br><span class="line"><span class="keyword">int</span> father[<span class="number">10000</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> treetail,root;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rleft</span><span class="params">(<span class="keyword">int</span> now)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> fa=father[now],ffa=father[fa];</span><br><span class="line">	</span><br><span class="line">	father[now]=ffa;</span><br><span class="line">	father[fa]=now;</span><br><span class="line">	tree[fa].right=tree[now].left;</span><br><span class="line">	tree[now].left=fa;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!ffa)</span><br><span class="line">	&#123;</span><br><span class="line">		father[now]=<span class="number">0</span>;</span><br><span class="line">		root=now;</span><br><span class="line">	&#125; <span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		father[now]=ffa;</span><br><span class="line">		<span class="keyword">if</span> (fa==tree[ffa].left)</span><br><span class="line">		&#123;</span><br><span class="line">			tree[ffa].left=now;</span><br><span class="line">		&#125; <span class="keyword">else</span> </span><br><span class="line">		&#123;</span><br><span class="line">			tree[ffa].right=now;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rright</span><span class="params">(<span class="keyword">int</span> now)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> fa=father[now],ffa=father[fa];</span><br><span class="line">	</span><br><span class="line">	father[now]=ffa;</span><br><span class="line">	father[fa]=now;</span><br><span class="line">	tree[fa].left=tree[now].right;</span><br><span class="line">	tree[now].right=fa;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!ffa)</span><br><span class="line">	&#123;</span><br><span class="line">		father[now]=<span class="number">0</span>;</span><br><span class="line">		root=now;</span><br><span class="line">	&#125; <span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		father[now]=ffa;</span><br><span class="line">		<span class="keyword">if</span> (fa==tree[ffa].left)</span><br><span class="line">		&#123;</span><br><span class="line">			tree[ffa].left=now;</span><br><span class="line">		&#125; <span class="keyword">else</span> </span><br><span class="line">		&#123;</span><br><span class="line">			tree[ffa].right=now;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> now)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(father[now]&amp;&amp;tree[now].b&gt;tree[father[now]].b)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (now==tree[father[now]].left) rright(now);</span><br><span class="line">		<span class="keyword">else</span> rleft(now);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> r,<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!treetail)</span><br><span class="line">	&#123;</span><br><span class="line">		treetail++;</span><br><span class="line">		tree[<span class="number">1</span>].a=a;</span><br><span class="line">		tree[<span class="number">1</span>].b=b;</span><br><span class="line">	&#125; <span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (a&lt;tree[r].a) </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (!tree[r].left) </span><br><span class="line">			&#123;</span><br><span class="line">				treetail++;</span><br><span class="line">				tree[r].left=treetail;</span><br><span class="line">				father[treetail]=r;</span><br><span class="line">				tree[treetail].a=a;</span><br><span class="line">				tree[treetail].b=b;</span><br><span class="line">				check(treetail);</span><br><span class="line">			&#125; <span class="keyword">else</span> add(tree[r].left,a,b);</span><br><span class="line">		&#125; <span class="keyword">else</span> </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (!tree[r].right)</span><br><span class="line">			&#123;</span><br><span class="line">				treetail++;</span><br><span class="line">				tree[r].right=treetail;</span><br><span class="line">				father[treetail]=r;</span><br><span class="line">				tree[treetail].a=a;</span><br><span class="line">				tree[treetail].b=b;</span><br><span class="line">				check(treetail);</span><br><span class="line">			&#125; <span class="keyword">else</span> add(tree[r].right,a,b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">outp</span><span class="params">(<span class="keyword">int</span> now)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"&lt;%d,%d&gt;"</span>,tree[now].a,tree[now].b);</span><br><span class="line">	<span class="keyword">if</span> (tree[now].left) outp(tree[now].left);</span><br><span class="line">	<span class="keyword">if</span> (tree[now].right) outp(tree[now].right);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a,b;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//init</span></span><br><span class="line">	<span class="built_in">memset</span>(tree,<span class="number">0</span>,<span class="keyword">sizeof</span>(tree));</span><br><span class="line">	<span class="built_in">memset</span>(father,<span class="number">0</span>,<span class="keyword">sizeof</span>(father));</span><br><span class="line">	treetail=<span class="number">0</span>;</span><br><span class="line">	root=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//insert</span></span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b)==<span class="number">2</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		add(root,a,b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//output prefix</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,tree[root].a,tree[root].b);</span><br><span class="line">	outp(root);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>首先按照二叉搜索树的标准插入数据，然后进行堆结构调整。</p>
<p>正常的堆是满二叉树，直接使用子节点2倍和2倍+1的标号来维护，调整时是上下交换。而为了保证二叉搜索树的性质不被破坏，这里的调整需要用到子节点与父节点的左右旋来实现。</p>
<p>代码还是比较简单的。</p>
<p>然后既然今天开了这个头，下面顺手学习一下真正的Treap是怎么实现的。</p>
<h1 id="Treap">Treap</h1><hr>
<p>真正的Treap其实跟上面那个结构已经非常像了，主体是二叉搜索树，然后在一般的结点之外另外加一个<strong>优先级的域</strong>，并且使用<strong>堆</strong>来维护优先级。</p>
<h2 id="为什么要加个堆？">为什么要加个堆？</h2><p>我们知道平衡树的出现是为了解决二叉搜索树可能不平衡的问题，因此平衡树越稳定（越平衡），那么进行操作时的渐进复杂度越接近$O(logn)$</p>
<p>Treap通过堆来限定了整棵平衡树的结构：</p>
<p>对于一棵二叉搜索树来说，给定的输入顺序不同，最终生成得到的可能是不同的树结构，而加上堆限定之后，整棵树的形态就固定了。</p>
<p>也就是说：</p>
<blockquote>
<p>对于相同的一组数据，输入顺序并不改变Treap的最终形态；数据相同，则Treap的最终形态是唯一的</p>
</blockquote>
<p>那么另外一个问题来了，正常情况下我们只会得到a序列，b是哪里来的呢？</p>
<p>答案是<strong>随机数</strong>！</p>
<p>输入数据时，我们对于每一个a都给它生成一个随机数b，然后按照堆的性质去维护b。</p>
<p>数学上可以证明，随机数+堆的限定可以保证Treap达到$O(logn)$的期望深度。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>据说平衡树界最经典的三大树是<br>SBT、Splay、Treap<br></blockquote>

<h1 id="从一道笔试题开始说起">从一道笔试题开始说起</h1><p>上午帮舍友助攻阿里笔试的时候，遇上这么一道题：</p>
<blockquote>
<p>输入是一些数对<code>&lt;a,b&gt;</code>，要求把它们用树结构存储下来，树的一个结点里面要同时保存a、b两个值，然后保证a是二叉搜索树性质，b是堆的性质。这样的树是唯一的。</p>
</blockquote>
<p>我心想…平衡树+堆…Tree+Heap…这不就是Treap嘛!!!</p>
<p>然而几大平衡树里面我学了SBT、Splay，没学Treap哇，当时就心凉了半截。</p>
<p>好在仔细看了看题，感觉实现起来不太难，于是试了下。</p>]]>
    
    </summary>
    
      <category term="Treap" scheme="http://jcf94.github.io/tags/Treap/"/>
    
      <category term="平衡树" scheme="http://jcf94.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
      <category term="ACM" scheme="http://jcf94.github.io/categories/ACM/"/>
    
      <category term="算法学习" scheme="http://jcf94.github.io/categories/ACM/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[网络流整理]]></title>
    <link href="http://jcf94.github.io/2015/08/22/2015-08-22-networkflow/"/>
    <id>http://jcf94.github.io/2015/08/22/2015-08-22-networkflow/</id>
    <published>2015-08-22T00:21:16.000Z</published>
    <updated>2015-08-22T02:10:31.341Z</updated>
    <content type="html"><![CDATA[<p>今天来整理一下网络流的相关内容。</p>
<p>首先贴一个博客：<a href="http://mindlee.com/2011/11/19/network-flow/" target="_blank" rel="external">网络流(Network Flow)</a></p>
<p>关于网络流的介绍，这里都讲得比较详细了。</p>
<a id="more"></a>
<p>然后是模板题：HDU 3549</p>
<h1 id="Flow_Problem">Flow Problem</h1><p>Time Limit: 5000/5000 MS (Java/Others)    Memory Limit: 65535/32768 K (Java/Others)</p>
<h2 id="Problem_Description">Problem Description</h2><p>Network flow is a well-known difficult problem for ACMers. Given a graph, your task is to find out the maximum flow for the weighted directed graph.</p>
<h2 id="Input">Input</h2><p>The first line of input contains an integer T, denoting the number of test cases.</p>
<p>For each test case, the first line contains two integers N and M, denoting the number of vertexes and edges in the graph. (2 &lt;= N &lt;= 15, 0 &lt;= M &lt;= 1000)</p>
<p>Next M lines, each line contains three integers X, Y and C, there is an edge from X to Y and the capacity of it is C. (1 &lt;= X, Y &lt;= N, 1 &lt;= C &lt;= 1000)</p>
<h2 id="Output">Output</h2><p>For each test cases, you should output the maximum flow from source 1 to sink N.</p>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>2<br>3 2<br>1 2 1<br>2 3 1<br>3 3<br>1 2 1<br>2 3 1<br>1 3 1</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>Case 1: 1<br>Case 2: 2</p>
</blockquote>
<h1 id="算法模板">算法模板</h1><h2 id="最基础的Edmonds-Karp（EK）算法">最基础的Edmonds-Karp（EK）算法</h2><p>每一次运行都是从源点到汇点，广搜找一遍增广路。如果能够找到，则反向推回去把流加上去，直到找不到任何其他增广路为止，则结束。</p>
<p>复杂度是$O(V*E^2)$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">MYID	: Chen Fan</span><br><span class="line">LANG	: G++</span><br><span class="line">PROG	: 3549_EK</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> start[<span class="number">100</span>],num[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> nod &#123;</span><br><span class="line">	<span class="keyword">int</span> x,y;</span><br><span class="line">&#125; node;</span><br><span class="line">node edge[<span class="number">3000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">op</span><span class="params">(node a,node b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (a.x==b.x) <span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tail,front[<span class="number">100</span>],minn,next;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> n)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">	<span class="keyword">bool</span> flag[<span class="number">100</span>];</span><br><span class="line">	<span class="built_in">memset</span>(flag,<span class="number">0</span>,<span class="keyword">sizeof</span>(flag));</span><br><span class="line">	<span class="keyword">int</span> outp[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">	q.push(<span class="number">1</span>);</span><br><span class="line">	front[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">	outp[<span class="number">1</span>]=<span class="number">2147483647</span>;</span><br><span class="line">	flag[<span class="number">1</span>]=<span class="keyword">true</span>;</span><br><span class="line">	<span class="keyword">while</span>(!q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> now=q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num[now];i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> next=edge[start[now]+i].y;</span><br><span class="line">			<span class="keyword">if</span> (!flag[next]&amp;&amp;c[now][next]&gt;<span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				flag[next]=<span class="keyword">true</span>;</span><br><span class="line">				q.push(next);</span><br><span class="line">				front[next]=now;</span><br><span class="line">				outp[next]=min(outp[now],c[now][next]);</span><br><span class="line">				<span class="keyword">if</span> (next==n)</span><br><span class="line">				&#123;</span><br><span class="line">					minn=outp[next];</span><br><span class="line">					<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> tt=<span class="number">1</span>;tt&lt;=t;tt++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> n,m;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"></span><br><span class="line">		<span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">		tail=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> x,y,z;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">			<span class="keyword">if</span> (!(c[x][y]||c[y][x]))</span><br><span class="line">			&#123;</span><br><span class="line">				tail++;</span><br><span class="line">				edge[tail].x=x;</span><br><span class="line">				edge[tail].y=y;</span><br><span class="line">				tail++;</span><br><span class="line">				edge[tail].x=y;</span><br><span class="line">				edge[tail].y=x;</span><br><span class="line">			&#125;</span><br><span class="line">			c[x][y]+=z;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">		<span class="keyword">int</span> o=<span class="number">0</span>;</span><br><span class="line">		sort(&amp;edge[<span class="number">1</span>],&amp;edge[<span class="number">1</span>+tail],op);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tail;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (o!=edge[i].x)</span><br><span class="line">			&#123;</span><br><span class="line">				o=edge[i].x;</span><br><span class="line">				start[o]=i;</span><br><span class="line">			&#125;</span><br><span class="line">			num[o]++;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span> (find(n))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> i=n,j=front[n];</span><br><span class="line">			<span class="keyword">while</span>(j)</span><br><span class="line">			&#123;</span><br><span class="line">				c[j][i]-=minn;</span><br><span class="line">				c[i][j]+=minn;</span><br><span class="line">				i=j;</span><br><span class="line">				j=front[i];</span><br><span class="line">			&#125;</span><br><span class="line">			ans+=minn;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>,tt,ans);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="ISAP算法">ISAP算法</h2><p>引用一下 <a href="http://www.cnblogs.com/georgechen-ena/archive/2011/11/07/2240185.html" target="_blank" rel="external">网络流ISAP算法的简单介绍（zz）</a></p>
<blockquote>
<p>众所周知，在网络流的世界里，存在2类截然不同的求解思想，就是比较著名的预流推进与增广路，两者都需要反向边的小技巧。</p>
<p>其中预流推进的算法思想是以边为单元进行推流操作。具体流程如下:置初始点邻接边满流并用一次反向bfs对每个结点计算反向距离标号，定义除汇点外存量大于出量的结点为活动结点，每次对活动结点按允许边（u-&gt;v:d[u]=d[v]+1）进行推流操作，直到无法推流或者该点存量为0，若u点此时仍为活动结点，则进行重标号，使之等于原图中进行推操作后的邻接结点的最小标号+1，并将u点入队。当队列为空时，算法结束，只有s点和t点存量非0，网络中各顶点无存量，无法找到增广路继续增广，则t点存量为最大流。</p>
<p>而增广路的思想在于每次从源点搜索出一条前往汇点的增广路，并改变路上的边权，直到无法再进行增广，此时汇点的增广量即为最大流。两者最后的理论基础依然是增广路定理，而在理论复杂度上预流推进要显得比较优秀。其中的HLPP高标预流推进的理论复杂度已经达到了另人发指的$O（\sqrt{m}*n^2）$，但是其编程复杂度也是同样的令人发指</p>
<p>于是我们能否在编程复杂度和算法复杂度上找到一个平衡呢，答案是肯定的。我们使用增广路的思想，而且必须进行优化。因为原始的增广路算法（例如EK）是非常悲剧的。于是有人注意到了预流推进中的标号法，在增广路算法中引入允许弧概念，每次反搜残留网络得到结点标号，在正向增广中利用递归进行连续增广，于是产生了基于分层图的Dinic算法。一些人更不满足于常规Dinic所带来的提升，进而加入了多路分流增广的概念，即对同一顶点的流量，分多路同时推进，再加上比较复杂的手工递归，使得Dinic已经满足大部分题目的需要。</p>
<p>然而这样做就是增广路算法优化的极限么？答案永远是不。人们在Dinic中只类比了预流推进的标号技术，而重标号操作却没有发挥得淋漓尽致。于是人们在Dinic的基础上重新引入了重标号的概念，使得算法无须在每次增广后再进行BFS每个顶点进行距离标号，这种主动标号技术使得修正后算法的速度有了不少提高。但这点提高是不足称道的，人们又发现当某个标号的值没有对应的顶点后，即增广路被截断了，于是算法便可以提前结束，这种启发式的优化称为Gap优化。最后人们结合了<strong>连续增广，分层图，多路增广，Gap优化，主动标号</strong>等穷凶极恶的优化，更甚者在此之上狂搞个手动递归，于是产生了增广路算法的高效算法–ISAP算法。</p>
<p>虽然ISAP算法的理论复杂度仍然不可超越高标预流推进，但其编程复杂度已经简化到发指，如此优化，加上不逊于Dinic的速率（在效率上手工Dinic有时甚至不如递归ISAP），我们没有不选择它的理由。</p>
</blockquote>
<p>ISAP是将SAP的预处理广搜得到标号优化进了整个过程中，代码更简洁，而效率也是更快了。</p>
<p>以下还是上面这题的ISAP解法：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">MYID	: Chen Fan</span><br><span class="line">LANG	: G++</span><br><span class="line">PROG	: 3549_ISAP</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> start[<span class="number">100</span>],num[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> nod &#123;</span><br><span class="line">	<span class="keyword">int</span> x,y;</span><br><span class="line">&#125; node;</span><br><span class="line">node edge[<span class="number">3000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">op</span><span class="params">(node a,node b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (a.x==b.x) <span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tail,front[<span class="number">100</span>],minn,next,gap[<span class="number">100</span>],h[<span class="number">100</span>],n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> flow)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (now==n)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> flow;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> minh=n-<span class="number">1</span>,lv=flow,d;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;num[now];j++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> next=edge[start[now]+j].y;</span><br><span class="line">		<span class="keyword">if</span> (c[now][next]&gt;<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (h[next]+<span class="number">1</span>==h[now])</span><br><span class="line">			&#123;</span><br><span class="line">				d=min(lv,c[now][next]);</span><br><span class="line"></span><br><span class="line">				d=dfs(next,d);</span><br><span class="line"></span><br><span class="line">				c[now][next]-=d;</span><br><span class="line">				c[next][now]+=d;</span><br><span class="line"></span><br><span class="line">				lv-=d;</span><br><span class="line">				<span class="keyword">if</span> (h[<span class="number">1</span>]&gt;=n) <span class="keyword">return</span> flow-lv;</span><br><span class="line">				<span class="keyword">if</span> (lv==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (minh&gt;h[next]) minh=h[next];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (lv==flow)</span><br><span class="line">	&#123;</span><br><span class="line">		gap[h[now]]--;</span><br><span class="line">		<span class="keyword">if</span> (!gap[h[now]]) h[<span class="number">1</span>]=n;</span><br><span class="line">		h[now]=minh+<span class="number">1</span>;</span><br><span class="line">		gap[h[now]]++;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> flow-lv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> tt=<span class="number">1</span>;tt&lt;=t;tt++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> m;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"></span><br><span class="line">		<span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">		tail=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> x,y,z;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">			<span class="keyword">if</span> (!(c[x][y]||c[y][x]))</span><br><span class="line">			&#123;</span><br><span class="line">				tail++;</span><br><span class="line">				edge[tail].x=x;</span><br><span class="line">				edge[tail].y=y;</span><br><span class="line">				tail++;</span><br><span class="line">				edge[tail].x=y;</span><br><span class="line">				edge[tail].y=x;</span><br><span class="line">			&#125;</span><br><span class="line">			c[x][y]+=z;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">		<span class="keyword">int</span> o=<span class="number">0</span>;</span><br><span class="line">		sort(&amp;edge[<span class="number">1</span>],&amp;edge[<span class="number">1</span>+tail],op);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tail;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (o!=edge[i].x)</span><br><span class="line">			&#123;</span><br><span class="line">				o=edge[i].x;</span><br><span class="line">				start[o]=i;</span><br><span class="line">			&#125;</span><br><span class="line">			num[o]++;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">memset</span>(gap,<span class="number">0</span>,<span class="keyword">sizeof</span>(gap));</span><br><span class="line">		<span class="built_in">memset</span>(h,<span class="number">0</span>,<span class="keyword">sizeof</span>(h));</span><br><span class="line"></span><br><span class="line">		gap[<span class="number">1</span>]=n;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">while</span> (h[<span class="number">1</span>]&lt;n)</span><br><span class="line">		&#123;</span><br><span class="line">			ans+=dfs(<span class="number">1</span>,<span class="number">2147483647</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>,tt,ans);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天来整理一下网络流的相关内容。</p>
<p>首先贴一个博客：<a href="http://mindlee.com/2011/11/19/network-flow/">网络流(Network Flow)</a></p>
<p>关于网络流的介绍，这里都讲得比较详细了。</p>]]>
    
    </summary>
    
      <category term="网络流" scheme="http://jcf94.github.io/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="ACM" scheme="http://jcf94.github.io/categories/ACM/"/>
    
      <category term="算法学习" scheme="http://jcf94.github.io/categories/ACM/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BIOS内核载入的方式（引导实验）]]></title>
    <link href="http://jcf94.github.io/2015/08/19/2015-08-19-biosinit/"/>
    <id>http://jcf94.github.io/2015/08/19/2015-08-19-biosinit/</id>
    <published>2015-08-19T10:20:21.000Z</published>
    <updated>2015-08-19T12:18:08.618Z</updated>
    <content type="html"><![CDATA[<p>之前花了点时间稍微研究了下系统内核载入，重新翻出来整理一下：</p>
<h1 id="内核载入之前的工作">内核载入之前的工作</h1><hr>
<p>1981年IBM PC刚推出时，系统只带有640K的的RAM，内存寻址范围最大也只有1M。现如今基本的32位机都能寻址到4G，经过CPU的新特性更是可以支持到64G的物理内存。但是为了与原来的PC想兼容，系统1M一下物理内存使用分配上仍然保持与原来一致。ROM BIOS都在物理内存能寻址的最高端位置处，所以在大于1M内存的新计算机上，ROM BIOS最后会被映射到1M末尾的 Shadow 区域中。</p>
<a id="more"></a>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-08-19-biosinit-1.jpg" alt="内核"></p>
<p>计算机上电初始化时，物理内存被设置成从地址0开始的连续区域。除了地址从0xA0000~0xFFFFF（640K~1M）存放显存和ROM BIOS和0xFFFE0000~0xFFFFFFFF（4G的最后64K）存放ROM BIOS以外，其他部分都可以用作主要内存。</p>
<p>后续内核载入之后会重新分配，以后再研究。</p>
<p>x86体系的PC启动之后由BIOS完成自检，然后开始搜索外存上的引导信息，查找设备进行系统启动。BIOS会把硬盘等设备的头512字节数据复制到内存，检查这512字节是不是以16进制的0x55和0xaa结尾，这是启动引导程序的标记。</p>
<h1 id="用汇编写一个简易的引导程序">用汇编写一个简易的引导程序</h1><hr>
<p>下面是一个简单的程序：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.global start</span><br><span class="line">.code16</span><br><span class="line">.text</span><br><span class="line">start:</span><br><span class="line">        movw $<span class="number">0xb800</span>,%ax</span><br><span class="line">        movw %ax,%ds</span><br><span class="line">        movb $<span class="number">0x41</span>,(<span class="number">0</span>)</span><br><span class="line">        movb $<span class="number">0x1f</span>,(<span class="number">1</span>)</span><br><span class="line">hlt</span><br></pre></td></tr></table></figure>
<p><code>.global start</code> 这一句把start标签做全局符号导出，后面链接的时候会用到。</p>
<p>把代码保存为boot.s文件。然后用gas的as.exe和ld.exe两个程序真正把这段汇编代码处理成机器码</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">as -o boot.o boot.s</span><br><span class="line"></span><br><span class="line">ld -Ttext <span class="number">0</span>x200 <span class="operator">-s</span> -o boot --entry start  boot.o</span><br></pre></td></tr></table></figure>
<p><code>-Ttext 0x200</code> 的作用是让输出的代码设置为从boot输出文件的0x200位置开头，否则我们就很难确定我们得到的boot文件从哪开始才是代码，一会写入的时候也从这里写就行。</p>
<p>ld 命令里的 <code>--entry start</code> 这段就是我们之前的汇编文件中需要写 <code>.global start</code> 这句声明的原因。指定入口。</p>
<p>在保护模式启动之前，微机处于实地址模式，这个时候需要先设定数据段段寄存器的地址，然后就可以用一个16位的地址来访问内存开头的1M空间了。</p>
<p><code>.code16</code> 这一句声明是为了让gas了解到这段程序是为实模式编写的，且限定为16位的汇编编译。</p>
<p>首先把数据段寄存器设置成0xb800，这样，地址0就会指向PC的CPU中用来显示屏幕的一段内存的开头。在这个CPU的最初的阶段，一般屏幕有80行，25列，而当我们把数据段寄存器赋予值0xb800，地址0所指向的字节就代表第一行第一个字符，这里是ascii码中的大写字母A，即0x41。地址1现在指向的字节代表了第一行第一个字符的字体颜色和背景颜色，格式与windows命令行的color命令一样。</p>
<p>详细如下：</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">颜色设置</span><br><span class="line">颜色属性由两个十六进制数字指定 -- 第一个为背景，第二个则为前景。每个数字可以为以下任何值之一:</span><br><span class="line"><span class="constant">0</span> = 黑色</span><br><span class="line"><span class="constant">1</span> = 蓝色</span><br><span class="line"><span class="constant">2</span> = 绿色</span><br><span class="line"><span class="constant">3</span> = 浅绿色</span><br><span class="line"><span class="constant">4</span> = 红色</span><br><span class="line"><span class="constant">5</span> = 紫色</span><br><span class="line"><span class="constant">6</span> = 黄色</span><br><span class="line"><span class="constant">7</span> = 白色</span><br><span class="line"><span class="constant">8</span> = 灰色</span><br><span class="line"><span class="constant">9</span> = 淡蓝色</span><br><span class="line"><span class="constant">A</span> = 淡绿色</span><br><span class="line"><span class="constant">B</span> = 淡浅绿色</span><br><span class="line"><span class="constant">C</span> = 淡红色</span><br><span class="line"><span class="constant">D</span> = 淡紫色</span><br><span class="line"><span class="constant">E</span> = 淡黄色</span><br><span class="line"><span class="constant">F</span> = 亮白色</span><br></pre></td></tr></table></figure>
<p>如果把上面这段程序作为一个引导写进硬盘，则之后理论上将能够看到运行结果是屏幕上出现一个蓝底白字的A。</p>
<h1 id="准备写入存储设备，了解一下BIOS启动的流程，主要是MBR">准备写入存储设备，了解一下BIOS启动的流程，主要是MBR</h1><hr>
<p>完成编译之后需要把这块写入硬盘/U盘等存储设备。</p>
<p>刚开始我是拿U盘来试的，结果差点把我的U盘给毁了……汗……后来想到在VMware虚拟机里面直接新建一块硬盘来做。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-08-19-biosinit-2.jpg" alt="vmware1"></p>
<p>此时这块新建的磁盘里面什么都没有，但是用winhex打开磁盘1，看到的是这样的：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-08-19-biosinit-3.jpg" alt="vmware2"></p>
<p>winhex是一个16进制的编辑器，可以直接用来查看文件或者读取硬盘，免费版只能查看不能修改，不过这个对我们来说已经够了，因为之后的写硬盘操作我们要用C语言直接完成。</p>
<p>不管硬盘上设定的一扇区有多大，第一个扇区的引导都是固定512B，可以看到前512B的最后两个字节是 <code>55 AA</code>，即引导结束标志。然后开始部分是一些初始程序和找不到操作系统的提示信息。</p>
<p>这些东西都是在创建硬盘的时候里面默认写着的，如果对此块硬盘进行引导的话，将返回这些错误信息。</p>
<hr>
<p>下面解释一下MBR的相关知识：</p>
<p>MBR全称是Master Boot Record，硬盘主引导记录，它存在于硬盘的第一个物理扇区，也就是0面0磁道1扇区。</p>
<p>软盘上的引导扇区的作用是把软盘上存放的真正的操作系统内核读到内存中，然后跳到内核去执行。而MBR的作用却是找到硬盘上的活动分区，然后把活动分区上的引导记录读到内存中，然后再跳到此引导记录中去执行，后面的过程就与从软盘启动计算机一致了。</p>
<p>这里，可以把硬盘上的活动分区都看成一是个软盘。我们知道一个硬盘可以分成多个分区，也就是说一个硬盘可以视为由多个软盘组成，每一个分区都可以有自己的引导记录，这就如每个软盘上都有自己的引导记录一样。那么哪一个分区（软盘）用来真正引导计算机呢？这就由MBR来完成，MBR查看每个分区记录，当找到一个活动分区时，就把此活动分区的引导记录载入。</p>
<p>显然，必须有一个地方来存放硬盘的分区记录，这就是所谓的硬盘分区表。这个硬盘分区表也在MBR中，不过MBR只有一个扇区大小，既要有用来查找硬盘分区表的代码，还要包含硬盘分区表，所以这个硬盘分区表不可能很大。实际上，这个表只有四个表项，也就是说在一块硬盘里，最多有4个分区能用来引导电脑。</p>
<p>再来完整的看看<strong>MBR载入的流程</strong>，计算机启动的时候，MBR先把自己搬移到0x0600处，随后MBR开始查找内部的硬盘分区表表项，之后找到的引导程序会被BIOS载入到内存的0x7C00处，然后BIOS跳转到0x7C00处执行。</p>
<p>每个硬盘分区表表项的第一个字节只能是0x80或者0x00。如果是0×80表示这是一个活动分区，然后MBR再从这个表项中读出此分区在硬盘上的位置，将此分区的第一个扇区（含有此分区的引导记录）读入0x7C00处，然后跳到0x7C00处执行。如果表项的第一个字节是0x00，则查找下一个表项，直到四个表项都找完为止。如果此第一个字节既不是0x80又不是0x00，则打印一条错误信息。</p>
<p>MBR的整个结构，总长度上面说过了，一共512字节：</p>
<table>
<thead>
<tr>
<th>地址</th>
<th>说明</th>
<th>长度（Byte）</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x000（0）</td>
<td>MBR中的执行代码</td>
<td>440</td>
</tr>
<tr>
<td>0x1B8（440）</td>
<td>磁盘商标（可选）</td>
<td>6</td>
</tr>
<tr>
<td>0X1BE（446）</td>
<td>分区表（共4项，每项16字节）</td>
<td>4*16=64</td>
</tr>
<tr>
<td>0X1FE（510）</td>
<td>引导记录标志（55AA）</td>
<td>2</td>
</tr>
</tbody>
</table>
<p>分区表表项结构如图所示，总长度一共16字节：</p>
<table>
<thead>
<tr>
<th>地址偏移量</th>
<th>说明</th>
<th>长度（Byte）</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x0</td>
<td>状态码，0x80表示为活动分区，0x00表示为非活动分区，其他值无效</td>
<td>1</td>
</tr>
<tr>
<td>0x1</td>
<td>分区的第一个扇区的CHS地址（磁头、柱面、扇区）</td>
<td>3</td>
</tr>
<tr>
<td>0x4</td>
<td>分区类型（FAT、NTFS、ext2、ext3等）</td>
<td>1</td>
</tr>
<tr>
<td>0x5</td>
<td>分区的最后一个扇区的CHS地址</td>
<td>3</td>
</tr>
<tr>
<td>0x8</td>
<td>分区的第一个扇区的LBA地址</td>
<td>4</td>
</tr>
<tr>
<td>0xC</td>
<td>分区的长度（多少个扇区）</td>
<td>4</td>
</tr>
</tbody>
</table>
<p>所以写入前440个长度即可。后面的保持不变。</p>
<p>……之前拿U盘试的时候直接改了前面512B的所有内容，导致后来电脑直接读不出来U盘的东西了。因为分区表整个被破坏了。</p>
<h1 id="把引导写入硬盘">把引导写入硬盘</h1><hr>
<p>写硬盘用C语言来完成：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;windows.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    FILE *fp = NULL;</span><br><span class="line">    DWORD length;</span><br><span class="line">    HANDLE handle = NULL;</span><br><span class="line">    byte buff[<span class="number">512</span>],buf[<span class="number">512</span>];</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取硬盘，并把原始的引导信息保存下来</span></span><br><span class="line">    handle = CreateFile(TEXT(<span class="string">"\\\\.\\PHYSICALDRIVE1"</span>),GENERIC_READ,<span class="number">0</span>,NULL,OPEN_EXISTING,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (handle == INVALID_HANDLE_VALUE)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Cannot open the Device~!\n"</span>);</span><br><span class="line">		<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(buff,<span class="number">0</span>,<span class="keyword">sizeof</span>(buff));</span><br><span class="line">	ReadFile(handle,buff,<span class="keyword">sizeof</span>(buff),&amp;length,NULL);</span><br><span class="line">	CloseHandle(handle);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (i%<span class="number">16</span>==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%02X "</span>,buff[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//打开之前写好的引导文件</span></span><br><span class="line">    fp = fopen(<span class="string">"boot"</span>,<span class="string">"rb"</span>);</span><br><span class="line">	<span class="keyword">if</span> (fp == NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Cannot open the File~!\n"</span>);</span><br><span class="line">		<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="built_in">memset</span>(buf,<span class="number">0</span>,<span class="keyword">sizeof</span>(buf));</span><br><span class="line">    fseek(fp,<span class="number">0x200</span>,SEEK_SET); <span class="comment">//之前编译的时候指定的文件位置在这里用上</span></span><br><span class="line">    fread(buf,<span class="keyword">sizeof</span>(buf),<span class="number">1</span>,fp);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">440</span>;i&lt;<span class="number">512</span>;i++) buf[i]=buff[i]; <span class="comment">//保留原有的引导的440以后的内容</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//把整理好的引导信息写进硬盘</span></span><br><span class="line">    handle = CreateFile(TEXT(<span class="string">"\\\\.\\PHYSICALDRIVE1"</span>),GENERIC_WRITE,<span class="number">0</span>,NULL,OPEN_EXISTING,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (handle == INVALID_HANDLE_VALUE)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Cannot open the Device~!\n"</span>);</span><br><span class="line">		<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!WriteFile(handle,buf,<span class="keyword">sizeof</span>(buf),&amp;length,NULL))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Writing Error~!"</span>);</span><br><span class="line">		<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Writing Success~!"</span>);</span><br><span class="line">    CloseHandle(handle);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>写入完成之后，重启虚拟机，把硬盘1的启动项调到硬盘0前面去，然后启动！</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-08-19-biosinit-4.jpg" alt="vmware3"></p>
<p>BIOS闪了一下之后，果然左上角出现了预先设计的A，至此引导程序实验成功。然后重新恢复启动项正常进去之后硬盘1也没有出什么问题。</p>
<p>最后…<a href="http://www.cnblogs.com/bombless/archive/2010/12/28/writing-x86-os-part1.html" target="_blank" rel="external">这篇文章</a>给了我很大的帮助</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前花了点时间稍微研究了下系统内核载入，重新翻出来整理一下：</p>
<h1 id="内核载入之前的工作">内核载入之前的工作</h1><hr>
<p>1981年IBM PC刚推出时，系统只带有640K的的RAM，内存寻址范围最大也只有1M。现如今基本的32位机都能寻址到4G，经过CPU的新特性更是可以支持到64G的物理内存。但是为了与原来的PC想兼容，系统1M一下物理内存使用分配上仍然保持与原来一致。ROM BIOS都在物理内存能寻址的最高端位置处，所以在大于1M内存的新计算机上，ROM BIOS最后会被映射到1M末尾的 Shadow 区域中。</p>]]>
    
    </summary>
    
      <category term="BIOS" scheme="http://jcf94.github.io/tags/BIOS/"/>
    
      <category term="内核" scheme="http://jcf94.github.io/tags/%E5%86%85%E6%A0%B8/"/>
    
      <category term="引导" scheme="http://jcf94.github.io/tags/%E5%BC%95%E5%AF%BC/"/>
    
      <category term="计算机体系结构" scheme="http://jcf94.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[编译原理]]></title>
    <link href="http://jcf94.github.io/2015/08/16/2015-08-16-compilers/"/>
    <id>http://jcf94.github.io/2015/08/16/2015-08-16-compilers/</id>
    <published>2015-08-16T08:34:00.000Z</published>
    <updated>2015-08-22T10:34:58.515Z</updated>
    <content type="html"><![CDATA[<p>缺的东西只能自己补上，开始补编译原理。</p>
<p>刚买了的龙书还在路上，先从 Coursera 上找个公开课看着。</p>
<a id="more"></a>
<h1 id="介绍">介绍</h1><p>用来执行程序的工具一般分为两种：编译器（Compilers）和解释器（Interpreters）</p>
<p>编译器是将程序代码首先编译生成可执行文件，然后将数据输入可执行文件得到输出结果，也称为离线执行方式</p>
<p>解释器是将程序和数据输入解释器中，直接得到输出结果，过程是相当于程序代码代码指导解释器来完成对输入数据的处理，也称为在线执行方式</p>
<p>常把编译的过程分成5个阶段：</p>
<ol>
<li>Lexical Analysis        词法分析</li>
<li>Parsing                语法分析</li>
<li>Semantic Analysis    语义分析</li>
<li>Optimization            优化</li>
<li>Code Generation        代码生成</li>
</ol>
<hr>
<p>龙书终于到手咯~Hoho~</p>
<p>在github上发现个整理得挺全的龙书答案，顺手fork下来<a href="http://jcf94.github.io/dragon-book-exercise-answers">做了个gitbook</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>缺的东西只能自己补上，开始补编译原理。</p>
<p>刚买了的龙书还在路上，先从 Coursera 上找个公开课看着。</p>]]>
    
    </summary>
    
      <category term="Coursera" scheme="http://jcf94.github.io/tags/Coursera/"/>
    
      <category term="StandFord" scheme="http://jcf94.github.io/tags/StandFord/"/>
    
      <category term="公开课" scheme="http://jcf94.github.io/tags/%E5%85%AC%E5%BC%80%E8%AF%BE/"/>
    
      <category term="编译原理" scheme="http://jcf94.github.io/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
      <category term="计算机体系结构" scheme="http://jcf94.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MX-BOARD 3.0 红轴]]></title>
    <link href="http://jcf94.github.io/2015/08/16/2015-08-16-cherry/"/>
    <id>http://jcf94.github.io/2015/08/16/2015-08-16-cherry/</id>
    <published>2015-08-16T07:42:32.000Z</published>
    <updated>2015-08-16T08:14:40.086Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>人生中的第一块原厂红轴<br>0.0<br>默默地入坑了<br></blockquote>

<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-08-16-cherry-P50816-154734.jpg" alt="cherry"></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>人生中的第一块原厂红轴<br>0.0<br>默默地入坑了<br></blockquote>

<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/]]>
    </summary>
    
      <category term="cherry" scheme="http://jcf94.github.io/tags/cherry/"/>
    
      <category term="机械键盘" scheme="http://jcf94.github.io/tags/%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[中山卡内基in广州]]></title>
    <link href="http://jcf94.github.io/2015/07/27/2015-07-27-sysucmu/"/>
    <id>http://jcf94.github.io/2015/07/27/2015-07-27-sysucmu/</id>
    <published>2015-07-27T07:00:39.000Z</published>
    <updated>2015-08-01T13:08:04.915Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>多图预警！！！<br>千万不要用流量打开本帖！！！<br>0.0<br></blockquote>

<p>26号到的广州，27号报到。</p>
<p>其实想想科大已经非常让我满意了，找到了自己最喜欢的方向，也找到了国内这个方向上最强的导师。想说要不算了吧？直接买票回家吧？</p>
<p>这边是一路顺，对方许诺的福利待遇都是最好的；另一边还要花心思去准备全英面试，拿不到全奖剩下的就是高额的学费。</p>
<p><a href="http://weibo.com/u/3502824133" target="_blank" rel="external">李小莹童鞋</a>说不管怎么选，最后总会后悔没有选择另一条。</p>
<blockquote>
<p>我想我已经决定好了去中科大了。</p>
</blockquote>
<p>接下来几天随便过吧~^.^</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-142201.jpg" alt="此处应有营服照片"></p>
<a id="more"></a>
<p>初见广州这个城市，带给我的印象确实要比合肥好很多，这才是发达的大城市的样子</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50726-192739.jpg" alt="广州塔"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50726-193359.jpg" alt="广州夜景"></p>
<p>中山大学整体偏文，校园文化和环境也都非常不错，大概是我见过的这么多学校里面最好看的校园了。（厦大也不错，，，）</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-095041.jpg" alt="中大校外"></p>
<p>然后是学校里面的环境：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-142532.jpg" alt="宿舍楼"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-155738.jpg" alt="图书馆"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-160443.jpg" alt="中山像"></p>
<p>自行车棚。。。棚？</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-161846.jpg" alt="自行车棚"></p>
<h1 id="Day_One">Day One</h1><hr>
<p>上午，开营仪式，参观JIE大楼以及广州超算中心</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-160720.jpg" alt="牌匾"></p>
<p>由于是这几年新建的楼，环境真心好到爆~~~</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-160911.jpg" alt="JIE1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-161053.jpg" alt="JIE2"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-161417.jpg" alt="JIE3"></p>
<p>开营仪式：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-094929.jpg" alt="开营"></p>
<p>实验室环境：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-113609.jpg" alt="JIE内部"></p>
<p>之前在中科大已经见过超算中心了，来到这里主要能够让人觉得兴奋的是天河二号！好歹是目前为止世界上运算速度最快的东西了，对于一个热爱计算机的人来说，有机会看到本体还是很让人激动的</p>
<p>可惜一路参观都只是隔着一层玻璃，立面应该是重重防护的，据说有武警把守</p>
<p>更让人失望的是广州超算中心只是设备在这里而已，维护等工作大部分还是由其研发机构——国防科大来做的，而中山大学的学生基本是不可能有机会接触到超算的（想想在中科大参观的时候，演示的老师甚至把运算结点拆下来跟我们介绍里面的结构。。。-_-///差距啊）</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-111228.jpg" alt="天河二号1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-111428.jpg" alt="天河二号2"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-111543.jpg" alt="天河二号3"></p>
<p>下午，参观顺德JRI研究院</p>
<p>随手拍了张自己感觉很奇怪的照片~~&gt;_&lt;</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-132420-001.jpg" alt="自拍"></p>
<p>作为JIE的附属研究机构，也招生一批中山大学单学位的硕士生，可以说是完全为了产业而培养人才</p>
<p>环境自然也是好的不得了，宿舍还是单人间啊啊啊</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-143349.jpg" alt="高端"></p>
<p>下面是个微波暗室：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-151914.jpg" alt="微波暗室1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-151924.jpg" alt="微波暗室2"></p>
<h1 id="Day_Two">Day Two</h1><hr>
<p>上午，介绍CMU学习情况以及学业体系</p>
<p>整体跟我原来了解到的一致，JIE的学生完全等同于CMU的正式学生，学习方式、课程安排等都是纯美式的</p>
<p>下午，各位导师分别介绍各自实验室以及研究方向</p>
<p>。。。然而，并不感兴趣啊（话说我本来就准备好水掉明天的面试了的）</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50729-100249.jpg" alt="介绍1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50729-093237.jpg" alt="介绍2"></p>
<h1 id="Day_Three">Day Three</h1><hr>
<p>面试</p>
<p>JIE的面试相当吓人：</p>
<p>一个房间里坐着10多个老师，每人1分钟自我介绍，剩下9分钟由老师提问，每人定时只给10分钟，到时间会叫停，全英文面试。</p>
<p>英语方面我感觉没什么问题，关键9分钟提问阶段只问专业课，比赛、项目什么的经历直接被他们略过去了。然而一个外国教授随便从我成绩单里面随便挑了门课，，，挑中了高频，我去。。。</p>
<p>你要问我算法、数据结构，甚至信号系统、傅里叶变换啥的我都能扯啊，考我高频就悲剧了。</p>
<p>问我三极管在高频电路中的作用。</p>
<p>这玩意怎么答啊？基极调制，增益放大？然后下一个问题是为什么三极管在增益放大中是必不可缺的。</p>
<p>。。。好吧，我承认又被好久之前的吴老大说中了。</p>
<blockquote>
<p>基础没学好！！</p>
</blockquote>
<p>主要是平时就记个放大电路，记个振荡电路，没有深入考虑过里面的原理。</p>
<p>哎哎，水完了就好。中大卡内基再见！</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-081652.jpg" alt="宿舍一景"></p>
<p>早上好：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50731-070554.jpg" alt="早晨"></p>
<p>最后留几张吃的，午餐~~</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50730-115736.jpg" alt="午餐"></p>
<p>早餐：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50728-080019.jpg" alt="早餐"></p>
<hr>
<p>放假了半个多月，终于要踏上回家的路了</p>
<p>也是在前几天惊闻浙大软硬件协同实验室的BOSS陈天洲教授去世，顿时觉得世界真是太残酷了。</p>
<p>曾经在去中科大之前我最想去的就是浙大的这个实验室，现在这样对我来说就不再需要思考其他的了，9月份也不用再给自己找麻烦了，中科大将是我唯一的选择！</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50731-084443.jpg" alt="KFC"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50731-113048.jpg" alt="火车"></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=4874932&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>多图预警！！！<br>千万不要用流量打开本帖！！！<br>0.0<br></blockquote>

<p>26号到的广州，27号报到。</p>
<p>其实想想科大已经非常让我满意了，找到了自己最喜欢的方向，也找到了国内这个方向上最强的导师。想说要不算了吧？直接买票回家吧？</p>
<p>这边是一路顺，对方许诺的福利待遇都是最好的；另一边还要花心思去准备全英面试，拿不到全奖剩下的就是高额的学费。</p>
<p><a href="http://weibo.com/u/3502824133">李小莹童鞋</a>说不管怎么选，最后总会后悔没有选择另一条。</p>
<blockquote>
<p>我想我已经决定好了去中科大了。</p>
</blockquote>
<p>接下来几天随便过吧~^.^</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-27-sysucmu-P50727-142201.jpg" alt="此处应有营服照片"></p>]]>
    
    </summary>
    
      <category term="CMU" scheme="http://jcf94.github.io/tags/CMU/"/>
    
      <category term="SYSU" scheme="http://jcf94.github.io/tags/SYSU/"/>
    
      <category term="保研" scheme="http://jcf94.github.io/tags/%E4%BF%9D%E7%A0%94/"/>
    
      <category term="图集" scheme="http://jcf94.github.io/tags/%E5%9B%BE%E9%9B%86/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[中科大in合肥]]></title>
    <link href="http://jcf94.github.io/2015/07/22/2015-07-22-ustc/"/>
    <id>http://jcf94.github.io/2015/07/22/2015-07-22-ustc/</id>
    <published>2015-07-22T13:12:30.000Z</published>
    <updated>2015-07-31T05:53:26.000Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>多图预警！！！<br>千万不要用流量打开本帖！！！<br>0.0<br></blockquote>

<p>7月19日到达USTC中科大，开始为期5天的夏令营。</p>
<p>拍了一堆照片记录下这几天的历程。。。</p>
<p>Hoho~~</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-150859.jpg" alt="营服"></p>
<a id="more"></a>
<p>发的全部材料在这里啦：</p>
<p>营服、便利贴、笔什么的……右边那个神秘的绿色小袋子打开以后是个背包！！！</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-151138.jpg" alt="材料"></p>
<p>校园卡，接下来几天吃饭就靠这个啦：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-170723.jpg" alt="校园卡"></p>
<p>在学校里面随便逛了逛，下面是各种：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-171600.jpg" alt="图书馆"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-172027.jpg" alt="学院"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-175230.jpg" alt="湖"></p>
<p>校外十字路口：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-182400.jpg" alt="十字路口"></p>
<p>校内食堂：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-165645.jpg" alt="食堂"></p>
<p>吃的东西还不错哦：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-111958.jpg" alt="大鸡腿"></p>
<hr>
<h1 id="Day_One">Day One</h1><hr>
<p>上午，开营仪式：</p>
<p>整个学校各个学院的夏令营成员都在这里。大约有一千多吧。。。中科大真是大手笔。。。</p>
<p>科大本科生与研究生的比例大约是 1:1.9 左右，算是个完完全全的研究性大学了。</p>
<p>研究内容包含了各种前言的科技：物理、化学、生物、计算机……各种</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-082736.jpg" alt="开营仪式1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-082828.jpg" alt="开营仪式2"></p>
<p>校史馆：</p>
<p>这位走来的是我们的志愿者廖东亮大大~~</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-104516.jpg" alt="校史馆"></p>
<p>科大校训里面都有“又红又专”几个字，刚听到的时候真是满满的汗呐……不过想想也是，中科大头顶就是中科院，中央最核心的研究精神一脉相承，必然是得“红”啦……</p>
<p>好处就是很多项目都是直接跟中科院那边搭上的，科研经费、设备这方面也都能够拿到很多资源。</p>
<p>校史馆里面的各种实物藏品：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-111249.jpg" alt="发动机"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-111258.jpg" alt="质子加速"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-111313.jpg" alt="VAX"></p>
<p>看，卫星！</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-111329.jpg" alt="东方红"></p>
<hr>
<p>下午，参观先研院以及科大讯飞</p>
<p>路上顺手留一张：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-133337.jpg" alt="此处应有自拍"></p>
<p>先研院大楼：</p>
<p>先进技术研究院，算是科大的一个校区吧，比较尖端的一些技术方向会在这边进行研究。也有很多是跟各个企业进行联系合作的实验室。</p>
<p>话说这一片是新建的，科研环境和生活环境那是没的说~~就是能不能来这里还得看导师的项目情况</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-141750.jpg" alt="先研院大楼"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-142443.jpg" alt="先研院景色"></p>
<p>先研院X楼：</p>
<p>整个楼据说从上方往下看就是一个大X哦</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-143535.jpg" alt="X楼"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-144259.jpg" alt="先研院1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-145316.jpg" alt="先研院2"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-145627.jpg" alt="先研院3"></p>
<p>龙芯什么的，各种尖端研究平台。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-152035.jpg" alt="龙芯"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-155737.jpg" alt="先研院4"></p>
<p>科大讯飞：</p>
<p>科大讯飞就是讯飞输入法、讯飞语音啥的。。。</p>
<p>核心科技是语音识别起家。</p>
<p>而搞好语音识别之后，剩下再发展就是类似科幻片里面那种人工智能的系统了，然而他们目前做出来的东西，确实已经让我觉得有点科幻的感觉了。这也是他们正在研究的“超脑”系统。</p>
<p>科大负责新技术的研发，讯飞集团这边负责把技术转化为产品。</p>
<blockquote>
<p>果然几天之后的导师面上，这个方向的导师真是被学生抢破门槛啊。。。0.0</p>
</blockquote>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-161603.jpg" alt="科大讯飞"></p>
<h1 id="Day_Two">Day Two</h1><hr>
<p>上午计算机学院开营仪式以及各实验室宣讲。</p>
<p>各个实验室的大牛导师纷纷使出浑身解数各种拉人，介绍各个实验室出过的论文、国家项目、资金什么的。</p>
<p>中科大计算机学院一共有10个左右的实验室，每个都各有特色，研究方向各有长处。</p>
<p>然而来的时候的目标就是<a href="">安虹教授</a>了，听了介绍下感觉还不错。目标更加坚定了。</p>
<hr>
<p>下午西区实验室参观，主要就是科技楼这块。</p>
<p>在14楼又听了一次安教授的介绍。</p>
<p>先进系统结构研究所。</p>
<p>主要方向是计算机系统结构设计，超级计算机、并行运算优化方面的工作。</p>
<p>安虹教授本人也是曾经参与龙芯好几代设计的核心计算机科学家。</p>
<p>感觉能跟她的不少教学理念都能契合上。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50721-174102.jpg" alt="安虹PPT"></p>
<h1 id="Day_Three">Day Three</h1><hr>
<p>上午，东区实验室、超算中心参观</p>
<p>超算中心大楼：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-081703.jpg" alt="超算中心"></p>
<p>下面就是各种超级计算机机群，整个机房里面都是各种风扇的轰鸣声，不过据说最大的一台不在这里放着</p>
<p>对计算机的兴趣就是觉得人类能够制造出瞬时计算速度如此庞大的设备来，特别是像超级计算机，代表了人类工业史上当前水平运算能力的极限！！</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085014.jpg" alt="超算中心1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085055.jpg" alt="超算中心2"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085222.jpg" alt="超算中心3"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085255.jpg" alt="超算中心4"></p>
<p>一般的超算机组其实也就是一堆服务器连在一起，主要需要处理的是超多核心机群的并行协同方面的问题。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085641.jpg" alt="超算中心5"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-090105.jpg" alt="超算中心6"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-091150.jpg" alt="龙芯"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-091432.jpg" alt="超算中心7"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-091713.jpg" alt="超算中心8"></p>
<p>曙光I号：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-090711.jpg" alt="曙光I号"></p>
<p>由于我的目标已经基本上确定了，所以这边的实验室都没有具体再去逛了，也是听完各个导师的介绍就返回了宾馆。</p>
<hr>
<p>下午，冷餐会：</p>
<p>主要还是提供一个学生与导师之间相互交流的环境，活动啊、游戏啊什么的</p>
<p>Besides……好多吃的啊，科大真心大手笔~~~赞一个！！！</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-140113.jpg" alt="冷餐会1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-140215.jpg" alt="冷餐会2"></p>
<p>Rio和蛋挞：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-143203.jpg" alt="Rio"></p>
<p>好多KFC蛋挞哇：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-154156.jpg" alt="蛋挞"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-160030.jpg" alt="冷餐会3"></p>
<p>我是不会告诉你活动结束的时候我往书包里面塞了4盒蛋挞，然后抓了一大瓶没开过的可乐带回去了的。。。0~0</p>
<h1 id="Day_Four">Day Four</h1><hr>
<p>面试啦啦啦啦~！！！！</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50723-083608.jpg" alt="面试1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50723-101739.jpg" alt="面试2"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50723-101751.jpg" alt="面试3"></p>
<p>导师们都比较好，聊的挺开心。</p>
<p>刚开始背好了自我介绍，准备一进去啥都不说直接先背，结果人家一上来第一句话“这个姓怎么读？”……顿时就……</p>
<p>面试也是挺顺利地就过了</p>
<hr>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-20150723125217.png" alt="面试通过-系统"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50723-123714.jpg" alt="面试合格证"></p>
<p>下午也找到之前看好的安虹教授，坐聊了一下午，也是终于把接受意向谈妥了（有小伙伴觉得在她那边聊的时间太久，都没空去另外的实验室面试了，然而我的目标本来就这一个，聊的很开心）</p>
<p>至此，顺利通过学院面试，也顺利得到了导师的接收承诺，本次科大之旅终于可以说是圆满完成了！</p>
<p>同房间的西交童鞋也顺利拿到了导师的offer！</p>
<h1 id="Day_Five">Day Five</h1><hr>
<p>除了吃饭之外。。。今天算是在宾馆待了一整天吧，昨天谈妥了导师之后，剩下的就是邮件跟导师更多点交流了。</p>
<p>感觉上还是挺顺利，对这个结果也是挺满意的。科大的计算机体系结构在国内也是顶尖了，尤其还有超级计算机这样的硬件设备支持，另外也有很多机会接触龙芯、中科院计算所这些项目。</p>
<p>原本是考虑国内的学习比较心仪浙大的软硬件协同实验室，经过这次考察学习经历之后，中科大已经是我最满意的选择了！！</p>
<blockquote>
<p>然而又想只试这么几个就结束了，会不会太没追求了……</p>
</blockquote>
<hr>
<p>要说总结的话，还是要自信吧。</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=156050&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>多图预警！！！<br>千万不要用流量打开本帖！！！<br>0.0<br></blockquote>

<p>7月19日到达USTC中科大，开始为期5天的夏令营。</p>
<p>拍了一堆照片记录下这几天的历程。。。</p>
<p>Hoho~~</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-150859.jpg" alt="营服"></p>]]>
    
    </summary>
    
      <category term="USTC" scheme="http://jcf94.github.io/tags/USTC/"/>
    
      <category term="保研" scheme="http://jcf94.github.io/tags/%E4%BF%9D%E7%A0%94/"/>
    
      <category term="图集" scheme="http://jcf94.github.io/tags/%E5%9B%BE%E9%9B%86/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Developing Your Musicianship 学习笔记（未完成）]]></title>
    <link href="http://jcf94.github.io/2015/07/21/2015-07-21-music/"/>
    <id>http://jcf94.github.io/2015/07/21/2015-07-21-music/</id>
    <published>2015-07-21T12:03:39.000Z</published>
    <updated>2015-08-20T13:08:37.454Z</updated>
    <content type="html"><![CDATA[<p>去年在Coursera上学过一段时间的基础乐理，可惜后来还是没完成…重新整理一下</p>
<hr>
<p><a href="http://mooc.guokr.com/course/841/Developing-Your-Musicianship/" target="_blank" rel="external">MOOC课程地址</a></p>
<p>本门课的授课讲师是George Russell，来自伯克利音乐学院。</p>
<p>这门课旨在介绍简单的乐理知识，对于我这种音乐白痴来说简直是太适合了，而且看评论作业比较少，一周交一次，还是很方便滴。。。</p>
<a id="more"></a>
<p>这门课之前已经开过一次了，所以视频和字幕早都有人整理过了：</p>
<p><a href="http://pan.baidu.com/s/1kT2t2Az#dir" target="_blank" rel="external">百度网盘</a></p>
<h1 id="第一周">第一周</h1><hr>
<p>视频目录：</p>
<p>•1-1 Berklee Faculty/Student Spotlight: Why Are Harmony and Ear Training Important? (4:11)</p>
<p>•1-2 Welcome to the Course (4:18)</p>
<p>•1-3 Important Definitions (4:01)</p>
<p>•1-4 Structure of the Major Scale (4:23)</p>
<p>•1-5 Sharps and Flats (1:33)</p>
<p>•1-6 Major 2nd and 3rd Intervals (4:18)</p>
<p>•1-7 Major 2nd and Major 3rd Interval Practice (1:47)</p>
<p>•1-8 Tonal Center (7:51)</p>
<p>•1-9 Lesson Review and Assignment Overview (2:50)</p>
<p>•1-10 Berklee Student Performance: Boston Marathon, “I Don’t Have a Song for That” (5:41)</p>
<hr>
<p>1-1 是对课程的整体介绍</p>
<p>1-2 差不多还是介绍，闲扯，然后展现一下老师的钢琴功力</p>
<p>1-3 乐理的基本定义。真正的课程从这里开始</p>
<p>和弦 chords；音阶 scales；旋律 melodies；</p>
<p>和声 Harmony: The study of chords, scales and melodies；</p>
<p>练耳 Ear Training: Indentifying what your ear hears；</p>
<p>音程 Interval: The distance between two notes；从基调开始，按照大调音阶数，大调音阶下节课有讲。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-21-music-1.jpg" alt="1"></p>
<p>1-4 大调音阶</p>
<p>全音 whole steps；半音 half steps；</p>
<p>半音是键盘上相邻两个键的音，不分黑白键，两个半音组合成一个全音。所以一个大调音阶里面是全半音结合的，因为钢琴键盘上不是所有的白键中间都有黑键。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-21-music-2.jpg" alt="2"></p>
<p>1-5 升降调</p>
<p>降半音 flat；升半音 sharp；</p>
<p>一个音升降半个音。</p>
<p>举例：</p>
<p>D音，降半音为 D flat（或者其实就是 C sharp），升半音为 D sharp（E flat）。</p>
<p>F音，这个跟其他的比有点特殊的是降半音是E，因为E，F之间没有黑键，升半音为 F sharp（G flat）。</p>
<p>1-6 大二调和大三调音程</p>
<p>1-7 大二调和大三调音程练习</p>
<p>耳残哭晕在厕所……</p>
<p>1-8 调性中心</p>
<p>调性中心 tonal center: The tonic or “Do” of the scale, or scale degree 1；听一首曲子中听到其中的主音就是调性中心</p>
<p>和弦建立在那个键的基础上…（还是觉得好抽象…） the key!!!</p>
<p>后面的学生练习演示部分根本听不出出来有什么区别好么……..</p>
<p>作业怎么办……..各种汗……</p>
<p>1-9 布置作业了</p>
<p>•Write in your own words the definitions of harmony, ear training, and interval. </p>
<p>•Find three recordings of songs in the key of C and post links to performances of them that you find on YouTube, Vimeo, Dailymotion, or a similar public video site.</p>
<p>•Write the C major scale on the staff by hand.</p>
<p>due on Wed 30 Jul 5:00 am</p>
<p>然后就 see you next week 了，要滚去写作业了</p>
<p>1-10 伯克利音乐学院学生的表演</p>
<h1 id="第二周">第二周</h1><hr>
<p>已经迫不及待要开始第二周的学习了~</p>
<p>2-1 What’s Your Story</p>
<p>2-2 复习了一下上周所学的内容，其实也没多少</p>
<p>2-3 这节主要要讲纯四度和纯五度</p>
<p>Perfect 4th：纯四度。大调音阶中距离为四的音</p>
<p>可以用婚礼进行曲最熟悉的一段来记，就是“当~当当当，当~当当当”，前一段是纯四度，应该是，Do Fa Fa Fa</p>
<p>Perfect 5th：纯五度。大调音阶中距离为五的音</p>
<p>记忆方法是《小星星》，Do Do So So La La So</p>
<p>2-4 大二度、大三度、纯四度、纯五度综合练习</p>
<p>视频里面有一些小练习</p>
<p>不过如果要更熟练掌握还需要再多加练习，Ear Traing还是很有必要的，能确定好音程的话，知道是哪一个大调那就可以听着曲子把谱扒下来了。</p>
<p>2-5 三和弦</p>
<p>Triads：三和弦，由大调音阶的三个级组成</p>
<p>Major Triads：大三和弦，由每个调的根音第三音和第五音组成</p>
<p>也就是一个大三度，加上，一个小三度</p>
<p>C大三和弦：C-E-G，C调中的I级和弦</p>
<p>F大三和弦：F-A-C，C调中的IV级和弦</p>
<p>G大三和弦：G-B-D，C调中的V级和弦</p>
<p>Minor Traids：小三和弦，把大三和弦中间的音降半音</p>
<p>也就是一个小三度，加上，一个大三度</p>
<p>C小三和弦：C-bE（#D）-G</p>
<p>F大三和弦：F-bA（#G）-C</p>
<p>Major 和弦听上去更明亮点，Minor要灰暗一些……</p>
<p>耳残表示这个对我来说真心太难了，真心听不出来，后面的练习全错……</p>
<p>2-6 三级和弦的进程</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-21-music-3.jpg" alt="3"></p>
<p>很多乐曲都由这些基本的和弦进程组成的</p>
<p>首先从第一个开始，I-&gt;IV-&gt;V-&gt;I</p>
<p>这里，I级和弦是主和弦，IV级和弦是下属和弦，V级和弦是属和弦</p>
<p>主和弦是基础，调性中心，下属和弦比属和弦低一个音级，这里的属和弦（IV级）由于导音的影响，又回到I级和弦的趋势</p>
<p>然后：I-&gt;V-&gt;IV-&gt;V-&gt;I</p>
<p>第三个：IV-&gt;V-&gt;IV-&gt;I</p>
<p>第四个：V-&gt;IV-&gt;V-&gt;I</p>
<p>2-7 课程总结+作业</p>
<p>作业也是比较简单的，而且主要以练习练耳为主。电脑上可以装everyone piano这个软件，配合一个比较好点的音源+一个完整的电脑键盘就能拿来练习钢琴了。</p>
<p>•Practice the major triads on the keyboard.</p>
<p>•Practice the C major scale on the keyboard.</p>
<p>•Write  C, F, and G major triads on staff paper.</p>
<p>2-8 然后又是一个amazing的学生作品，，，棒极~</p>
<p>see you next week~</p>
<h1 id="第三周">第三周</h1><hr>
<p>Week Three Start!</p>
<p>3-1 一些音乐学习建议</p>
<p>说的很好</p>
<p>3-2 复习</p>
<p>开始新一周的学习之前，还是老样子，首先复习一下之前学过的内容</p>
<p>开场的一段弹奏是 Wade in the water，用以向我们介绍 Minor Pentatonic Scale 小调五音阶</p>
<p>大调音阶、三和弦、调性中心、I VI V级和弦</p>
<p>3-3 大六度和大七度音程</p>
<p>Major 6th 大六度、Major 7th 大七度</p>
<p>大七度可能是最难的一个音程</p>
<p>顺利完成后面的几个练习</p>
<p>各种音程还是需要多听，多练耳才能熟练掌握</p>
<p>3-4 小调五音阶</p>
<p>小调五音阶由五个音阶组成（大汗……什么鬼东西）</p>
<p>还是从C大调开始，五个分别是 C-Eb-F-G-Bb-C，最后回到C</p>
<p>或者 1-b3-4-5-b7-1</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-21-music-4.jpg" alt="4"></p>
<p>为了记忆，教了一首小歌（算歌吧……-_-////）</p>
<p>后面是一段 Big Performance~~！！！！！</p>
<p>简直帅爆~！！！！！</p>
<p>3-5 复习和作业</p>
<p>怎么感觉好少的样纸…第二周和第三周都是…</p>
<p>anyway，复习完之后确实就结束了</p>
<p>除了练习之外，应该还是找曲子……不过为什么是附加作业，这个看样子不太好找呀</p>
<p>•Practice the minor pentatonic scale on the keyboard.  Make sure to play up and down the scale. </p>
<p> Download these play along tracks to practice the minor pentatonic scale with:</p>
<p>Play Along 1 MP3  (To download Right-click (PC) or Control-click (MAC) and choose “Save Link As” from the menu)</p>
<p>Play Along 2 MP3</p>
<p>•Find a song that features a Major 6th interval in the melody.</p>
<p>•For bonus points, find a song that features a Major 7th interval in the melody.</p>
<p>3-6 amazing 的表演</p>
<p>See you next week~！</p>
<p>话说8月2号的时候，第一周的作业结果出了，拿了45/50，有一个概念理解上出现了小问题。其他同学在评价的时候给出了解释，练耳跟绝对音感是不一样的</p>
<h1 id="第四周">第四周</h1><hr>
<p>不知不觉居然已经到了第四周了….0.0</p>
<p>4-1 Tips，可惜咱以后并不打算走音乐路…</p>
<p>4-2 老样子，复习</p>
<p>小调五音阶 可能是美国音乐史上用的最多的音阶</p>
<p>4-3 七和弦</p>
<p>C Major 7th Chords：C大调的大七和弦</p>
<p>C大三和弦+第七个音，即：C - E - G - B</p>
<p>一种快速找到第七音的方法是，根音降半调，再升上去一个八度</p>
<p>F大七和弦：F - A - C - E</p>
<p>这俩和弦确实都挺好听，只用这两个就能弹出比较好听的曲子了</p>
<p>属七和弦：在大七和弦的基础上，七音降半调</p>
<p>C属七和弦：C - E - G - Bb</p>
<p>4-4 七和弦和蓝调音乐</p>
<p>G属七和弦：G - A - B - D - F</p>
<p>属七和弦中的：</p>
<p>I级：C7：C - E - G - Bb</p>
<p>IV级：F7：F - A - C - Eb</p>
<p>V级：G7：G - A - C - E</p>
<p>蓝调音乐就是由这些和弦组成的</p>
<p>小调五音阶+属七和弦写蓝调即兴：</p>
<p>很炫酷的方法0.0：</p>
<p>用小调五声音阶在开始的两个小节写一段简单的旋律，然后两小节休止，到第五小节重复前面的旋律。七八休止，九十稍微变化旋律，十一再休止。</p>
<p>和弦部分只要用到三级属七和弦即可：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-21-music-5.jpg" alt="5"></p>
<p>4-5 又到了我最怕的练习时间了</p>
<p>……</p>
<p>老师说：大七和弦给人一种轻松愉悦的感觉，而属七和弦的效果带有一丝张力</p>
<p>在我看来，属七和弦听上去没有大七和弦那么纯粹，属七和弦末尾有种颤音之类的感觉（大概就是他说的紧张感？），所以还是可以区分出来滴</p>
<p>4-6 作业时间</p>
<p>•Practice the C and F Major 7th chords.</p>
<p>•Practice the C, F, and G Dominant 7th Chords.</p>
<p>•Practice the blues progression by playing the C, F, and G Dominant 7th chords. The blues progression is on page 4 of your study guide.</p>
<p>•Find a song that features a blues progression.</p>
<p>Have a nice day~!</p>
<h1 id="第五周">第五周</h1><hr>
<p>5-1 音乐职业介绍</p>
<p>5-2 复习+新的大七和弦顺序介绍</p>
<p>演奏同一种和弦的另一种方式，但是效果会不同</p>
<p>5-3 曲式</p>
<p>Form: The overall structure of a piece of music.</p>
<p>AABA顺序</p>
<p>拍子的问题：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-21-music-6.jpg" alt="6"></p>
<p>上面的数字表示每小节有几拍</p>
<p>下面的数字表示以哪一个长度的音符作为一拍</p>
<p>之前的蓝调也算是一种曲式</p>
<p>……..-_-////后面弹的这什么玩意……</p>
<p>5-4 4/4拍子和4/3拍子</p>
<p>5-5 基本和弦谱</p>
<p>这是一个标准12小节的蓝调和弦谱：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-21-music-7.jpg" alt="7"></p>
<p>最后一小节可以用C7或者G7</p>
<p>5-6 复习+作业</p>
<hr>
<h1 id="断了">断了</h1><p>Oh…后来学到这里就断掉了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>去年在Coursera上学过一段时间的基础乐理，可惜后来还是没完成…重新整理一下</p>
<hr>
<p><a href="http://mooc.guokr.com/course/841/Developing-Your-Musicianship/">MOOC课程地址</a></p>
<p>本门课的授课讲师是George Russell，来自伯克利音乐学院。</p>
<p>这门课旨在介绍简单的乐理知识，对于我这种音乐白痴来说简直是太适合了，而且看评论作业比较少，一周交一次，还是很方便滴。。。</p>]]>
    
    </summary>
    
      <category term="Berklee" scheme="http://jcf94.github.io/tags/Berklee/"/>
    
      <category term="Coursera" scheme="http://jcf94.github.io/tags/Coursera/"/>
    
      <category term="乐理" scheme="http://jcf94.github.io/tags/%E4%B9%90%E7%90%86/"/>
    
      <category term="公开课" scheme="http://jcf94.github.io/tags/%E5%85%AC%E5%BC%80%E8%AF%BE/"/>
    
      <category term="音乐" scheme="http://jcf94.github.io/categories/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Next]]></title>
    <link href="http://jcf94.github.io/2015/07/15/2015-07-15-next/"/>
    <id>http://jcf94.github.io/2015/07/15/2015-07-15-next/</id>
    <published>2015-07-15T13:42:19.000Z</published>
    <updated>2015-07-15T14:07:45.000Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>Just as the 26 letters of the English alphabet do not limit how much can be written,<br>the two letters of the computer alphabet do not limit how what computers can do.<br></blockquote>

<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-15-next-jingli.jpg" alt="锦鲤"></p>
<a id="more"></a>
<p>几天前听说王小豪童鞋已经顺利拿到北大化学直博的offer，简直不能再赞啦~</p>
<p>转眼今天已经是7月15了，18号晚踏上征程！！</p>
<p>西安-合肥-广州-回家</p>
<p>希望走完这一路，8月初回到家时，所有的一切都能达成~！</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>Just as the 26 letters of the English alphabet do not limit how much can be written,<br>the two letters of the computer alphabet do not limit how what computers can do.<br></blockquote>

<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-15-next-jingli.jpg" alt="锦鲤"></p>]]>
    
    </summary>
    
      <category term="保研" scheme="http://jcf94.github.io/tags/%E4%BF%9D%E7%A0%94/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Makefile解析]]></title>
    <link href="http://jcf94.github.io/2015/07/13/2015-07-13-makefile/"/>
    <id>http://jcf94.github.io/2015/07/13/2015-07-13-makefile/</id>
    <published>2015-07-13T12:30:54.000Z</published>
    <updated>2015-08-19T10:27:54.080Z</updated>
    <content type="html"><![CDATA[<p>之前啃内核的时候就见过这个东西，整理项目的时候正好用到，顺便好好学习一下。</p>
<p>详见：<a href="http://blog.csdn.net/ruglcc/article/details/7814546/" target="_blank" rel="external">Makefile经典教程(掌握这些足够)</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前啃内核的时候就见过这个东西，整理项目的时候正好用到，顺便好好学习一下。</p>
<p>详见：<a href="http://blog.csdn.net/ruglcc/article/details/7814546/" target="_blank" rel="exter]]>
    </summary>
    
      <category term="Linux" scheme="http://jcf94.github.io/tags/Linux/"/>
    
      <category term="Makefile" scheme="http://jcf94.github.io/tags/Makefile/"/>
    
      <category term="shell" scheme="http://jcf94.github.io/tags/shell/"/>
    
      <category term="内核" scheme="http://jcf94.github.io/tags/%E5%86%85%E6%A0%B8/"/>
    
      <category term="Linux" scheme="http://jcf94.github.io/categories/Linux/"/>
    
      <category term="工具" scheme="http://jcf94.github.io/categories/Linux/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Uzebox]]></title>
    <link href="http://jcf94.github.io/2015/07/12/2015-07-12-uzebox/"/>
    <id>http://jcf94.github.io/2015/07/12/2015-07-12-uzebox/</id>
    <published>2015-07-12T12:30:40.000Z</published>
    <updated>2015-07-15T13:41:26.000Z</updated>
    <content type="html"><![CDATA[<p>大二开始几个小伙伴一起跟<a href="http://john101.jimdo.com/" target="_blank" rel="external">杨俊</a>做了个单片机的小东西</p>
<p>最后感觉也就是水过了</p>
<p>这几天准备重新把资料理出来看看，没准面试可以用一下。</p>
<p>Orz</p>
<p>基本原理:</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-1.jpg" alt="基本原理"></p>
<a id="more"></a>
<p>从核心部分开始：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-2.jpg" alt="总图"></p>
<h1 id="UZEBOX主机">UZEBOX主机</h1><hr>
<p><a href="http://uzebox.org/wiki/index.php?title=Main_Page" target="_blank" rel="external">UZEBOX的Wiki页面</a></p>
<p>具体电路图如上所示，用到的芯片只有两个，单片机和后面的AD转换芯片，剩下的都是一些简单的电路。</p>
<h2 id="硬件部分">硬件部分</h2><h3 id="CPU">CPU</h3><p>CPU采用了ATmega644，8位的AVR单片机，主要功能是完成所有任务。</p>
<ol>
<li>生成视频同步信号</li>
<li>画面的呈现。这包括滚动和确定精度的透明度来抑制背景</li>
<li>混合并且输出音乐和声音效果</li>
<li>读操纵杆按钮状态</li>
<li>读取和处理通过UART的MIDI数据流</li>
<li>处理对SD卡的读写操作</li>
<li>最后也是最重要的一步：运行游戏</li>
</ol>
<p>这块芯片的标准主频是20MHz，但是使用时需要超频到28.6MHz。</p>
<p>因为AD725的工作频率是14.3MHz，为了防止视频信号采样发生混叠，MCU和AD725的信号需要同步发生。</p>
<h3 id="视频信号">视频信号</h3><p>如上图所示，UZEBOX的视频部分主要靠单片机的C口进行输出，以3/3/2的比例向外输出R/G/B视频信号</p>
<p>红和绿都是用3位表示，蓝色信号2位，经过一个R-2R权电阻网络进行简单的DA转换，可以把三种颜色的数字信号转成0~0.7V的模拟信号，然后继续输入AD725，转换成NTSC格式的视频信号</p>
<p>AD725的主要输入信号是前面来的RGB，然后再加上单片机的同步信号和时钟信号辅助，就能完成视频信号的转换了</p>
<h3 id="声音信号">声音信号</h3><p>声音输出只用到了PD7一个口，是单声道信号进行脉冲宽度调制（PWM）产生的。用电阻把输出信号幅值控制在1V的峰峰值即可</p>
<h3 id="手柄">手柄</h3><p>这里用的是一个简单的SNES（Super Nintendo Entertainment System）的手柄。就是一个触发器和一个移位寄存器，单片机读取移位寄存器里面存储的状态即可。</p>
<h2 id="软件部分">软件部分</h2><h3 id="内核">内核</h3><p>内核就是烧录进单片机里面的主要内容。单片机上没有操作系统，因此内核里面的所有部分事实上只能顺序执行，但是因为执行速度足够快，可以表现得像多任务同时工作一样进行。单片机需要同时完成多项任务：产生视频信号、读取手柄的控制信息、播放音乐等等。</p>
<p>主要工作内容是：</p>
<ol>
<li>初始化端口，计时器和其他硬件外围设备重置</li>
<li>生成复合视频AD725所需的同步脉冲</li>
<li>解码音乐数据，产生声音效果</li>
<li>混合四种声音样本</li>
<li>在规律的间隔时间从混合缓冲器中输出声音样本</li>
<li>对控制器按钮和鼠标移动的读取</li>
<li>读取UART中的入栈数据并将其存储到缓冲区中</li>
</ol>
<h3 id="中断">中断</h3><p>内核使用定时器1，即16位的计数器来触发中断。</p>
<p>计时器开始为0，计数到1820，此时它会自动回转到0，并且生成一个中断。</p>
<p>1820的值是由主晶振频率（28.63636MHZ）除以NTSC扫描线率（15.73426KHZ）得到的。</p>
<p>内核中断负责暂停主程序，进行渲染视频和混合音乐。由于速度和时间要求，需要用汇编语言来写。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-3.jpg" alt="中断"></p>
<h3 id="视频引擎">视频引擎</h3><p>内核提供12种不同的工作模式，每种都有不同的特点，用于实现视频绘制</p>
<h3 id="声音引擎">声音引擎</h3><p>音乐处理涉及到音乐乐谱的读取和波封的处理，这里使用的是MIDI这种紧凑格式的音频，纯软件完成</p>
<h2 id="游戏载入">游戏载入</h2><p>从<a href="https://github.com/Uzebox/uzebox" target="_blank" rel="external">github</a>上下到完整的包是这样的</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">demos         <span class="comment">//各种运行工具以及游戏包</span></span><br><span class="line">gfx           <span class="comment">//颜色以及图像资源等</span></span><br><span class="line">kernel        <span class="comment">//内核，包括初始化、运行主程序、中断、视频/音频引擎等</span></span><br><span class="line">tools         <span class="comment">//编译工具</span></span><br><span class="line">Makefile      <span class="comment">//编译文件</span></span><br></pre></td></tr></table></figure>
<p>执行make之后，会在Rom目录下生成一些.hex和.uze的文件</p>
<p>.uze文件是原本生成了.hex文件之后加上首部打包而成</p>
<p>载入的过程可以有两种：</p>
<ol>
<li>直接将游戏包生成好的.hex文件烧录进Atmega644即可</li>
<li>往单片机中烧录gameloader的.hex文件，之后通过读取SD卡中的.uze文件来载入游戏。gameloader占内存4K，剩下还有60K的内存可供游戏调用</li>
</ol>
<h1 id="改进部分">改进部分</h1><hr>
<p>游戏机制作完成之后，我们对其进行了两方面的改进</p>
<h2 id="无线传输">无线传输</h2><p><a href="http://anarchy.translocal.jp/radio/micro/howtotx.html" target="_blank" rel="external">参考Tetsuo Kogawa的网站</a></p>
<p>将视频信号通过一个简易的无线电路发射出去，可以通过一般的CRT电视来接收</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-4.jpg" alt="无线"></p>
<p>该电路非常简化，制作该电路的时候也是使用双面覆铜板完成</p>
<p>所有暴露在外面的导线都是尽可能地贴近覆铜板，使高频信号尽可能地衰减掉</p>
<p>选择一个电视频道，并调节可调电感来使得两个设备相互适配</p>
<p>当发射机与电视机的距离、频率都调整到一个合适的位置时候，电视机上可以清晰地收到显示的游戏画面</p>
<h2 id="无线控制">无线控制</h2><p>通过三轴加速度传感器来对感知空间三维姿态，并通过无线的方式将其传递到另一台主机上，主机进一步向外输出控制信号</p>
<p>这一部分可以代替原始设计中的手柄部分</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>大二开始几个小伙伴一起跟<a href="http://john101.jimdo.com/">杨俊</a>做了个单片机的小东西</p>
<p>最后感觉也就是水过了</p>
<p>这几天准备重新把资料理出来看看，没准面试可以用一下。</p>
<p>Orz</p>
<p>基本原理:</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-1.jpg" alt="基本原理"></p>]]>
    
    </summary>
    
      <category term="单片机" scheme="http://jcf94.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="项目" scheme="http://jcf94.github.io/categories/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的七月]]></title>
    <link href="http://jcf94.github.io/2015/07/09/2015-07-09-qiyue/"/>
    <id>http://jcf94.github.io/2015/07/09/2015-07-09-qiyue/</id>
    <published>2015-07-09T15:12:48.000Z</published>
    <updated>2015-07-15T13:43:34.000Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>这是一年中最火热的日子，<br>我将完成这个很大程度上决定我下半生人生走向的选择<br></blockquote>

<p>骨子里面还是个小人物，我一向是个不愿对自己倾注太多信心的人</p>
<p>一是自己确实拿不出什么值得骄傲的成绩</p>
<p>二是即使在自己擅长的领域内，走得越深，见到过的真正的青年科学家（！！）越多，便越发感到敬畏</p>
<p>拿什么跟人家比？</p>
<hr>
<p>前辈告诉我说要多投，海投，要勇敢地上！</p>
<p>还是怪自己大概也是心气太高吧，一般的看不上，，，拿到太强的目标的邀请函了，却又觉得没有信心了</p>
<hr>
<p>毕竟</p>
<p>CMU、USTC、PKU</p>
<p>哪一个都曾经是我仰望不已的存在。。。。。。</p>
<hr>
<a id="more"></a>
<p>就像是向高空拉了几条钢丝锁，如果顺利，一步登天，如果摔下来，那就真是一点后路都没有留下了。</p>
<p>幸而投出去的夏令营已经3中2，而剩下的最后一个也有很大的希望能过。</p>
<hr>
<p>尽管最想去的那一个告诉我的是高达80%的淘汰率，呵呵，，</p>
<hr>
<p>趁着这段时间把以前学过的专业课好好复习下，然后给自己补补英语！</p>
<hr>
<p>无论最终结果会如何，已经无畏地出发在路上了，那是我的星辰大海！！</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=26608576&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>这是一年中最火热的日子，<br>我将完成这个很大程度上决定我下半生人生走向的选择<br></blockquote>

<p>骨子里面还是个小人物，我一向是个不愿对自己倾注太多信心的人</p>
<p>一是自己确实拿不出什么值得骄傲的成绩</p>
<p>二是即使在自己擅长的领域内，走得越深，见到过的真正的青年科学家（！！）越多，便越发感到敬畏</p>
<p>拿什么跟人家比？</p>
<hr>
<p>前辈告诉我说要多投，海投，要勇敢地上！</p>
<p>还是怪自己大概也是心气太高吧，一般的看不上，，，拿到太强的目标的邀请函了，却又觉得没有信心了</p>
<hr>
<p>毕竟</p>
<p>CMU、USTC、PKU</p>
<p>哪一个都曾经是我仰望不已的存在。。。。。。</p>
<hr>]]>
    
    </summary>
    
      <category term="保研" scheme="http://jcf94.github.io/tags/%E4%BF%9D%E7%A0%94/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 1402 A * B Problem Plus 快速高精度乘法（FFT）]]></title>
    <link href="http://jcf94.github.io/2015/07/06/2015-07-06-HDU-1402/"/>
    <id>http://jcf94.github.io/2015/07/06/2015-07-06-HDU-1402/</id>
    <published>2015-07-06T02:50:03.000Z</published>
    <updated>2015-07-13T01:47:14.000Z</updated>
    <content type="html"><![CDATA[<h1 id="A_*_B_Problem_Plus">A * B Problem Plus</h1><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p>
<h2 id="Problem_Description">Problem Description</h2><p>Calculate A * B.</p>
<h2 id="Input">Input</h2><p>Each line will contain two integers A and B. Process to end of file.</p>
<p>Note: the length of each integer will not exceed 50000.</p>
<a id="more"></a>
<h2 id="Output">Output</h2><p>For each case, output A * B in one line.</p>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>1<br>2<br>1000<br>2</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>2<br>2000</p>
</blockquote>
<h2 id="题意">题意</h2><p>做两个超大数的乘法，每个数极限是50000位，略大，一般普通的模拟高精会超时</p>
<h2 id="分析">分析</h2><p>普通的模拟高精是$O(n^2)$的复杂度，对于这种特殊的50000长的数据自然是会超了的</p>
<p>故本题的解法就是借用FFT加速的高精度乘法，复杂度在$O(nlogn)$</p>
<p>FFT的详细分析在上一篇中已经讲清楚了，本题即作为模板题</p>
<p>我的模板是在原来自己搞的高精的基础上改的，最初的高精用了4位押位，然而套上这个之后，发现FFT中间的结果大小跟位数也有关，当位数大到一定程度的时候，4位押位在int下会爆。。。然后50000位的极限数据在3位押位下都会爆int。。。好可怕</p>
<p>最后改到2位押位。</p>
<p>大概是我原本的输入输出部分模板写的不好，网上找的参考代码能在100ms以内过，我的这个需要花700ms左右。。。（捂脸）</p>
<blockquote>
<p>下次用的时候考虑是不是需要套原本的高精模板，还有要注意押位的位数问题</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">MYID	: Chen Fan</span><br><span class="line">LANG	: G++</span><br><span class="line">PROG	: FFT</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> nn 70000</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> snn 60000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> gjtype</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> a[nn];</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ntog</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> s)</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		clean();</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    	<span class="keyword">while</span> (s&gt;<span class="number">0</span>)</span><br><span class="line">    	&#123;</span><br><span class="line">    		i++;</span><br><span class="line">       		a[i]=s%<span class="number">100</span>;</span><br><span class="line">       		s=s/<span class="number">100</span>;</span><br><span class="line">   		&#125;</span><br><span class="line">   		a[<span class="number">0</span>]=i;</span><br><span class="line">   	&#125;</span><br><span class="line">   	<span class="function"><span class="keyword">void</span> <span class="title">stog</span><span class="params">(<span class="keyword">char</span> s1[])</span></span><br><span class="line">   	</span>&#123;</span><br><span class="line">   		clean();</span><br><span class="line">        <span class="keyword">char</span> ss[snn],s[snn];</span><br><span class="line">        <span class="keyword">bool</span> pos=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (s1[<span class="number">0</span>]==<span class="string">'-'</span>) </span><br><span class="line">        &#123;</span><br><span class="line">        	<span class="built_in">strcpy</span>(s,s1+<span class="number">1</span>);</span><br><span class="line">        	pos=<span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="built_in">strcpy</span>(s,s1);</span><br><span class="line">    	<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    	<span class="keyword">while</span> (<span class="built_in">strlen</span>(s)&gt;=<span class="number">2</span>)</span><br><span class="line">    	&#123;</span><br><span class="line">    		i++;</span><br><span class="line">    		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="built_in">strlen</span>(s)-<span class="number">2</span>;j&lt;<span class="built_in">strlen</span>(s);j++)</span><br><span class="line">    		ss[j-<span class="built_in">strlen</span>(s)+<span class="number">2</span>]=s[j];</span><br><span class="line">    		s[<span class="built_in">strlen</span>(s)-<span class="number">2</span>]=<span class="string">'\0'</span>;</span><br><span class="line">    		a[i]=atoi(ss);</span><br><span class="line">    	&#125;</span><br><span class="line">    	<span class="keyword">if</span> (<span class="built_in">strlen</span>(s)&gt;<span class="number">0</span>)</span><br><span class="line">    	&#123;</span><br><span class="line">    		i++;</span><br><span class="line">    		a[i]=atoi(s);</span><br><span class="line">    	&#125;</span><br><span class="line">    	a[<span class="number">0</span>]=i;</span><br><span class="line">    	<span class="keyword">if</span> (!pos) a[a[<span class="number">0</span>]]=-a[a[<span class="number">0</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">out</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">       	<span class="built_in">printf</span>(<span class="string">"%d"</span>,a[a[<span class="number">0</span>]]);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=a[<span class="number">0</span>]-<span class="number">1</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%02d"</span>,a[i]);</span><br><span class="line">		<span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">gjtype a,b,c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(-<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> fstype</span><br><span class="line">&#123;	</span><br><span class="line">	<span class="keyword">double</span> x,y;</span><br><span class="line">	fstype(<span class="keyword">double</span> real = <span class="number">0.0</span>,<span class="keyword">double</span> imag = <span class="number">0.0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		x = real;</span><br><span class="line">		y = imag;</span><br><span class="line">	&#125;</span><br><span class="line">	fstype <span class="keyword">operator</span> -(<span class="keyword">const</span> fstype &amp;b)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> fstype(x-b.x,y-b.y);</span><br><span class="line">	&#125;</span><br><span class="line">	fstype <span class="keyword">operator</span> +(<span class="keyword">const</span> fstype &amp;b)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> fstype(x+b.x,y+b.y);</span><br><span class="line">	&#125;</span><br><span class="line">	fstype <span class="keyword">operator</span> *(<span class="keyword">const</span> fstype &amp;b)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> fstype(x*b.x-y*b.y,x*b.y+y*b.x);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(fstype y[],<span class="keyword">int</span> len,<span class="keyword">int</span> on)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j,k;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>, j = len/<span class="number">2</span>;i &lt;len-<span class="number">1</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (i &lt; j) swap(y[i],y[j]);</span><br><span class="line"></span><br><span class="line">		k = len/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">while</span>(j &gt;= k)</span><br><span class="line">		&#123;</span><br><span class="line">			j -= k;</span><br><span class="line">			k /= <span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(j &lt; k) j += k;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> h = <span class="number">2</span>; h &lt;= len; h &lt;&lt;= <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function">fstype <span class="title">wn</span><span class="params">(<span class="built_in">cos</span>(-on*2*PI/h)</span>,<span class="title">sin</span><span class="params">(-on*2*PI/h)</span>)</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; len;j+=h)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="function">fstype <span class="title">w</span><span class="params">(1,0)</span></span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k = j;k &lt; j+h/<span class="number">2</span>;k++)</span><br><span class="line">			&#123;</span><br><span class="line">				fstype u = y[k];</span><br><span class="line">				fstype t = w*y[k+h/<span class="number">2</span>];</span><br><span class="line">				y[k] = u+t;</span><br><span class="line">				y[k+h/<span class="number">2</span>] = u-t;</span><br><span class="line">				w = w*wn;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(on == -<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	y[i].x /= len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fstype x1[nn],x2[nn];</span><br><span class="line">gjtype cc;</span><br><span class="line"></span><br><span class="line"><span class="function">gjtype <span class="title">fftcheng</span><span class="params">(gjtype aa,gjtype bb)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> len1=aa.a[<span class="number">0</span>],len2=bb.a[<span class="number">0</span>],len=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (len&lt;len1*<span class="number">2</span>||len&lt;len2*<span class="number">2</span>) len&lt;&lt;=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len1;i++) x1[i-<span class="number">1</span>]=fstype(aa.a[i],<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=len1;i&lt;len;i++) x1[i]=fstype(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len2;i++) x2[i-<span class="number">1</span>]=fstype(bb.a[i],<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=len2;i&lt;len;i++) x2[i]=fstype(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	fft(x1,len,<span class="number">1</span>);</span><br><span class="line">	fft(x2,len,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) x1[i]=x1[i]*x2[i];</span><br><span class="line"></span><br><span class="line">	fft(x1,len,-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	cc.clean();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) cc.a[i+<span class="number">1</span>]=(<span class="keyword">int</span>)(x1[i].x+<span class="number">0.5</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cc.a[i+<span class="number">1</span>]+=cc.a[i]/<span class="number">100</span>;</span><br><span class="line">		cc.a[i]%=<span class="number">100</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(cc.a[len] == <span class="number">0</span> &amp;&amp; len &gt; <span class="number">1</span>)len--;</span><br><span class="line"></span><br><span class="line">	cc.a[<span class="number">0</span>]=len;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="comment">//freopen("1.txt","r",stdin);</span></span><br><span class="line">	<span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line"></span><br><span class="line">	gjtype a,b,c;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> s1[snn],s2[snn];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s1,s2)!=EOF)</span><br><span class="line">	&#123;</span><br><span class="line">		a.stog(s1);</span><br><span class="line">		b.stog(s2);</span><br><span class="line"></span><br><span class="line">		c=fftcheng(a,b);</span><br><span class="line">		c.out();</span><br><span class="line"></span><br><span class="line">		<span class="comment">//c=cheng(a,b);</span></span><br><span class="line">		<span class="comment">//c.out();</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="A_*_B_Problem_Plus">A * B Problem Plus</h1><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p>
<h2 id="Problem_Description">Problem Description</h2><p>Calculate A * B.</p>
<h2 id="Input">Input</h2><p>Each line will contain two integers A and B. Process to end of file.</p>
<p>Note: the length of each integer will not exceed 50000.</p>]]>
    
    </summary>
    
      <category term="FFT" scheme="http://jcf94.github.io/tags/FFT/"/>
    
      <category term="高精度算法" scheme="http://jcf94.github.io/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM" scheme="http://jcf94.github.io/categories/ACM/"/>
    
      <category term="训练" scheme="http://jcf94.github.io/categories/ACM/%E8%AE%AD%E7%BB%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[快速傅里叶变换FFT算法的用途]]></title>
    <link href="http://jcf94.github.io/2015/07/05/2015-07-05-fft/"/>
    <id>http://jcf94.github.io/2015/07/05/2015-07-05-fft/</id>
    <published>2015-07-05T06:59:09.000Z</published>
    <updated>2015-07-13T01:47:02.000Z</updated>
    <content type="html"><![CDATA[<p>正好复习信号到FFT了，想起来前段时间放了挺久的FFT大数乘法，顺便研究下。</p>
<p>普通的高精度乘法的复杂度需要$O(n^2)$，用了押位之后，一般押4位的话能够达到$O(n^2/16)$，看上去可能效果不错，但仍然是同一个数量级的。</p>
<p>对付更大一点的变态数据（。。。ACM赛场上很少有卡这货的吧。。。-_-////）就需要用的$O(nlogn)$的FFT大数乘法算法了。</p>
<h1 id="数学基础">数学基础</h1><hr>
<p>首先基础是DFT，FFT是DFT的一种快速算法。</p>
<p>从N点DFT出发：</p>
<a id="more"></a>
<p>$$\begin{align}<br>X[K]&amp;=\sum_{n=0}^{N-1}x[n]e^{-j\frac{2\pi K}{N}n}\\<br>&amp;=\sum_{n=0}^{\frac{N}{2}-1}x[2n]e^{-j\frac{2\pi K}{N}2n}+\sum_{n=0}^{\frac{N}{2}-1}x[2n+1]e^{-j\frac{2\pi K}{N}(2n+1)}\\<br>&amp;=\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}+\sum_{n=0}^{\frac{N}{2}-1}x_2[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}e^{-j\frac{2\pi K}{N}}\\<br>&amp;=X_1[K]+e^{-j\frac{2\pi K}{N}}X_2[K]<br>\end{align}$$</p>
<p>也就是说，通过上述变换，我们成功地将一个N点得DFT拆成了2个$\frac{N}{2}$点的DFT</p>
<p>分析一下复杂度：</p>
<p>首先N点DFT的结果$X[K]$有N点，每个点的计算都要对$x[n]$的n个序列值乘上负指数求和，复杂度是$O(n^2)$</p>
<p>如果每一步都采用上面的那种变换方式，那么可以把多出来的一维降掉，变成$O(nlogn)$，这也就是<strong>快速傅里叶变换（FFT）</strong>了！</p>
<h2 id="更进一步">更进一步</h2><p>然而上面这个式子简化到最后是有问题的。</p>
<p>我们把一个N点的DFT拆成$\frac{N}{2}$点的DFT之后，下面得到的两个序列$X_1[K]$和$X_2[K]$都只有$\frac{N}{2}$点。</p>
<p>也就是说直接这么写，当K大于$\frac{N}{2}-1$之后，放在代码里面，后面部分就会出现<u><strong>数组越界</strong></u>的问题！！</p>
<p>继续分析后面部分：</p>
<p>$$\begin{align}<br>X_1[K]&amp;=\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}\\<br>X_1[\frac{N}{2}+K]&amp;=\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi}{\frac{N}{2}}(\frac{N}{2}+K)n}\\<br>&amp;=\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}e^{-j2\pi n}\\<br>&amp;=-\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}\\<br>&amp;=-X_1[K]<br>\end{align}$$</p>
<p>好，这样问题就解决了。</p>
<p>令：</p>
<p>$$W_N^K=e^{-j\frac{2\pi K}{N}}$$</p>
<p>则重新整理上面的运算单元可以得到：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-05-fft1.png" alt="蝶形运算"></p>
<p>这就是著名的蝶形运算了。</p>
<p>然后整个图画出来是这样的：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-05-fft1.gif" alt="8"></p>
<p>8点FFT</p>
<p>或者：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-05-fft1.jpg" alt="16"></p>
<p>16点FFT</p>
<h2 id="FFT的用途">FFT的用途</h2><p>综上，FFT就是专门为计算机快速运算而设计的，1点变2点，2点变4点，4点变8点……这样就能在原始数据（原数组）的基础上不断计算下一层的结果，最终完成整个DFT的快速计算。</p>
<p>写代码的话，第一步是处理一下最左边一排原始数据的摆放顺序，是按照二进制逆序排过来的，然后一层一层求和迭代即可。</p>
<h1 id="多项式">多项式</h1><hr>
<p>讲完FFT之后，下面重点来了。</p>
<h2 id="多项式的系数表示法">多项式的系数表示法</h2><p>关于变量$x$的多项式可以表示成：</p>
<p>$$A(x)=a_0+a_1x+a_2x^2+…+a_{n-1}x^{n-1}=\sum_{j=0}^{n-1}a_jx^j$$</p>
<p>多项式是个广泛的概念，如果把大数对应到多项式上面去那就是类似这样：</p>
<p>$$1234=4+3*10+2*10^2+1*10^3$$</p>
<p>若有：</p>
<p>$$B(x)=\sum_{j=0}^{n-1}b_jx^j$$</p>
<p>则：</p>
<p>$$A(x)+B(x)\Rightarrow C(x)=\sum_{j=0}^{n-1}c_jx^j$$</p>
<p>$$c_j=a_j+b_j$$</p>
<p>$$A(x)\cdot B(x)\Rightarrow C(x)=\sum_{j=0}^{2n-2}c_jx^j$$</p>
<p>$$c_j=\sum_{k=0}^{j}a_kb_{j-k}$$</p>
<p>分别是多项式加法和多项式乘法</p>
<p>注意：多项式乘法的过程就是<strong>多项式系数卷积</strong></p>
<h2 id="多项式的点值表示法">多项式的点值表示法</h2><p>令：</p>
<p>$$y_k=A(x_k)$$</p>
<p>则一个次数界为n的多项式$A(x)$的点值表示就是n个这样的点值（任意n个）对所形成的集合：</p>
<p>$$\{(x_0,y_0),(x_1,y_1),…,(x_{n-1},y_{n-1})\}$$</p>
<p>从系数表示法写成点值表示法就是简单地说找n个不同的$x$代进去求出$y$，然后写在一起就行了。</p>
<p>然而用点值确定系数就是个线性求解的过程，称为插值，也是可以算的。</p>
<p>那么点值表示法有什么好处呢？</p>
<p>设上面的点值表示是$A(x)$的，如果已知$B(x)$的是：</p>
<p>$$\{(x_0,y’_0),(x_1,y’_1),…,(x_{n-1},y’_{n-1})\}$$</p>
<p>那么：</p>
<p>$$A(x)+B(x)\Rightarrow C(x)=\{(x_0,y_0+y’_0),(x_1,y_1+y’_1),…,(x_{n-1},y_{n-1}+y’_{n-1})\}$$</p>
<p>$$A(x)\cdot B(x)\Rightarrow C(x)=\{(x_0,y_0y’_0),(x_1,y_1y’_1),…,(x_{n-1},y_{n-1}y’_{n-1})\}$$</p>
<p>分别是多项式加法和多项式乘法</p>
<p>关键在于，这里的多项式乘法的复杂度是$O(n)$！！！！！</p>
<blockquote>
<p>因此只要能够想办法快速地进行两种表示法之间的转换，那么就可以先从系数表示法转换成点值表示法，用$O(n)$相乘之后，再快速转换回去，即可做到快速的多项式相乘</p>
</blockquote>
<hr>
<p>所以！！！！</p>
<p>转换的关键就是！！！！</p>
<p>FFT！！！！</p>
<hr>
<p>以下是多项式乘法的过程：</p>
<ol>
<li>次数界增加一倍：通过加入n个值为0的高阶系数，将整个次数界扩充至$2n$</li>
<li>求值，两次FFT分别求出$A(x)$和$B(x)$的长度为$2n$的点值表示$A(\omega)$和$B(\omega)$</li>
<li>逐个相乘得到$C(\omega)$</li>
<li>再做一次FFT，求逆傅里叶变换得到$C(x)$</li>
</ol>
<p>实现代码详见模板题：<a href="/2015/07/06/2015-07-06-HDU-1402/">HDU 1402 A * B Problem Plus 快速高精度乘法（FFT）</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>正好复习信号到FFT了，想起来前段时间放了挺久的FFT大数乘法，顺便研究下。</p>
<p>普通的高精度乘法的复杂度需要$O(n^2)$，用了押位之后，一般押4位的话能够达到$O(n^2/16)$，看上去可能效果不错，但仍然是同一个数量级的。</p>
<p>对付更大一点的变态数据（。。。ACM赛场上很少有卡这货的吧。。。-_-////）就需要用的$O(nlogn)$的FFT大数乘法算法了。</p>
<h1 id="数学基础">数学基础</h1><hr>
<p>首先基础是DFT，FFT是DFT的一种快速算法。</p>
<p>从N点DFT出发：</p>]]>
    
    </summary>
    
      <category term="FFT" scheme="http://jcf94.github.io/tags/FFT/"/>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ACM" scheme="http://jcf94.github.io/categories/ACM/"/>
    
      <category term="算法学习" scheme="http://jcf94.github.io/categories/ACM/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[信号相关专业复习]]></title>
    <link href="http://jcf94.github.io/2015/07/01/2015-07-01-xinhaoxiangguan/"/>
    <id>http://jcf94.github.io/2015/07/01/2015-07-01-xinhaoxiangguan/</id>
    <published>2015-07-01T12:36:56.000Z</published>
    <updated>2015-07-05T08:23:11.000Z</updated>
    <content type="html"><![CDATA[<p>信号系列是通信工程的重点内容，以<strong>复变函数与积分变换</strong>作为基础的数学课程，主要包含<strong>信号与系统</strong>、升级版<strong>数字信号处理</strong>、然后是以<strong>概率论与数理统计</strong>为数学基础课的<strong>信息论</strong>作为通信方面数学上的理论基础、最后得到<strong>通信原理</strong>、应用方面有<strong>移动通信</strong>。</p>
<h1 id="复变函数与积分变换">复变函数与积分变换</h1><hr>
<ul>
<li>欧拉公式：</li>
</ul>
<p>二维平面中点的坐标：$(r\cos\theta,r\sin\theta)$</p>
<p>$$x=r\cos\theta$$</p>
<p>$$y=r\sin\theta$$</p>
<p>$$z=r(\cos\theta+i\sin\theta)=re^{i\theta}$$</p>
<a id="more"></a>
<ul>
<li>傅里叶变换</li>
</ul>
<p>$$\mathscr{F}[f(t)]=F(w)=\int_{-\infty}^{+\infty}f(t)e^{-jwt}dt$$</p>
<p>$$\mathscr{F}^{-1}[F(w)]=f(t)=\frac{1}{2\pi}\int_{-\infty}^{+\infty}F(w)e^{jwt}dw$$</p>
<ul>
<li>冲激函数$\delta(t)$</li>
</ul>
<p>定义：</p>
<p>$$\delta(t)=\begin{cases}\infty,&amp;t=0\\0,&amp;t\neq0\end{cases}$$</p>
<p>$$\int_{-\infty}^{+\infty}\delta(t)dt=1$$</p>
<p>性质：</p>
<p>$$\int_{-\infty}^{+\infty}\delta(t-t_0)f(t)dt=f(t_0)$$</p>
<p>$$\mathscr{F}[\delta(t)]=1$$</p>
<p>$$\mathscr{F}[1]=2\pi\delta(w)$$</p>
<ul>
<li>卷积积分</li>
</ul>
<p>$$f_1(t)*f_2(t)=\int_{-\infty}^{+\infty}f_1(\tau)f_2(t-\tau)d\tau$$</p>
<p>$$\mathscr{F}[f_1(t)*f_2(t)]=F_1(w)F_2(w)$$</p>
<p>$$\mathscr{F}[f_1(t)f_2(t)]=\frac{1}{2\pi}F_1(w)*F_2(w)$$</p>
<ul>
<li>帕塞瓦尔等式</li>
</ul>
<p>又作能量积分公式。</p>
<p>$$\int_{-\infty}^{+\infty}[f(t)]^2dt=\frac{1}{2\pi}|F(w)|^2dw$$</p>
<ul>
<li>拉普拉斯变换</li>
</ul>
<p>$$\mathscr{L}[f(t)]=F(s)=\int_0^{+\infty}f(t)e^{-st}dt$$</p>
<p>$$\mathscr{L}^{-1}[F(s)]=f(t)$$</p>
<ul>
<li>Z变换</li>
</ul>
<p>$$\mathscr{Z}[f(n)]=F(z)=\sum_{i=0}^nf(n)z^{-n}$$</p>
<h1 id="信号与系统">信号与系统</h1><hr>
<ul>
<li>阶跃函数$\epsilon(t)$</li>
</ul>
<p>定义：</p>
<p>$$\epsilon(t)=\begin{cases}0,&amp;t<0\\\frac{1}{2},&t=0\\1,&t>0\end{cases}$$</0\\\frac{1}{2},&t=0\\1,&t></p>
<p>$$\delta(t)=\frac{d\epsilon(t)}{dt}$$</p>
<p>$$\epsilon(t)=\int_{-\infty}^{t}\delta(x)dx$$</p>
<ul>
<li><p>系统的数学模型：描述连续系统的数学模型是微分方程，描述离散系统的数学模型是差分方程。</p>
</li>
<li><p>一个既具有分解特性、又具有零状态线性和零输入线性的系统称为线性系统。</p>
</li>
<li><p>如果系统的参数都是常数，不随时间变化，则称该系统为时不变系统。</p>
</li>
<li><p>线性时不变系统（LTI系统）用常系数微分方程和差分方程来描述。</p>
</li>
</ul>
<p>微分：</p>
<p>$$y^{(n)}(t)+a_{n-1}y^{(n-1)}(t)+…+a_1y^{(1)}(t)+a_0y(t)=b_mf^{(m)}(t)+b_{m-1}f^{(m-1)}(t)+…+b_1f^{(1)}(t)+b_0f(t)$$</p>
<p>或写为：</p>
<p>$$\sum_{j=0}^na_jy^{(j)}(t)=\sum_{i=0}^mb_if^{(i)}(t)$$</p>
<p>差分：</p>
<p>$$y(k)+a_{n-1}y(k-1)+…+a_0y(k-n)=b_mf(k)+b_{m-1}f(k-1)+…+b_0f(k-m)$$</p>
<p>或写为：</p>
<p>$$\sum_{j=0}^na_{n-j}y(k-j)=\sum_{i=0}^mb_{m-i}f(k-i)$$</p>
<ul>
<li>微分方程的齐次解和特解</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th>函数形式</th>
<th>系数</th>
</tr>
</thead>
<tbody>
<tr>
<td>齐次解</td>
<td>自由响应、瞬态响应</td>
<td>系统本身</td>
<td>激励</td>
</tr>
<tr>
<td>特解</td>
<td>强迫响应、稳态响应</td>
<td>激励</td>
<td>激励</td>
</tr>
</tbody>
</table>
<ul>
<li>零输入响应：激励为零时，仅有系统初始状态引起的响应</li>
</ul>
<p>零输入条件下，微分方程右端为零：</p>
<p>$$\sum_{j=0}^na_jy_{zi}^{(j)}(t)=0$$</p>
<ul>
<li><p>零状态响应：系统初始状态为零时，仅由输入信号引起的响应</p>
</li>
<li><p>全响应：初始状态不为零时LTI系统的响应</p>
</li>
</ul>
<p>$$\overbrace{y(t)}^{全响应}=\rlap{\overbrace{\phantom{\sum_{j=1}^nC_{zij}e^{\lambda jt}}}^{零输入响应}}\underbrace{\sum_{j=1}^nC_{zij}e^{\lambda jt}+\rlap{\overbrace{\phantom{\sum_{j=1}^nC_{zsj}e^{\lambda jt}+y_p(t)}}^{零状态响应}}\sum_{j=1}^nC_{zsj}e^{\lambda jt}}_{自由响应}+\underbrace{y_p(t)}_{强迫响应}$$</p>
<ul>
<li>冲激响应：是激励为单位冲激函数$\delta(t)$时，系统的零状态响应。</li>
</ul>
<p>$$h(t)=T[{0},\delta(t)]$$</p>
<p>激励信号$\delta(t)$的作用是<strong>在$t=0$的瞬间给系统输入了若干能量，储存在系统中</strong>，而<strong>在$t&gt;0$时系统的激励为零，只有冲激引入的那些储能在起作用</strong>，因而系统的冲激响应应由上述储能唯一地确定，因此系统的冲激响应在$t&gt;0$时与该系统的零输入响应具有相同的函数形式。</p>
<ul>
<li>阶跃响应：是激励为单位阶跃函数$\epsilon(t)$时，系统的零状态响应。</li>
</ul>
<p>$$g(t)=T[{0},\epsilon(t)]$$</p>
<p>$$h(t)=\frac{dg(t)}{dt}$$</p>
<p>$$g(t)=\int_{-\infty}^th(x)dx$$</p>
<ul>
<li>卷积积分</li>
</ul>
<p><strong><u>由于LTI系统的线性性质，可将输入信号分解为一系列的冲激函数之和（或积分），利用冲激函数对LTI系统的冲激响应，求解LTI系统任意激励的零状态响应。</u></strong></p>
<p>$$f(t-t_1)*\delta(t-t_2)=f(t-t_2)*\delta(t-t_1)=f(t-t1-t2)$$</p>
<p>$$f_1(t-t_1)*f_2(t-t_2)=f_1(t-t_2)*f_2(t-t_1)=f(t-t1-t2)$$</p>
<p>$$f^{(i)}(t)=f_1^{(j)}(t)*f_2^{(i-j)}(t)$$</p>
<ul>
<li>卷积的物理意义</li>
</ul>
<p>从数学上来说卷积就是定义两个函数的一种乘法。</p>
<p>对离散序列来说就是两个多项式的<strong>乘法</strong>。</p>
<p>物理意义就是冲激响应的线性叠加，所谓冲激响应可以看作是两个函数，另一个函数按冲激信号正交展开。</p>
<p>详见知乎：<a href="http://www.zhihu.com/question/21686447" target="_blank" rel="external">卷积的物理意义是什么？</a></p>
<ul>
<li>信号的分解</li>
</ul>
<p>在信号空间中可以找到若干个相互正交的信号作为基本信号，使得信号空间中任一信号均可表示成它们的线性组合。</p>
<ul>
<li>周期信号的傅里叶级数</li>
</ul>
<p>对周期信号进行分解：</p>
<p>$$f(t)=\frac{1}{2}\sum_{n=-\infty}^{\infty}A_ne^{j\psi_n}e^{jn\Omega t}=\sum_{n=-\infty}^{\infty}F_ne^{jn\Omega t}$$</p>
<p>傅里叶系数：</p>
<p>$$F_n=\frac{1}{T}\int_{-\frac{2}{T}}^{\frac{2}{T}}f(t)e^{jn\Omega t}dt,n=0,\pm1,\pm2$$</p>
<p>表明任意周期信号$f(t)$可分解为许多不同频率的虚指数信号$e^{jn\Omega t}$之和，其各分量的复数幅度为$F_n$</p>
<ul>
<li>帕塞瓦尔方程：</li>
</ul>
<p>$$\int_{t_1}^{t_2}f^2(t)dt=\sum_{j=1}^{\infty}C_j^2K_j$$</p>
<p>表明在区间$t_1$和$t_2$之间信号所含有的能量恒等于此信号在完备正交函数集中各正交分量能量的总和</p>
<ul>
<li>频谱密度与傅里叶变换</li>
</ul>
<p>定义频谱密度函数为：</p>
<p>$$F(j\omega)=\lim_{T\to\infty}F_nT=\int_{-\infty}^{\infty}f(t)e^{-j\omega t}dt$$</p>
<p>上式称为傅里叶变换。</p>
<p>$$f(t)=\frac{1}{2\pi}\int_{-\infty}^{\infty}F(j\omega)e^{j\omega t}d\omega$$</p>
<p>$$F(j\omega)=|F(j\omega)|e^{j\psi(\omega)}=R(\omega)+jX(\omega)$$</p>
<ul>
<li>狄里赫利条件</li>
</ul>
<p>傅里叶变换存在的<strong>充分条件</strong>：在无限区间内$f(t)$绝对可积，即：</p>
<p>$$\int_{-\infty}^{\infty}|f(t)|dt&lt;\infty$$</p>
<ul>
<li>变换</li>
</ul>
<table>
<thead>
<tr>
<th>时域</th>
<th>频域</th>
</tr>
</thead>
<tbody>
<tr>
<td>连续</td>
<td>非周期</td>
</tr>
<tr>
<td>离散</td>
<td>周期</td>
</tr>
<tr>
<td>周期</td>
<td>离散</td>
</tr>
<tr>
<td>非周期</td>
<td>连续</td>
</tr>
</tbody>
</table>
<ul>
<li>频移特性/调制特性</li>
</ul>
<p>若：</p>
<p>$$f(t)\leftrightarrow F(j\omega)$$</p>
<p>且$\omega_0$为常数，则：</p>
<p>$$f(t)e^{\pm j\omega_0t}\leftrightarrow F[j(\omega\pm\omega_0)]$$</p>
<ul>
<li><p>信号的能量谱与其自相关函数是一对傅里叶变换</p>
</li>
<li><p>正余弦函数的傅里叶变换</p>
</li>
</ul>
<p>已知常数1的傅里叶变换：</p>
<p>$$\mathscr{F}[1]=2\pi\delta(w)$$</p>
<p>根据频移特性：</p>
<p>$$\mathscr{F}[e^{j\omega_0t}]=2\pi\delta(\omega-\omega_0)$$</p>
<p>$$\mathscr{F}[e^{-j\omega_0t}]=2\pi\delta(\omega+\omega_0)$$</p>
<p>则：</p>
<p>$$\mathscr{F}[cos(\omega_0t)]=\mathscr{F}[\frac{1}{2}(e^{j\omega_0t}+e^{-j\omega_0t})]=\pi[\delta(\omega-\omega_0)+\delta(\omega+\omega_0)]$$</p>
<p>$$\mathscr{F}[sin(\omega_0t)]=\mathscr{F}[\frac{1}{2j}(e^{j\omega_0t}-e^{-j\omega_0t})]=j\pi[\delta(\omega+\omega_0)-\delta(\omega-\omega_0)]$$</p>
<ul>
<li>冲激串序列的傅里叶变换</li>
</ul>
<p>$$\mathscr{F}[\delta_T(t)]=\mathscr{F}[\sum_{m=-\infty}^{\infty}\delta(t-mT)]=\Omega\sum_{n=-\infty}^{\infty}\delta(\omega-n\Omega)=\Omega\delta_{\Omega}(\omega)$$</p>
<ul>
<li>LTI系统的频率响应</li>
</ul>
<p>$$\begin{matrix}f(t)&amp;*&amp;h(t)&amp;=&amp;y(t)\\ \updownarrow&amp;&amp;\updownarrow&amp;&amp;\updownarrow\\ F(j\omega)&amp;\cdot&amp;H(j\omega)&amp;=&amp;Y(j\omega)\end{matrix}$$</p>
<ul>
<li>奈奎斯特采样定理</li>
</ul>
<p>采样：</p>
<p>$$f(t)\times\delta_{T_s}(t)=f_s(t)$$</p>
<p>$$F(j\omega)*\omega_s\delta_{T_s}(\omega)=F_s(j\omega)$$</p>
<p>&gt;</p>
<p>频域上，相当于对原信号进行了无数次搬移，为了防止信号发生混叠，搬移之后的频谱不能重叠。故$\omega_s\geq2\omega_m$。</p>
<p><strong>但这只是充分条件。</strong></p>
<p>压缩采样：<br>1.原始信号在某正交基底上是稀疏的；<br>2.利用观测矩阵对该正交基底进行观测，得到观测值；（也可理解为一种采样，但是采样率可以不受奈奎斯特定理约束）<br>3.传输观测之后的数据；<br>4.恢复原始信号。</p>
<p>类似。。小波变换</p>
<p>知乎上<a href="http://www.zhihu.com/question/24913651" target="_blank" rel="external">对于压缩感知的问题</a></p>
<ul>
<li>拉普拉斯变换与Z变换</li>
</ul>
<p>都是傅里叶变换的几种特殊形式。</p>
<p>拉普拉斯变换-处理连续系统</p>
<p>Z变换-处理离散系统</p>
<h1 id="数字信号处理">数字信号处理</h1><hr>
<ul>
<li>CTFT</li>
</ul>
<p>假设有原始信号：$x(t)$</p>
<p>频率：$f_0$</p>
<p>周期：$T_0=\frac{1}{f_0}$</p>
<p>$\Omega_0=2\pi f_0=\frac{2\pi}{T_0}$</p>
<p>定义连续傅里叶变换：</p>
<p>$$X(j\Omega)=\int_{-\infty}^{\infty}x(t)e^{-j\Omega t}dt$$</p>
<ul>
<li>DTFT</li>
</ul>
<p>令：$x[n]=x(nT_s)$</p>
<p>采样频率：$f_s$</p>
<p>采样周期：$T_s=\frac{1}{f_s}$</p>
<p>$\omega_s=2\pi f_s=\frac{2\pi}{f_s}$</p>
<p>定义离散时间傅里叶变换：</p>
<p>$$X(j\omega)=\sum_{n=-\infty}^{\infty}x[n]e^{-j\omega n}$$</p>
<blockquote>
<p>不是CTFT乘上冲激串序列采样得到的！！！！DTFT直接是函数值，而$f(t)$乘上冲激串序列后变成了一个冲激串序列和函数</p>
</blockquote>
<ul>
<li>DFT</li>
</ul>
<p>把有限长序列看成是周期序列的一个周期，则作N点DFT：</p>
<p>$$X[K]=\sum_{n=0}^{N-1}x[n]e^{-j\frac{2\pi K}{N}n}$$</p>
<p>$$\omega=\frac{2\pi K}{N}$$</p>
<p>$$K=\frac{\omega N}{2\pi}$$</p>
<ul>
<li>FFT</li>
</ul>
<p>参见 <a href="/2015/07/05/2015-07-05-fft/">快速傅里叶变换FFT算法的用途</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>信号系列是通信工程的重点内容，以<strong>复变函数与积分变换</strong>作为基础的数学课程，主要包含<strong>信号与系统</strong>、升级版<strong>数字信号处理</strong>、然后是以<strong>概率论与数理统计</strong>为数学基础课的<strong>信息论</strong>作为通信方面数学上的理论基础、最后得到<strong>通信原理</strong>、应用方面有<strong>移动通信</strong>。</p>
<h1 id="复变函数与积分变换">复变函数与积分变换</h1><hr>
<ul>
<li>欧拉公式：</li>
</ul>
<p>二维平面中点的坐标：$(r\cos\theta,r\sin\theta)$</p>
<p>$$x=r\cos\theta$$</p>
<p>$$y=r\sin\theta$$</p>
<p>$$z=r(\cos\theta+i\sin\theta)=re^{i\theta}$$</p>]]>
    
    </summary>
    
      <category term="信号处理" scheme="http://jcf94.github.io/tags/%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/"/>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="我的大学" scheme="http://jcf94.github.io/categories/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[长大OJ诞生记（三）用HEXO作为主页]]></title>
    <link href="http://jcf94.github.io/2015/07/01/2015-07-01-oj-hexo/"/>
    <id>http://jcf94.github.io/2015/07/01/2015-07-01-oj-hexo/</id>
    <published>2015-07-01T12:16:35.000Z</published>
    <updated>2015-07-13T12:22:04.000Z</updated>
    <content type="html"><![CDATA[<p>之前找Lwy童鞋做的主页用的时间太久了，响应速度等方面现在都出现了一定的问题</p>
<p>正好前段时间搞自己博客的时候看到个带首页的Hexo主题，测试了一下，响应速度各方面都挺适合</p>
<p>顺手给换上了，顺便博文部分可以作为日常通知什么的</p>
<p>然后再顺手修复了一堆bug，重装了一下内网映射的虚拟机，目前稳定性更上一个台阶</p>
<blockquote>
<p>最近都不崩溃了，花生壳稳定得我想哭。。。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前找Lwy童鞋做的主页用的时间太久了，响应速度等方面现在都出现了一定的问题</p>
<p>正好前段时间搞自己博客的时候看到个带首页的Hexo主题，测试了一下，响应速度各方面都挺适合</p>
<p>顺手给换上了，顺便博文部分可以作为日常通知什么的</p>
<p>然后再顺手修]]>
    </summary>
    
      <category term="Hexo" scheme="http://jcf94.github.io/tags/Hexo/"/>
    
      <category term="OJ" scheme="http://jcf94.github.io/tags/OJ/"/>
    
      <category term="网站" scheme="http://jcf94.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[微波技术与天线 复习笔记]]></title>
    <link href="http://jcf94.github.io/2015/06/27/2015/2015-06-27-weibojishuyutianxian/"/>
    <id>http://jcf94.github.io/2015/06/27/2015/2015-06-27-weibojishuyutianxian/</id>
    <published>2015-06-27T04:25:35.000Z</published>
    <updated>2015-06-28T08:16:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="绪论">绪论</h1><hr>
<ul>
<li><p><u><strong>微波</strong>是电磁波谱中介于超短波与红外线之间的波段，频率范围从<strong>300MHz（波长1m）</strong>至<strong>3000GHz（波长0.1mm）</strong></u></p>
</li>
<li><p>微波、天线与电波：三者的共同基础都是<strong>电磁场理论</strong>，是电磁场在<strong>不同边界值条件下</strong>的应用</p>
</li>
</ul>
<p>微波：研究如何<strong>导引</strong>电磁波在微波传输系统中的有效传输</p>
<p>天线：1.有效地辐射或者接受电磁波；2.把无线电波能量转换为导行波能量</p>
<p>电波：分析和研究电波在空间的传播方式和特点</p>
<a id="more"></a>
<h1 id="第一章_均匀传输线理论">第一章 均匀传输线理论</h1><hr>
<ul>
<li><p><u>微波传输线是用传输<strong>微波信息和能量</strong>的各种形式传输系统的总称，它的作用是<strong>引导</strong>电磁波沿一定方向传输，因此又称为<strong>导波系统</strong>，其所引导的电磁波被称为<strong>导行波</strong></u></p>
</li>
<li><p>一般将截面尺寸、形状、媒质分布、材料及边界条件均不变的导波系统称为<strong>规则导波系统</strong></p>
</li>
<li><p>微波无源器件、均匀传输线、有源元器件以及天线一起构成微波系统</p>
</li>
</ul>
<hr>
<ul>
<li><p><u>将传输线上导行波的<strong>电压与电流之比</strong>定义为传输线的<strong>特性阻抗</strong>，用 $Z_0$ 来表示，其倒数称为特性导纳，用$Y_0$来表示</u></p>
</li>
<li><p>常用平行双导线传输线的特性阻抗有<strong>250$\Omega$、400$\Omega$和600$\Omega$</strong>三种</p>
</li>
<li><p>传输线上<strong>任意一点的电压与电流之比</strong>称为传输线在该点的<strong>阻抗</strong></p>
</li>
<li><p>均匀无耗传输线上任意一点的<strong>输入阻抗</strong>与<strong>观察点的位置</strong>、传输线的<strong>特性阻抗</strong>、<strong>终端负载阻抗</strong>及<strong>工作频率</strong>有关</p>
</li>
<li><p>无耗传输线上任意相距<strong>${1 \over 2}$波长阻抗相同，${1 \over 4}$波长阻抗变换</strong></p>
</li>
<li><p><u>定义传输线上任意一点的<strong>反射波电压（或电流）与入射波电压（或电流）</strong>之比为<strong>电压（或电流）的反射系数$\Gamma$</strong></u></p>
</li>
<li><p>终端反射系数：</p>
</li>
</ul>
<p>$$\Gamma_1=\frac {Z_1-Z_0}{Z_1+Z_0}=|\Gamma_1|e^{j\phi_1}$$</p>
<ul>
<li>反射系数：</li>
</ul>
<p>$$\Gamma(z)=|\Gamma_1|e^{-j2\beta z}=|\Gamma_1|e^{j(\phi_1-2\beta z)}$$</p>
<p>$$\Gamma(0)=\Gamma_1$$</p>
<ul>
<li>输入阻抗与反射系数的关系：</li>
</ul>
<p>$$Z_{in}(z)=Z_0\frac{1+\Gamma(z)}{1-\Gamma(z)}$$</p>
<p>$$\Gamma(z)=\frac{Z_{in}(z)-Z_0}{Z_{in}(z)+Z_0}$$</p>
<ul>
<li>相移常数</li>
</ul>
<p>$$\beta=\frac{2\pi f}{c}=\frac{2\pi}{\lambda}$$</p>
<ul>
<li><p>反射系数也具有<strong>${1 \over 2}$波长重复性</strong></p>
</li>
<li><p>当传输线<strong>特性阻抗一定</strong>时，输入阻抗与反射系数有<strong>一一对应</strong>的关系</p>
</li>
<li><p>当$Z_1=Z_0$时，反射系数为0，即终端无反射，称为<strong>负载匹配</strong></p>
</li>
<li><p>定义传输线上<strong>波腹点电压振幅与波节点电压振幅之比</strong>为<strong>电压驻波比</strong></p>
</li>
</ul>
<p>$$\rho=\frac{|U|_{max}}{|U|_{min}}=\frac{1+|\Gamma_1|}{1-|\Gamma_1|}$$</p>
<p>$$\Gamma_1=\frac{\rho-1}{\rho+1}$$</p>
<table>
<thead>
<tr>
<th>无耗传输线的状态</th>
<th>负载阻抗</th>
<th>任意一点的输入阻抗</th>
<th>反射系数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>行波状态</td>
<td>$Z_1=Z_0$</td>
<td>$Z_{in}(z)=Z_0$</td>
<td>$\Gamma_1=0$，终端无反射</td>
<td>负载匹配</td>
</tr>
<tr>
<td>纯驻波状态</td>
<td>短路、开路或纯电抗</td>
<td></td>
<td>$\Gamma_1=1$，终端全反射</td>
<td></td>
</tr>
<tr>
<td>行驻波状态</td>
<td>终端接任意负数阻抗负载</td>
<td></td>
<td></td>
<td>既有行波又有纯驻波</td>
</tr>
</tbody>
</table>
<ul>
<li>行驻波状态时的波腹点和波节点</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>电压幅度</th>
<th>电流幅度</th>
<th>位置</th>
<th>阻抗</th>
</tr>
</thead>
<tbody>
<tr>
<td>波腹点</td>
<td>最大</td>
<td>最小</td>
<td>$z_{max}=\frac{\lambda}{4\pi}\phi_1+n\frac{\lambda}{2}(n=0,1,2,…)$</td>
<td>$R_{max}=Z_0\rho$</td>
</tr>
<tr>
<td>波节点</td>
<td>最小</td>
<td>最大</td>
<td>$z_{min}=\frac{\lambda}{4\pi}\phi_1+(2n\pm 1)\frac{\lambda}{4}(n=0,1,2,…)$</td>
<td>$R_{min}=\frac{Z_0}{\rho}$</td>
</tr>
</tbody>
</table>
<p>可见：</p>
<p>$$R_{max}R_{min}=Z_0^2$$</p>
<p>匹配传输线的特性阻抗：</p>
<p>$$Z_{01}=\sqrt{Z_0R}$$</p>
<hr>
<ul>
<li><p><strong>负载阻抗匹配</strong>：<strong>负载阻抗</strong>等于传输线的特性阻抗，传输线上只有从信源到负载的入射波，而无反射波。<strong>匹配负载完全吸收了由信源入射来的微波功率。</strong></p>
</li>
<li><p><strong>源阻抗匹配</strong>：<strong>电源内阻</strong>等于传输线的特性阻抗。<strong>入射功率不随负载变化。</strong></p>
</li>
<li><p><strong>共轭阻抗匹配</strong>：不匹配电源，当<strong>负载阻抗折合到电源参考面上的输入阻抗</strong>为电源内阻的共轭值时，<strong>负载能得到最大的功率值</strong></p>
</li>
</ul>
<h1 id="第二章_规则金属波导">第二章 规则金属波导</h1><hr>
<ul>
<li><p>当工作波长<strong>小于</strong>截止波长时，此模可以在波导中传输，称为传导模</p>
</li>
<li><p>当工作波长<strong>大于</strong>截止波长时，此模不能在波导中传输，称为截止模</p>
</li>
<li><p>激励波导的三种方法：<strong>电激励、磁激励和电流激励</strong></p>
</li>
</ul>
<h2 id="矩形波导">矩形波导</h2><ul>
<li><p>宽边尺寸a，窄边尺寸b</p>
</li>
<li><p>截止波数：</p>
</li>
</ul>
<p>$$k_{cmn}=\sqrt{(\frac{m\pi}{a})^2+(\frac{n\pi}{b})^2}$$</p>
<ul>
<li>截止波长：</li>
</ul>
<p>$$\lambda_{cTE_{mn}}=\lambda_{cTM_{mn}}=\frac{2\pi}{k_{cmn}}=\frac{2}{\sqrt{(\frac{m}{a})^2+(\frac{n}{b})^2}}$$</p>
<ul>
<li>相移常数</li>
</ul>
<p>$$\beta=\frac{2\pi}{\lambda}\sqrt{1-(\frac{\lambda}{\lambda_c})^2}=\sqrt{k^2-k_c^2}$$</p>
<ul>
<li>相速与波导波长</li>
</ul>
<p>$$\nu_p=\frac{\omega}{\beta}$$<br>$$\lambda_g=\frac{2\pi}{\beta}$$</p>
<ul>
<li>例如：</li>
</ul>
<p>$$\lambda_{cTE_{10}}=2a$$<br>$$\lambda_{cTE_{01}}=2b$$<br>$$\lambda_{cTM_{11}}=\frac{2ab}{\sqrt{a^2+b^2}}$$</p>
<h3 id="TE波">TE波</h3><ul>
<li>$TE_{01}$为<strong>最低次模（主模）</strong>，其余称为高次模</li>
</ul>
<h3 id="TM波">TM波</h3><ul>
<li>$TM_{11}$为<strong>最低次模</strong>，其余均为高次模</li>
</ul>
<h2 id="圆形波导">圆形波导</h2><ul>
<li><p>外导体内径a</p>
</li>
<li><p>截止波数：</p>
</li>
</ul>
<p>$$k_{cTE_{mn}}=\frac{\mu_{mn}}{a}$$<br>$$k_{cTM_{mn}}=\frac{\nu_{mn}}{a}$$</p>
<ul>
<li>截止波长：</li>
</ul>
<p>$$\lambda_{cTE_{mn}}=\frac{2\pi}{k_{cTE_{mn}}}=\frac{2\pi a}{\mu_{mn}}$$<br>$$\lambda_{cTM_{mn}}=\frac{2\pi}{k_{cTM_{mn}}}=\frac{2\pi a}{\nu_{mn}}$$</p>
<ul>
<li>在所有的模式中，$TE_{11}$模截止波最长，其次为$TM_{01}$模，三种典型模式的截止波长为：</li>
</ul>
<p>$$\lambda_{cTE_{11}}=3.4126a$$<br>$$\lambda_{cTM_{01}}=2.6127a$$<br>$$\lambda_{cTE_{01}}=1.6398a$$</p>
<h1 id="第三章_微波集成传输线">第三章 微波集成传输线</h1><hr>
<ul>
<li>各种集成微波传输系统：</li>
</ul>
<ol>
<li><strong>准TEM波传输线</strong>，主要包括微带传输线和共面波导等</li>
<li><strong>非TEM波传输线</strong>，主要包括槽线、鳍线等</li>
<li><strong>开放式介质波导传输线</strong>，主要包括介质波导、镜像波导等</li>
<li><strong>半开放式介质波导</strong>，主要包括H形波导、G形波导等</li>
</ol>
<ul>
<li>对于耦合微带线，可以将激励分为<strong>奇模激励和偶模激励</strong></li>
</ul>
<p>设两线的激励电压分别为$U_1、U_2$，则可表示为两个<strong>等幅同相</strong>电压激励$U_e（奇模激励）$和两个<strong>等幅反相</strong>电压激励$U_o$</p>
<h1 id="第四章_微波网络基础">第四章 微波网络基础</h1><hr>
<ul>
<li>阻抗矩阵：</li>
</ul>
<p>$$U_1=Z_{11}I_1+Z_{12}I_2$$</p>
<p>$$U_2=Z_{21}I_1+Z_{22}I_2$$</p>
<p>$$\begin{bmatrix}U_1\\U_2\end{bmatrix}=\begin{bmatrix}Z_{11}&amp;Z_{12}\\Z_{21}&amp;Z_{22}\end{bmatrix}\begin{bmatrix}I_1\\I_2\end{bmatrix}$$</p>
<p>$$[U]=[Z][I]$$</p>
<p>其中$[U]$为电压矩阵，$[I]$为电流矩阵，$[Z]$为阻抗矩阵，其中$Z_{11}$、$Z_{22}$分别是端口1和端口2的自阻抗，$Z_{12}$、$Z_{21}$分别是端口1和端口2的互阻抗。</p>
<p>$\left.Z_{11}=\frac{U_1}{I_1}\right|_{I_2=0}$为$T_2$面开路时，端口1的输入阻抗</p>
<p>$\left.Z_{12}=\frac{U_1}{I_2}\right|_{I_1=0}$为$T_1$面开路时，端口2至端口1的转移阻抗</p>
<p>$\left.Z_{21}=\frac{U_2}{I_1}\right|_{I_2=0}$为$T_2$面开路时，端口1至端口2的转移阻抗</p>
<p>$\left.Z_{22}=\frac{U_2}{I_2}\right|_{I_1=0}$为$T_1$面开路时，端口2的输入阻抗</p>
<ul>
<li>导纳矩阵</li>
</ul>
<p>$$I_1=Y_{11}U_1+Y_{12}U_2$$</p>
<p>$$I_2=Y_{21}U_1+Y_{22}U_2$$</p>
<p>$$\begin{bmatrix}I_1\\I_2\end{bmatrix}=\begin{bmatrix}Y_{11}&amp;Y_{12}\\Y_{21}&amp;Y_{22}\end{bmatrix}\begin{bmatrix}U_1\\U_2\end{bmatrix}$$</p>
<p>$$[I]=[Y][U]$$</p>
<p>$\left.Y_{11}=\frac{I_1}{U_1}\right|_{U_2=0}$为$T_2$面短路时，端口1的输入导纳</p>
<p>$\left.Y_{12}=\frac{I_1}{U_2}\right|_{U_1=0}$为$T_1$面短路时，端口2至端口1的转移导纳</p>
<p>$\left.Y_{21}=\frac{I_2}{U_1}\right|_{U_2=0}$为$T_2$面短路时，端口1至端口2的转移导纳</p>
<p>$\left.Y_{22}=\frac{I_2}{U_2}\right|_{U_1=0}$为$T_1$面短路时，端口2的输入导纳</p>
<p>$$[Z][Y]=[E]$$</p>
<p>$$[Y]=[Z]^{-1}$$</p>
<ul>
<li>转移矩阵</li>
</ul>
<p>转移矩阵也称为A矩阵</p>
<p>$$U_1=AU_2+B(-I_2)$$</p>
<p>$$I_1=CU_2+D(-I_2)$$</p>
<p>$$\begin{bmatrix}U_1\\I_1\end{bmatrix}=\begin{bmatrix}A&amp;B\\C&amp;D\end{bmatrix}\begin{bmatrix}U_2\\ -I_2\end{bmatrix}$$</p>
<p>$\left.A=\frac{U_1}{U_2}\right|_{I_2=0}$为$T_2$开路时电压的转移参数</p>
<p>$\left.B=\frac{U_1}{-I_2}\right|_{U_2=0}$为$T_2$短路时转移阻抗</p>
<p>$\left.C=\frac{I_1}{U_2}\right|_{I_2=0}$为$T_2$开路时转移导纳</p>
<p>$\left.D=\frac{I_1}{-I_2}\right|_{U_2=0}$为$T_2$短路时电流的转移参数</p>
<p>n个双端口网络级联，则有：</p>
<p>$$[A]=[A_1][A_2]…[A_n]$$</p>
<ul>
<li>散射矩阵</li>
</ul>
<p>对于线性网络，归一化入射波和归一化反射射波之间是线性关系，故有线性方程：</p>
<p>$$b_1=S_{11}a_1+S_{12}a_2$$</p>
<p>$$b_2=S_{21}a_1+S_{22}a_2$$</p>
<p>$$\begin{bmatrix}b_1\\b_2\end{bmatrix}=\begin{bmatrix}S_{11}&amp;S_{12}\\S_{21}&amp;S_{22}\end{bmatrix}\begin{bmatrix}a_1\\a_2\end{bmatrix}$$</p>
<p>$$[b]=[S][a]$$</p>
<p>$\left.S_{11}=\frac{b_1}{a_1}\right|_{a_2=0}$表示端口2匹配时，端口1的反射系数</p>
<p>$\left.S_{12}=\frac{b_1}{a_2}\right|_{a_1=0}$表示端口1匹配时，端口2到端口1的反向传输系数</p>
<p>$\left.S_{21}=\frac{b_2}{a_1}\right|_{a_2=0}$表示端口2匹配时，端口1到端口2的正向传输系数</p>
<p>$\left.S_{22}=\frac{b_2}{a_2}\right|_{a_1=0}$表示端口1匹配时，端口2的反射系数</p>
<p>对于互易网络：$S_{12}=S_{21}$</p>
<p>对于对称网络：$S_{11}=S_{22}$</p>
<p>对于无耗网络：$[S]^+[S]=[E]$<br>其中$[S]^+$是$[S]$的转置共轭矩阵，$[E]$为单位矩阵</p>
<h1 id="第五章_微波元器件">第五章 微波元器件</h1><hr>
<ul>
<li>理想衰减器</li>
</ul>
<p>$$\begin{bmatrix}S_\alpha\end{bmatrix}=\begin{bmatrix}0&amp;e^{-\alpha l}\\e^{-\alpha l}&amp;0\end{bmatrix}$$</p>
<ul>
<li>理想相移器</li>
</ul>
<p>$$\begin{bmatrix}S_\theta\end{bmatrix}=\begin{bmatrix}0&amp;e^{-j\theta}\\e^{-j\theta}&amp;0\end{bmatrix}$$</p>
<ul>
<li>理想隔离器</li>
</ul>
<p>$$\begin{bmatrix}S\end{bmatrix}=\begin{bmatrix}0&amp;0\\1&amp;0\end{bmatrix}$$</p>
<ul>
<li>Y形结环形器</li>
</ul>
<p>$$\begin{bmatrix}S\end{bmatrix}=\begin{bmatrix}S_{11}&amp;S_{12}&amp;S_{13}\\S_{21}&amp;S_{22}&amp;S_{23}\\S_{31}&amp;S_{32}&amp;S_{33}\end{bmatrix}$$</p>
<ul>
<li><strong>定向耦合器</strong>，是一种具有<strong>定向传输特性</strong>的四端口元件。</li>
</ul>
<p>端口1：输入端</p>
<p>端口2：直通输出端</p>
<p>端口3：耦合输出端</p>
<p>端口4：隔离端</p>
<p>性能指标：耦合度、隔离度、定向度、输入驻波比和工作带宽</p>
<h1 id="第六章_天线辐射与接收的基本理论">第六章 天线辐射与接收的基本理论</h1><hr>
<p>*　天线应具有以下功能：</p>
<ol>
<li>天线应能将导波能量尽可能多转变为<strong>电磁波能量</strong></li>
<li>天线应使电磁波尽可能集中于确定的方向上，即<strong>天线具有方向性</strong></li>
<li>天线应能发射或接收规定极化的电磁波，即<strong>天线有适当的极化</strong></li>
<li>天线应有足够的<strong>工作频带</strong></li>
</ol>
<ul>
<li><p><u>电基本振子是一段长度$l$<strong>远小于波长</strong>、电流$I$<strong>振幅均匀分布、相位相同</strong>的直线电流元。它是线天线的基本组成部分，任意线天线均可看成是由一系列电基本振子组成的。</u></p>
</li>
<li><p>天线的电参数：</p>
</li>
</ul>
<ol>
<li><u><strong>天线方向图</strong>：指在<strong>离天线一定距离处</strong>，辐射场的<strong>相对场强（归一化模值）</strong>随方向变化的曲线图，通常采用通过天线最大辐射方向上的<strong>两个相互垂直的</strong>平面方向图来表示</u></li>
<li><u><strong>天线效率</strong>：定义为天线<strong>辐射功率与输入功率</strong>之比</u></li>
<li><u><strong>增益系数</strong>：是综合衡量天线<strong>能量转换和方向特性</strong>的参数，它是<strong>方向系数与天线效率的乘积</strong>，记为G</u></li>
<li><u><strong>极化和交叉极化电平</strong>：极化特性是指天线在<strong>最大辐射方向</strong>上电场矢量的方向<strong>随时间变化</strong>的规律。有线极化、圆极化、椭圆极化等。引入交叉极化电平来表征<strong>线极化的纯度</strong>。</u></li>
<li><u><strong>频带宽度</strong>：当工作频率变化时，天线的<strong>有关电参数不超出规定范围的频率范围</strong>称为天线的频带宽度，简称天线的带宽</u></li>
<li><u><strong>输入阻抗与驻波比</strong></u></li>
<li><u><strong>有效长度</strong>：在保持实际天线最大辐射方向上的<strong>场强值不变</strong>的条件下，假设天线上<strong>电流分布为均匀分布</strong>时天线的<strong>等效长度</strong>。有效长度越长，表明天线的辐射能力越强。</u></li>
</ol>
<h1 id="第七章_电波传播概论"><del>第七章 电波传播概论</del></h1><h1 id="第八章_线天线">第八章 线天线</h1><hr>
<ul>
<li><p>横向尺寸<strong>远小于</strong>纵向尺寸并<strong>小于波长</strong>的细长结构的天线称为线天线</p>
</li>
<li><p><u>为了加强天线的<strong>方向性</strong>，将若干<strong>辐射单元</strong>按某种方式排列所构成的系统称为<strong>天线阵列</strong></u></p>
</li>
<li><p>相似元：各阵元的形状与尺寸相同，且以相同的姿态排列</p>
</li>
<li><p><strong>元因子</strong>$|F(\theta,\varphi)|$表示组成天线阵的<strong>单个辐射元</strong>的方向图函数，其值<strong>仅取决于天线元本身的类型和尺寸</strong>，体现了天线元的方向性对天线阵方向性的影响</p>
</li>
<li><p><strong>阵因子</strong>表示<strong>各向同性元</strong>所组成的天线阵的方向性，其值取决于天线阵的排列方式及其天线元上激励电流的相对振幅和相位</p>
</li>
<li><p>在各天线元为相似元的条件下，天线阵的方向图函数是<strong>单元因子与阵因子之积</strong>，这个特性称为<strong>方向图乘积定理</strong></p>
</li>
<li><p>最大辐射方向在<strong>垂直于阵轴方向</strong>的天线阵称为<strong>边射式直线阵</strong></p>
</li>
<li><p>最大辐射方向在<strong>阵轴方向</strong>的天线阵称为<strong>端射式直线阵</strong></p>
</li>
<li><p><strong>均匀直线阵</strong>是等间距、各阵元电流的幅度<strong>相等（等幅分布）</strong>而相位依次灯亮递增或递减的直线阵</p>
</li>
</ul>
<h1 id="第九章_面天线">第九章 面天线</h1><hr>
<ul>
<li><p>面天线又称口径天线，它所载的电流<strong>沿天线体的金属表面</strong>分布，且面天线的口径尺寸<strong>远大于</strong>工作波长</p>
</li>
<li><p><u><strong>惠更斯-菲涅尔原理</strong>：在空间任意一点的场，是包围天线的<strong>封闭曲面</strong>上各点的<strong>电磁扰动产生的次级辐射</strong>在该点<strong>叠加</strong>的结果</u></p>
</li>
<li><p><strong>旋转抛物面天线</strong>由两部分组成：1.抛物线绕其焦轴旋转而成的抛物反射面；2.置于抛物面焦点处的馈源（照射器）</p>
</li>
</ul>
<h1 id="第十章_微波应用系统"><del>第十章 微波应用系统</del></h1><hr>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="绪论">绪论</h1><hr>
<ul>
<li><p><u><strong>微波</strong>是电磁波谱中介于超短波与红外线之间的波段，频率范围从<strong>300MHz（波长1m）</strong>至<strong>3000GHz（波长0.1mm）</strong></u></p>
</li>
<li><p>微波、天线与电波：三者的共同基础都是<strong>电磁场理论</strong>，是电磁场在<strong>不同边界值条件下</strong>的应用</p>
</li>
</ul>
<p>微波：研究如何<strong>导引</strong>电磁波在微波传输系统中的有效传输</p>
<p>天线：1.有效地辐射或者接受电磁波；2.把无线电波能量转换为导行波能量</p>
<p>电波：分析和研究电波在空间的传播方式和特点</p>]]>
    
    </summary>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="我的大学" scheme="http://jcf94.github.io/categories/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[小记]]></title>
    <link href="http://jcf94.github.io/2015/06/25/2015/2015-06-25-baoyan/"/>
    <id>http://jcf94.github.io/2015/06/25/2015/2015-06-25-baoyan/</id>
    <published>2015-06-25T15:34:09.000Z</published>
    <updated>2015-06-26T14:17:43.000Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>直面现实的时候，才会觉得害怕<br>总有一天我们是要离开象牙塔的<br></blockquote>

<p>今晚被拉去听了我们学院的考研解读会。</p>
<p>其实当初说要求每个班都有要去的人数指标的时候就已经想到了这可能会是个坑了，果然，我说我真没想到我听的第一个宣讲会会是我自己学校的。</p>
<blockquote>
<p>整个解读会的主题就是留本校留本校留本校留本校留本校…</p>
</blockquote>
<p>说真的，其实也是听了今晚院领导的各种“吹”，才赫然发现我们学校，<strong>真心不错</strong>！！也难怪分数线一年比一年高、、、</p>
<p>然而人各有志，也是真心想离开这里。。。</p>
<a id="more"></a>
<hr>
<p>开始投夏令营的时候投了3个，中科大、北大、中山卡耐基，直到今天似乎终于大部分的学校都截止报名了，然后幸而我也收到了第一个确认。</p>
<p>之前想想还是挺忐忑的，虽然以前已经有了两年前PSW保去复旦的先例了，总还是对自己的学校不太有信心。</p>
<blockquote>
<p>知名度太低，谁知道你是个211？没当成<strong>民办三本</strong>就已经很好啦（虽然我们平时自己也是这么自黑的）</p>
</blockquote>
<p>而且纵观我们学院这几年保出去的那些，西交西电居多，如此大胆往这么高的地方投的，可能真的不多吧。</p>
<hr>
<blockquote>
<p>然而我<strong>不甘心</strong>。不甘心我的星辰大海，只有这么点大吧？</p>
</blockquote>
<p>也是怪自己要求太高，直博的不想去，挑计算机，又重点想找自己想学的系统结构比较强的。。。然后最后就只剩几个了。</p>
<p>一边考着试，一边忐忑地等着结果，今天考完了这学期的倒数第二门，距离告别大三只差最后一门仙姑的《微波技术与天线》啦~</p>
<hr>
<blockquote>
<p>得到第一个接收回复算是终于稍微有点底了。</p>
</blockquote>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-25-baoyan-1.jpg" alt="huifu"></p>
<hr>
<p>我现在最想拿的还是中山卡耐基的offer。</p>
<blockquote>
<p>在中大待一年，赴美卡耐基待一年，然后拿到两个学校的学位，留美打拼几年之后再回国。</p>
</blockquote>
<p>想想也是挺好的。</p>
<hr>
<p>日子过得挺累，或许好多事情原本就不应该我去多担心吧。</p>
<p>就是自从去年家里掏空积蓄买了那套房开始，正好又碰上行业不景气，老爸的厂里生意巨差。</p>
<p>也是真的不敢给他们再多压力了，也是想自己赶紧能够出来赚到自己的钱，每次一想到爸妈，就会觉得他们很累。</p>
<blockquote>
<p>之前花了好久考虑到底要不要读研？呵呵，直接毕业出去工作算了。。。</p>
</blockquote>
<p>结果弄到最后我居然想的是出国这条要花更多钱的路？</p>
<p>或许这就是一条专属于程序员的路吧。</p>
<p>我对自己尽最大的可能估测如果能拿到10k/月的薪资已经是很好了，然而这样给人打工能到什么时候？又能怎么还清背后的一屁股债啊。。。</p>
<p>程序员在美帝整体的待遇还是很不错的，EE/CS毕业生平均大概能找到6W/年的工资吧，努力一点，节省一点，折合成RMB就能多很多。</p>
<p>而且总的来说，这个行业在那边发展的也是更好一些，等到学成打拼几年之后带着积蓄归国，想想也是个不错的选择不是吗？</p>
<hr>
<p>也许我还是把事情想得太简单了吧，之前在知乎上搜了相关的问题也都是喜忧参半。</p>
<ul>
<li>这篇文章给了我很大的鼓舞</li>
</ul>
<p><a href="http://www.zhihu.com/question/24876778/answer/29381504" target="_blank" rel="external">家境一般如何出国留学？</a></p>
<ul>
<li>这个则是留给我更多的思考，当然我并不想留在美帝。。。情况应该能好一些</li>
</ul>
<p><a href="http://www.zhihu.com/question/27829455" target="_blank" rel="external">寒门学子能否通过赴美攻读研究生，最终留在美国？</a></p>
<hr>
<p>T_T 夜深了，想不明白的只有回头再考虑了</p>
<p>明天中山卡耐基会在西交有个宣讲会，去听下再作打算吧。</p>
<blockquote>
<p>然而我还不一定能过人家的初审。。。。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>直面现实的时候，才会觉得害怕<br>总有一天我们是要离开象牙塔的<br></blockquote>

<p>今晚被拉去听了我们学院的考研解读会。</p>
<p>其实当初说要求每个班都有要去的人数指标的时候就已经想到了这可能会是个坑了，果然，我说我真没想到我听的第一个宣讲会会是我自己学校的。</p>
<blockquote>
<p>整个解读会的主题就是留本校留本校留本校留本校留本校…</p>
</blockquote>
<p>说真的，其实也是听了今晚院领导的各种“吹”，才赫然发现我们学校，<strong>真心不错</strong>！！也难怪分数线一年比一年高、、、</p>
<p>然而人各有志，也是真心想离开这里。。。</p>]]>
    
    </summary>
    
      <category term="保研" scheme="http://jcf94.github.io/tags/%E4%BF%9D%E7%A0%94/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Size Balanced Tree]]></title>
    <link href="http://jcf94.github.io/2015/06/19/2015/2015-06-19-sbt/"/>
    <id>http://jcf94.github.io/2015/06/19/2015/2015-06-19-sbt/</id>
    <published>2015-06-19T09:27:28.000Z</published>
    <updated>2015-07-13T01:46:44.000Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>这将会是你踏入高级数据结构的第一步。<br></blockquote>

<p>终于要开始给队里面讲这种比较高级的数据结构了，也趁此机会自己好好理理。</p>
<p>首先要讲的是这个：</p>
<h1 id="二叉搜索树">二叉搜索树</h1><hr>
<p>二叉搜索树又叫二叉排序树，它的定义很简单：</p>
<ol>
<li><p>这是一棵二叉树</p>
</li>
<li><p>令x为二叉树中某个结点上表示的值，那么其左子树上所有结点的值都要不大于x，其右子树上所有结点的值都要不小于x</p>
</li>
</ol>
<a id="more"></a>
<p>存储结构一般用链表或者结构体数组模拟链表等等均可。</p>
<p><strong>中序遍历</strong>二叉排序树可得到一个关键字的有序序列，一个无序序列可以通过构造一棵二叉排序树变成一个有序序列，构造树的过程也可以看成是<strong>对无序序列进行排序</strong>的过程。</p>
<p>基本操作有几种：</p>
<ul>
<li>插入</li>
</ul>
<p>每次插入的新的结点都是二叉排序树上新的叶子结点，在进行插入操作时，不必移动其它结点，只需改动某个结点的指针，由空变为非空即可。</p>
<ul>
<li>查找</li>
</ul>
<p>根据查找值的大小与当前子树的根节点相比，更小就找左边，更大就找右边，知道找到目标或者返回无结果。</p>
<ul>
<li>子树中的最大/最小值</li>
</ul>
<p>从根开始走到最左边是最小，走到最右边是最大。</p>
<ul>
<li>前驱或后继</li>
</ul>
<p>查找比当前点小的最大值（前驱）或比当前点更大的最小值（后继）。考虑左子树的最大值和右子树的最小值，若没有左右子树则考虑父节点。</p>
<ul>
<li>删除</li>
</ul>
<p>删除的第一步是要先找到该节点，然后在子树中找个前驱或者后继来替换掉该结点即可。</p>
<p>搜索，插入，删除的复杂度等于树高，因此一般的操作都是O(logn)的。</p>
<p>思想其实很简单，具体的实现就不贴代码了，因为确实也比较简单。</p>
<h2 id="普通的二叉搜索树存在的问题">普通的二叉搜索树存在的问题</h2><hr>
<blockquote>
<p><strong>！！！树高并不稳定！！！</strong><br>或者说，<strong>不平衡</strong></p>
</blockquote>
<p>考虑一组本来就有序的数列，将其插入二叉搜索树，结果就是二叉树会退化成一条链，所有结点只有右子树，左子树是空的。</p>
<p>因而预期的O(logn)的操作会退化成O(n)，数据稍大点这种结构就悲剧了。</p>
<p>为了解决这个问题，机智的人类想出了改进方案：</p>
<h1 id="平衡树">平衡树</h1><hr>
<p>平衡树是在二叉查找树的基础上，增加维护操作，使得二叉查找树保持左右子树<strong>平衡</strong>，以最大限度地保证整体的效率。这种结构就叫做<strong>平衡树</strong>。</p>
<p>当然，维护也是需要消耗时间的，一般来说维护消耗的时间越长，树越平衡。具体的还要看实际情况。</p>
<p>一般常见的平衡树有不少种：红黑树、AVL树、SBT、Treap、Splay等等。</p>
<p>它们的基本思想都是通过结点的左右旋来保持原本二叉搜索树的性质不变，然后高效完成。区别就是保持平衡的方式不同。</p>
<p>比如红黑树是把结点分成红黑两种，然后各种旋转稳定，貌似效率相当高，然而实现比较麻烦。</p>
<p>Treap是用优先级的思想，在树上加上堆($Treap=Tree+Heap$)。</p>
<p>相比起来Splay比较特殊，Splay其实并不是一棵严格意义上的平衡树，因为它的操作并不是主要为了保证左右平衡的，它的特点主要是结构比较灵活，可以用来处理一些正常平衡树完成不了的问题，缺点就是<strong>常数大</strong>，效率可能不高。嗯，这是后话。</p>
<p>今天的重点是这个：</p>
<h1 id="SBT">SBT</h1><hr>
<p>节点大小平衡树(Size Balanced Tree)是一种自平衡二叉查找树。</p>
<p>它是由中国广东中山纪念中学的<strong><a href="http://baike.baidu.com/link?url=IMXNAlg4eSURJj4WnvexBcdQkQzxLN0M9NpkZWjiNq-Kg6uT5dxXOjmso69yfdyExqG9gGD4RthT7Nz7n5Oy5K" target="_blank" rel="external">陈启峰</a></strong>（也是个神人，本来那年拿到了北美地区的ACM冠军，结果封神之路上遇到了Watashi）发明的。陈启峰于2006年底完成论文《<a href="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-Qifeng-Chen《Size Balanced Tree》.pdf" target="_blank" rel="external">Size Balanced Tree</a>》，并在2007年的全国青少年信息学奥林匹克竞赛冬令营中发表。</p>
<p>相比红黑树、AVL树等自平衡二叉查找树，SBT更易于实现。据陈启峰在论文中称，SBT是“目前为止速度最快的高级二叉搜索树”。</p>
<h2 id="旋转">旋转</h2><p>首先是所有平衡树中都会用到的旋转操作，平衡树需要不断改变树的结构，但是改变结构的同时又必须保证的是整棵树的二叉查找树性质<strong>不能被破坏掉</strong>（要是二叉查找树性质都没了，下面就不用玩了）。</p>
<p>调整方式就是逐点进行左旋或者右旋：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-1.png" alt="rotate"></p>
<p>以上图作为例子，左右旋实现起来其实也很简单，就是交换一下x、y的父子关系，然后调整B子树的连接情况，且能够保证整体的二叉搜素性质不改变。</p>
<h2 id="SBT的特殊性质">SBT的特殊性质</h2><p>我们给二叉搜索树的结点增加一个size域，用来保存以该节点为根的子树中一共有多少个结点。</p>
<p>上面说了，SBT是通过结点大小(Size)来调整整棵树的平衡性的，它相比一般的二叉搜索树多出来的性质有两条：</p>
<p>对于SBT中的每一个结点t，有：</p>
<ol>
<li><p>$size[right[t]]&gt;=size[left[left[t]]],size[right[left[t]]]$</p>
</li>
<li><p>$size[left[t]]&gt;=size[left[right[t]]],size[right[right[t]]]$</p>
</li>
</ol>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-2.png" alt="maintain"></p>
<p>以上图为例，性质是：</p>
<ol>
<li>$size[R]&gt;=size[A]$</li>
<li>$size[R]&gt;=size[B]$</li>
<li>$size[L]&gt;=size[C]$</li>
<li>$size[L]&gt;=size[D]$</li>
</ol>
<h2 id="如何维护这种性质？Maintain(&amp;_t)">如何维护这种性质？Maintain(&amp; t)</h2><p><strong>为了便于说明，以下部分左右旋与Maintain函数的参数传递均为实参</strong></p>
<p>我们从上图开始，把整棵树的结构分成几种情况来看：</p>
<h3 id="Case_1：size[left[left[t]]]&gt;size[right[t]]">Case 1：size[left[left[t]]]&gt;size[right[t]]</h3><ul>
<li>首先对t进行右旋，此时t更新成了原图中的L</li>
</ul>
<p>得到如下的结果：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-3.png" alt="3"></p>
<ul>
<li><p>则对于图中的T，其子树不一定满足性质，需要Maintain(T)</p>
</li>
<li><p>当T调整完之后，T的子树与L可能也不一定满足性质，需要再次Maintain(L)</p>
</li>
</ul>
<p>该过程的伪代码为：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">If size[<span class="attribute">left</span>[<span class="attribute">left</span>[t]]]&gt;size[<span class="attribute">right</span>[t]] then</span><br><span class="line">	<span class="function"><span class="title">Right-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(right[t])</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(t)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Case_2:_size[right[left[t]]]&gt;size[right[t]]">Case 2: size[right[left[t]]]&gt;size[right[t]]</h3><p>这种情况要稍微复杂一些：</p>
<p>我们把原图中的B再往下画一层：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-4.png" alt="4"></p>
<ul>
<li>首先对L进行左旋</li>
</ul>
<p>得到：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-5.png" alt="5"></p>
<ul>
<li>再右旋T</li>
</ul>
<p>得到：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-6.png" alt="6"></p>
<ul>
<li><p>经过上面两步操作之后，整棵树的结构可以说是完全改变了，具体形态也可能变得难以预测。但是根据左右旋的性质，我们可以保证上图的结果中A、E、F、R都是性质完好的SBT，所以只要分别Maintain(L)和Maintain(T)即可。</p>
</li>
<li><p>经过上面那一步，我们能保证L和T以及其子树都是性质完好了，但是它们之间的任然不能确保，所以需要再Maintain(B)一次</p>
</li>
</ul>
<p>该过程的伪代码：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">If s[<span class="attribute">right</span>[<span class="attribute">left</span>[t]]&gt;s[<span class="attribute">right</span>[t]] then</span><br><span class="line">	<span class="function"><span class="title">Left-Rotate</span><span class="params">(left[t])</span></span></span><br><span class="line">	<span class="function"><span class="title">Right-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(left[t])</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(right[t])</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(t)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Case_3:_size[right[right[t]]]&gt;size[left[t]]">Case 3: size[right[right[t]]]&gt;size[left[t]]</h3><p>情况与第一种类似，刚好相反</p>
<h3 id="Case_4:_size[left[right[t]]]&gt;size[left[t]]">Case 4: size[left[right[t]]]&gt;size[left[t]]</h3><p>情况与第二种类似，刚好相反</p>
<h3 id="总结">总结</h3><p>按照上述说明，Maintain函数就是四个if语句分开即可，但是中间可能会有一些不必要的操作，故作者在<a href="(http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-Qifeng-Chen《Size Balanced Tree》.pdf">论文</a>)中也对其进行了改进。</p>
<p>可以发现1、2与3、4的判断是可以分开的，于是可以添加一个标记参数，已确定接下来的Maintain中需要检查哪一边</p>
<p>改进之后的伪代码：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Maintain (t,flag)</span><br><span class="line">	If flag=false then</span><br><span class="line">		If size[<span class="attribute">left</span>[<span class="attribute">left</span>[t]]]&gt;size[<span class="attribute">right</span>[t]] then</span><br><span class="line">			<span class="function"><span class="title">Right-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">		Elseif size[<span class="attribute">right</span>[<span class="attribute">left</span>[t]]&gt;size[<span class="attribute">right</span>[t]] then</span><br><span class="line">			<span class="function"><span class="title">Left-Rotate</span><span class="params">(left[t])</span></span></span><br><span class="line">			<span class="function"><span class="title">Right-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">		Else exit</span><br><span class="line">	Elseif size[<span class="attribute">right</span>[<span class="attribute">right</span>[t]]]&gt;size[<span class="attribute">left</span>[t]] then</span><br><span class="line">    	<span class="function"><span class="title">Left-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">	Elseif size[<span class="attribute">left</span>[<span class="attribute">right</span>[t]]]&gt;size[<span class="attribute">left</span>[t]] then</span><br><span class="line">		<span class="function"><span class="title">Right-Rotate</span><span class="params">(right[t])</span></span></span><br><span class="line">		<span class="function"><span class="title">Left-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">    Else exit</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">Maintain</span><span class="params">(left[t],false)</span></span></span><br><span class="line">    <span class="function"><span class="title">Maintain</span><span class="params">(right[t],true)</span></span></span><br><span class="line">    <span class="function"><span class="title">Maintain</span><span class="params">(t,false)</span></span></span><br><span class="line">    <span class="function"><span class="title">Maintain</span><span class="params">(t,true)</span></span></span><br></pre></td></tr></table></figure>
<h2 id="愉快地使用SBT">愉快地使用SBT</h2><p>SBT的核心操作是Maintain，经过上面这么多内容，我想你已经掌握了。</p>
<p>SBT支持所有普通二叉查找树的操作（显而易见），而有了Maintain，之后所有的操作都是在普通的二叉查找树的基础上加以改进即可，可以衍生出更多有用的操作。</p>
<ul>
<li>插入</li>
</ul>
<p>正常的二叉查找树插入操作，插入完之后Maintain维护性质</p>
<ul>
<li>删除</li>
</ul>
<p>直接使用正常的二叉查找树删除操作即可。</p>
<blockquote>
<p>你说SBT性质可能会被破坏？</p>
</blockquote>
<p>嗯，是的。确实可能会出现这种情况，然而平衡树的操作是为了是的树的平均深度的平衡性。对于删除来说，删除一个结点并不会增加树的深度，所以在这里不用Maintain对整体并不会有什么影响，下次其他操作的Maintain就可以修复这个问题了。</p>
<ul>
<li>查找</li>
</ul>
<p>与正常的二叉查找树相同</p>
<ul>
<li>查找第k大</li>
</ul>
<p>由于每个结点的Size域，我们可以快速找出整个数列中第k大的数。根结点是第size[左子树]+1小的数，所以从根结点出发，按照大小关系不断遍历左右子树即可。</p>
<p>复杂度也是O(logn)的。</p>
<h2 id="最终代码示例">最终代码示例</h2><p>这份模板是我自己改过好多遍的，当初学这个的时候特别痛苦。网站找的别人的模板要不就有问题，要不就写得让人觉得很难受。然后找到的几个人的模板还都不一样，参考都累。</p>
<p>最后自己在纸上推左右旋推了很久才定下来，后来做题的时候又改进过好多遍。</p>
<p>推荐大家多画图。。。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">MYID	: Chen Fan</span><br><span class="line">LANG	: G++</span><br><span class="line">PROG	: Size Balanced Tree</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN 100010</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sons[MAXN][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> size[MAXN],data[MAXN];</span><br><span class="line"><span class="keyword">int</span> sbt=<span class="number">0</span>,sbttail=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> &amp;t,<span class="keyword">int</span> w)</span> <span class="comment">//rotate(&amp;node,0/1)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k=sons[t][<span class="number">1</span>-w];</span><br><span class="line">	<span class="keyword">if</span> (!k) <span class="keyword">return</span> ;</span><br><span class="line">	sons[t][<span class="number">1</span>-w]=sons[k][w];</span><br><span class="line">	sons[k][w]=t;</span><br><span class="line">	size[k]=size[t];</span><br><span class="line">	size[t]=size[sons[t][<span class="number">0</span>]]+size[sons[t][<span class="number">1</span>]]+<span class="number">1</span>;</span><br><span class="line">	t=k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">maintain</span><span class="params">(<span class="keyword">int</span>&amp; t,<span class="keyword">bool</span> flag)</span> <span class="comment">//maintain(&amp;node,flag)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!t) <span class="keyword">return</span> ;</span><br><span class="line">	<span class="keyword">if</span> (!flag)</span><br><span class="line">		<span class="keyword">if</span> (size[sons[sons[t][<span class="number">0</span>]][<span class="number">0</span>]]&gt;size[sons[t][<span class="number">1</span>]]) rotate(t,<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (size[sons[sons[t][<span class="number">0</span>]][<span class="number">1</span>]]&gt;size[sons[t][<span class="number">1</span>]]) </span><br><span class="line">		&#123;</span><br><span class="line">			rotate(sons[t][<span class="number">0</span>],<span class="number">0</span>);</span><br><span class="line">			rotate(t,<span class="number">1</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">return</span> ;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">if</span> (size[sons[sons[t][<span class="number">1</span>]][<span class="number">1</span>]]&gt;size[sons[t][<span class="number">0</span>]]) rotate(t,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (size[sons[sons[t][<span class="number">1</span>]][<span class="number">0</span>]]&gt;size[sons[t][<span class="number">0</span>]])</span><br><span class="line">		&#123;</span><br><span class="line">			rotate(sons[t][<span class="number">1</span>],<span class="number">1</span>);</span><br><span class="line">			rotate(t,<span class="number">0</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">return</span> ;</span><br><span class="line">	</span><br><span class="line">	maintain(sons[t][<span class="number">0</span>],<span class="keyword">false</span>);</span><br><span class="line">	maintain(sons[t][<span class="number">1</span>],<span class="keyword">true</span>);</span><br><span class="line">	maintain(t,<span class="keyword">false</span>);</span><br><span class="line">	maintain(t,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span>&amp; t,<span class="keyword">int</span> v,<span class="keyword">int</span> pos)</span> <span class="comment">//insert(&amp;root,value,pos/0)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!size[t])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!pos)</span><br><span class="line">		&#123;</span><br><span class="line">			sbttail++;</span><br><span class="line">			pos=sbttail;</span><br><span class="line">		&#125;</span><br><span class="line">		data[pos]=v;</span><br><span class="line">		size[pos]=<span class="number">1</span>;</span><br><span class="line">		sons[pos][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">		sons[pos][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">		t=pos;</span><br><span class="line">	&#125; <span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		size[t]++;</span><br><span class="line">		<span class="keyword">if</span> (v&lt;data[t]) insert(sons[t][<span class="number">0</span>],v,pos);</span><br><span class="line">		<span class="keyword">else</span> insert(sons[t][<span class="number">1</span>],v,pos);</span><br><span class="line">		maintain(t,v&gt;=data[t]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> last; <span class="comment">//last node</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span>&amp; t,<span class="keyword">int</span> v)</span> <span class="comment">//value=del(&amp;root,key)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	size[t]--;</span><br><span class="line">	<span class="keyword">if</span> (v==data[t]||(v&lt;data[t]&amp;&amp;sons[t][<span class="number">0</span>]==<span class="number">0</span>)||(v&gt;data[t]&amp;&amp;sons[t][<span class="number">1</span>]==<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> ret=data[t];</span><br><span class="line">		<span class="keyword">if</span> (sons[t][<span class="number">0</span>]==<span class="number">0</span>||sons[t][<span class="number">1</span>]==<span class="number">0</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			last=t;</span><br><span class="line">			t=sons[t][<span class="number">1</span>]+sons[t][<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> data[t]=del(sons[t][<span class="number">0</span>],data[t]+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">return</span> ret;</span><br><span class="line">	&#125; <span class="keyword">else</span></span><br><span class="line">	<span class="keyword">if</span> (v&lt;data[t]) <span class="keyword">return</span> del(sons[t][<span class="number">0</span>],v);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> del(sons[t][<span class="number">1</span>],v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delk</span><span class="params">(<span class="keyword">int</span>&amp; t,<span class="keyword">int</span> k)</span> <span class="comment">//value=del(&amp;root,k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	size[t]--;</span><br><span class="line">	<span class="keyword">if</span> (size[sons[t][<span class="number">0</span>]]+<span class="number">1</span>==k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> ret=data[t];</span><br><span class="line">		<span class="keyword">if</span> (sons[t][<span class="number">0</span>]==<span class="number">0</span>||sons[t][<span class="number">1</span>]==<span class="number">0</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			last=t;</span><br><span class="line">			t=sons[t][<span class="number">1</span>]+sons[t][<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> data[t]=delk(sons[t][<span class="number">0</span>],data[t]+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">return</span> ret;</span><br><span class="line">	&#125; <span class="keyword">else</span></span><br><span class="line">	<span class="keyword">if</span> (k&lt;=size[sons[t][<span class="number">0</span>]]) <span class="keyword">return</span> delk(sons[t][<span class="number">0</span>],k);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> delk(sons[t][<span class="number">1</span>],k-<span class="number">1</span>-size[sons[t][<span class="number">0</span>]]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">select</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> k)</span> <span class="comment">//node=select(root,k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (k==size[sons[t][<span class="number">0</span>]]+<span class="number">1</span>) <span class="keyword">return</span> t;</span><br><span class="line">	<span class="keyword">if</span> (k&lt;=size[sons[t][<span class="number">0</span>]]) <span class="keyword">return</span> select(sons[t][<span class="number">0</span>],k);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> select(sons[t][<span class="number">1</span>],k-<span class="number">1</span>-size[sons[t][<span class="number">0</span>]]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> x)</span> <span class="comment">//node=search(root,x)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (t==<span class="number">0</span>||x==data[t]) <span class="keyword">return</span> t;</span><br><span class="line">	<span class="keyword">if</span> (x&lt;data[t]) <span class="keyword">return</span> search(sons[t][<span class="number">0</span>],x);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> search(sons[t][<span class="number">1</span>],x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deb_out</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"-------\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"sbttail=%d sbt=%d\n"</span>,sbttail,sbt);</span><br><span class="line">	<span class="keyword">for</span>	(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=sbttail;i++)</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%2d: key=%2d size=%2d left=%2d right=%2d\n"</span>,i,data[i],size[i],sons[i][<span class="number">0</span>],sons[i][<span class="number">1</span>]);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"-------\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	sbttail=<span class="number">0</span>;</span><br><span class="line">	sbt=<span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>	(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">15</span>;i++) insert(sbt,i,<span class="number">0</span>);</span><br><span class="line">	deb_out();</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//printf("%d\n",del(sbt,8));</span></span><br><span class="line">	insert(sbt,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">	deb_out();</span><br><span class="line">	del(sbt,<span class="number">8</span>);</span><br><span class="line">	del(sbt,<span class="number">8</span>);</span><br><span class="line">	<span class="comment">//printf("%d\n",search(sbt,8));</span></span><br><span class="line">	deb_out();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="后话">后话</h2><p>SBT可以用来快速维护一组数的插入、查找、删除、找第k大，然而你会发现只是想要单纯地实现这个功能，C++ STL 中的set就可以做到。哦对了，set不能找第k大……</p>
<blockquote>
<p>事实上set里面就是用<strong>红黑树</strong>来进行维护的。。。<br>然而我并不会红黑树。。。<br>然而你们也并不需要会红黑树。。。<br>因为直接用set就好了啊。。。-_-///<br>不用set那么用SBT嘛，这种东西学一个就差不多了</p>
</blockquote>
<p>所以虽然SBT效率高，但是扩展性似乎并没有特别强，一般需要用到的也就是只有动态多次求第k的时候。</p>
<p>真正想要见识一下神器的，请在未来好好研究学习Treap和Splay吧，这两个在应用的时候比SBT的用途广很多。</p>
<p>如需要模板题练手，请点击页面下方的标签查看详情。</p>
<p>当然模板可以参考，不过还是不要复制粘贴代码了，最好能自己写一遍。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>这将会是你踏入高级数据结构的第一步。<br></blockquote>

<p>终于要开始给队里面讲这种比较高级的数据结构了，也趁此机会自己好好理理。</p>
<p>首先要讲的是这个：</p>
<h1 id="二叉搜索树">二叉搜索树</h1><hr>
<p>二叉搜索树又叫二叉排序树，它的定义很简单：</p>
<ol>
<li><p>这是一棵二叉树</p>
</li>
<li><p>令x为二叉树中某个结点上表示的值，那么其左子树上所有结点的值都要不大于x，其右子树上所有结点的值都要不小于x</p>
</li>
</ol>]]>
    
    </summary>
    
      <category term="SBT" scheme="http://jcf94.github.io/tags/SBT/"/>
    
      <category term="平衡树" scheme="http://jcf94.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
      <category term="ACM" scheme="http://jcf94.github.io/categories/ACM/"/>
    
      <category term="算法学习" scheme="http://jcf94.github.io/categories/ACM/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[专业知识整理]]></title>
    <link href="http://jcf94.github.io/2015/06/19/2015/2015-06-19-zhuanye/"/>
    <id>http://jcf94.github.io/2015/06/19/2015/2015-06-19-zhuanye/</id>
    <published>2015-06-19T02:15:23.000Z</published>
    <updated>2015-07-01T12:47:12.000Z</updated>
    <content type="html"><![CDATA[<p>昨天刚开了大三大四的专业班会，本来是几个大四的讲解保研、考研、工作经验的，最后系主任吴老大站起来总结陈词。。。</p>
<blockquote>
<p>不愧是吴老大啊！一下就抓住了问题的关键，连着又把我们教育了一通。。。</p>
</blockquote>
<p>起因是：保研的学姐说她面试的时候被人老师问到个整流电路，答不上来，问到个采样定理，答不上来。找工作的学长说他面试的时候被人总监让写个C语言程序，写不出来。</p>
<p>然后吴老大果断抓住重点，开始批评教育！！！</p>
<blockquote>
<p>隐忧啊什么的<br><strong>要重基础！要重基础！要重基础！</strong>重要的事情要说好多遍！</p>
</blockquote>
<p>好吧，好像确实很有道理的样子。正好接下来也要准备夏令营面试。打算慢慢开始重新整理下大一到现在学过的专业课。</p>
<p>先占个坑。</p>
<a id="more"></a>
<p>嗯！首先理下之前学过的课,</p>
<h1 id="前三年学过的课程">前三年学过的课程</h1><hr>
<p>2012-2013学年<br>秋<br><del>[24050010]计算机应用基础</del><br><del>[12070060]机械制图</del><br><del>[14030010]体育（1）</del><br><del>[64050010]军事理论</del><br><del>[11070010]思想道德修养与法律基础</del><br><del>[13030011]大学英语（1）</del><br>[12031011]高等数学(1)<br><del>[24040010]通信技术导论</del><br><del>[2404001S]入学教育与毕业教育</del><br><del>[6405001S]军训</del><br>春<br><del>[12040011]大学物理（1）</del><br><del>[14030020]体育（2）</del><br><del>[11160010]中国近现代史纲要</del><br><del>[13030012]大学英语（2）</del><br>[12031012]高等数学(2)<br>[24050030]C语言程序设计<br><del>[33<strong>**</strong>]公共艺术类课</del><br>[24040020]数据库原理及应用<br><del>[24040030]计算机软件技术基础</del></p>
<p>2013-2014学年<br>秋<br><del>[11050010]马克思主义基本原理概论</del><br><del>[13030013]大学英语（3）</del><br>[12031030]线性代数<br><del>[12040012]大学物理（2）</del><br><del>[14030030]体育（3）</del><br>[12031110]复变函数与积分变换<br><del>[12040110]物理实验</del><br><del>[11080440]文献检索</del><br>[32051010]电路分析基础<br>[24040040]电磁场与电磁波<br>[24040050]信号与系统<br><del>[2404031S]公益劳动</del><br>春<br><del>[11060010]毛泽东思想和中国特色社会主义理论体系概论</del><br><del>[13030014]大学英语（4）</del><br>[12031040]概率论与数理统计<br><del>[14030040]体育（4）</del><br>[32053010]模拟电子技术基础<br>[24040060]数字信号处理<br>[24040070]自动控制概论<br>[24040080]传感器基础<br><del>[11<strong>**</strong>]思想政治理论课实践</del><br><del>[2404006S]数字信号处理课程设计</del></p>
<p>2014-2015学年<br>秋<br>[24040090]微机原理与接口技术<br>[24040100]高频电子线路<br>[24040110]通信系统原理<br>[32054010]数字电子技术基础<br>[24040130]信息论与编码技术<br><del>[24040120]专业英语</del><br>[24040150]数字图像处理<br><del>[2404009S]微机原理与接口技术课程设计</del><br><del>[3205702S]电子技术基础课程设计</del><br><del>[2404010S]高频电子线路课程设计</del><br>春<br>[24040160]数字光纤通信<br>[24040170]微波技术与天线<br>[24040180]现代交换技术<br>[24040190]移动通信<br>[24040230]数据通信与计算机网络<br>[24040210]单片机原理<br>[24040220]VHDL语言与数字EDA设计<br>[24040200]数字视频技术<br><del>[2404032S]电装实习</del><br><del>[2404022S]EDA课程设计</del></p>
<hr>
<h1 id="数学相关">数学相关</h1><h2 id="高等数学">高等数学</h2><h2 id="线性代数">线性代数</h2><h2 id="复变函数与积分变换">复变函数与积分变换</h2><p>作为信号系列的数学基础课，向上支撑信号系统、数字信号处理之类的课。</p>
<p>详见 <a href="/2015/07/01/2015-07-01-xinhaoxiangguan/">信号相关专业复习</a></p>
<h2 id="概率论与数理统计">概率论与数理统计</h2><hr>
<h1 id="专业课">专业课</h1><hr>
<h2 id="电学/无线电">电学/无线电</h2><h3 id="电路分析基础">电路分析基础</h3><h3 id="模拟电子技术基础">模拟电子技术基础</h3><h3 id="数字电子技术基础">数字电子技术基础</h3><h3 id="高频电子线路">高频电子线路</h3><h3 id="电磁场与电磁波">电磁场与电磁波</h3><h3 id="微波技术与天线">微波技术与天线</h3><p>主要内容是研究由电磁场与电磁波衍生出来的无线电技术，微波、天线与电波传播</p>
<p>详见 <a href="/2015/06/27/2015-06-27-weibojishuyutianxian/">微波技术与天线 复习笔记</a></p>
<hr>
<h2 id="信号/通信">信号/通信</h2><h3 id="信号与系统">信号与系统</h3><h3 id="数字信号处理">数字信号处理</h3><h3 id="信息论与编码技术">信息论与编码技术</h3><h3 id="通信系统原理">通信系统原理</h3><p>详见 <a href="/2015/07/01/2015-07-01-xinhaoxiangguan/">信号相关专业复习</a></p>
<h3 id="数字光纤通信">数字光纤通信</h3><h3 id="现代交换技术">现代交换技术</h3><p>介绍一些交换网中使用的技术，程控交换机等。</p>
<p>详见 <a href="/2015/05/28/2015-05-28-xiandaijiaohuan/">现代交换原理 复习笔记 部分</a></p>
<h3 id="移动通信">移动通信</h3><hr>
<h2 id="计算机应用/硬件">计算机应用/硬件</h2><h3 id="C语言程序设计">C语言程序设计</h3><h3 id="数据库原理及应用">数据库原理及应用</h3><h3 id="微机原理与接口技术">微机原理与接口技术</h3><h3 id="数据通信与计算机网络">数据通信与计算机网络</h3><h3 id="单片机原理">单片机原理</h3><h3 id="VHDL语言与数字EDA设计">VHDL语言与数字EDA设计</h3><hr>
<h2 id="自动化">自动化</h2><h3 id="自动控制概论">自动控制概论</h3><h3 id="传感器基础">传感器基础</h3><hr>
<h2 id="图像处理">图像处理</h2><h3 id="数字图像处理">数字图像处理</h3><h3 id="数字视频技术">数字视频技术</h3><p>介绍数字视频处理技术。</p>
<p>详见 <a href="/2015/05/30/2015-05-30-shuzishipin/">数字视频 复习笔记</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>昨天刚开了大三大四的专业班会，本来是几个大四的讲解保研、考研、工作经验的，最后系主任吴老大站起来总结陈词。。。</p>
<blockquote>
<p>不愧是吴老大啊！一下就抓住了问题的关键，连着又把我们教育了一通。。。</p>
</blockquote>
<p>起因是：保研的学姐说她面试的时候被人老师问到个整流电路，答不上来，问到个采样定理，答不上来。找工作的学长说他面试的时候被人总监让写个C语言程序，写不出来。</p>
<p>然后吴老大果断抓住重点，开始批评教育！！！</p>
<blockquote>
<p>隐忧啊什么的<br><strong>要重基础！要重基础！要重基础！</strong>重要的事情要说好多遍！</p>
</blockquote>
<p>好吧，好像确实很有道理的样子。正好接下来也要准备夏令营面试。打算慢慢开始重新整理下大一到现在学过的专业课。</p>
<p>先占个坑。</p>]]>
    
    </summary>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="我的大学" scheme="http://jcf94.github.io/categories/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
</feed>