<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Chenfan's blog]]></title>
  <subtitle><![CDATA[It's the way I choose.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jcf94.github.io/"/>
  <updated>2015-07-22T14:00:22.853Z</updated>
  <id>http://jcf94.github.io/</id>
  
  <author>
    <name><![CDATA[Jcf94]]></name>
    <email><![CDATA[jcf94@outlook.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[2015-07-22-ustc]]></title>
    <link href="http://jcf94.github.io/2015/07/22/2015-07-22-ustc/"/>
    <id>http://jcf94.github.io/2015/07/22/2015-07-22-ustc/</id>
    <published>2015-07-22T13:12:30.000Z</published>
    <updated>2015-07-22T14:00:22.853Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>多图预警，千万不要用流量打开本帖<br>0.0<br></blockquote>

<p>7月19日到达USTC中科大，开始为期5天的夏令营。</p>
<p>拍了一堆照片记录下。。。</p>
<a id="more"></a>
<p>夏令营营员的营服：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-150859.jpg" alt="营服"></p>
<p>发的全部材料在这里啦：<br>营服、便利贴、笔什么的……右边那个神秘的绿色小袋子打开以后是个背包！！！</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-151138.jpg" alt="材料"></p>
<p>校园卡，接下来几天吃饭就靠这个啦：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-170723.jpg" alt="校园卡"></p>
<p>在学校里面随便逛了逛，下面是各种：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-171600.jpg" alt="图书馆"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-172027.jpg" alt="学院"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-175230.jpg" alt="湖"></p>
<p>校外十字路口：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50719-182400.jpg" alt="十字路口"></p>
<p>校内食堂：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-165645.jpg" alt="食堂"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-111958.jpg" alt="大鸡腿"></p>
<hr>
<h1 id="Day_One">Day One</h1><hr>
<p>上午，开营仪式：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-082736.jpg" alt="开营仪式1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-082828.jpg" alt="开营仪式2"></p>
<p>校史馆：<br>这位走来的是我们的志愿者廖东亮大大~~</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-104516.jpg" alt="校史馆"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-111249.jpg" alt="发动机"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-111258.jpg" alt="质子加速"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-111313.jpg" alt="VAX"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-111329.jpg" alt="东方红"></p>
<hr>
<p>下午，参观先研院以及科大讯飞</p>
<p>路上顺手留一张：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-133337.jpg" alt="此处应有自拍"></p>
<p>先研院大楼：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-141750.jpg" alt="先研院大楼"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-142443.jpg" alt="先研院景色"></p>
<p>先研院X楼：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-143535.jpg" alt="X楼"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-144259.jpg" alt="先研院1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-145316.jpg" alt="先研院2"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-145627.jpg" alt="先研院3"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-152035.jpg" alt="龙芯"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-155737.jpg" alt="先研院4"></p>
<p>科大讯飞：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50720-161603.jpg" alt="科大讯飞"></p>
<h1 id="Day_Two">Day Two</h1><hr>
<p>上午计算机学院开营仪式以及各实验室宣讲</p>
<p>下午西区实验室参观</p>
<p>安虹教授PPT：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50721-174102.jpg" alt="安虹PPT"></p>
<h1 id="Day_Three">Day Three</h1><hr>
<p>上午，东区实验室、超算中心参观</p>
<p>超算中心大楼：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-081703.jpg" alt="超算中心"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085014.jpg" alt="超算中心1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085055.jpg" alt="超算中心2"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085222.jpg" alt="超算中心3"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085255.jpg" alt="超算中心4"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-085641.jpg" alt="超算中心5"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-090105.jpg" alt="超算中心6"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-091150.jpg" alt="龙芯"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-091432.jpg" alt="超算中心7"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-091713.jpg" alt="超算中心8"></p>
<p>曙光I号：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-090711.jpg" alt="曙光I号"></p>
<p>下午，冷餐会：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-140113.jpg" alt="冷餐会1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-140215.jpg" alt="冷餐会2"></p>
<p>Rio和蛋挞：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-143203.jpg" alt="Rio"></p>
<p>好多KFC蛋挞哇：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-154156.jpg" alt="蛋挞"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-22-ustc-P50722-160030.jpg" alt="冷餐会3"></p>
<h1 id="Day_Four">Day Four</h1><hr>
<p>面试</p>
<h1 id="Day_Five">Day Five</h1><hr>
<p>面试</p>
<hr>
<p>离开</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>多图预警，千万不要用流量打开本帖<br>0.0<br></blockquote>

<p>7月19日到达USTC中科大，开始为期5天的夏令营。</p>
<p>拍了一堆照片记录下。。。</p>]]>
    
    </summary>
    
      <category term="USTC" scheme="http://jcf94.github.io/tags/USTC/"/>
    
      <category term="保研" scheme="http://jcf94.github.io/tags/%E4%BF%9D%E7%A0%94/"/>
    
      <category term="图集" scheme="http://jcf94.github.io/tags/%E5%9B%BE%E9%9B%86/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Next]]></title>
    <link href="http://jcf94.github.io/2015/07/15/2015-07-15-next/"/>
    <id>http://jcf94.github.io/2015/07/15/2015-07-15-next/</id>
    <published>2015-07-15T13:42:19.000Z</published>
    <updated>2015-07-15T14:07:45.000Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>Just as the 26 letters of the English alphabet do not limit how much can be written,<br>the two letters of the computer alphabet do not limit how what computers can do.<br></blockquote>

<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-15-next-jingli.jpg" alt="锦鲤"></p>
<a id="more"></a>
<p>几天前听说王小豪童鞋已经顺利拿到北大化学直博的offer，简直不能再赞啦~</p>
<p>转眼今天已经是7月15了，18号晚踏上征程！！</p>
<p>西安-合肥-广州-回家</p>
<p>希望走完这一路，8月初回到家时，所有的一切都能达成~！</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>Just as the 26 letters of the English alphabet do not limit how much can be written,<br>the two letters of the computer alphabet do not limit how what computers can do.<br></blockquote>

<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-15-next-jingli.jpg" alt="锦鲤"></p>]]>
    
    </summary>
    
      <category term="保研" scheme="http://jcf94.github.io/tags/%E4%BF%9D%E7%A0%94/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Makefile解析]]></title>
    <link href="http://jcf94.github.io/2015/07/13/2015-07-13-makefile/"/>
    <id>http://jcf94.github.io/2015/07/13/2015-07-13-makefile/</id>
    <published>2015-07-13T12:30:54.000Z</published>
    <updated>2015-07-14T01:33:29.000Z</updated>
    <content type="html"><![CDATA[<p>之前啃内核的时候就见过这个东西，整理项目的时候正好用到，顺便好好学习一下。</p>
<p>详见：<a href="http://blog.csdn.net/ruglcc/article/details/7814546/" target="_blank" rel="external">Makefile经典教程(掌握这些足够)</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前啃内核的时候就见过这个东西，整理项目的时候正好用到，顺便好好学习一下。</p>
<p>详见：<a href="http://blog.csdn.net/ruglcc/article/details/7814546/" target="_blank" rel="exter]]>
    </summary>
    
      <category term="Linux" scheme="http://jcf94.github.io/tags/Linux/"/>
    
      <category term="Makefile" scheme="http://jcf94.github.io/tags/Makefile/"/>
    
      <category term="shell" scheme="http://jcf94.github.io/tags/shell/"/>
    
      <category term="内核编译" scheme="http://jcf94.github.io/tags/%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/"/>
    
      <category term="Linux" scheme="http://jcf94.github.io/categories/Linux/"/>
    
      <category term="工具" scheme="http://jcf94.github.io/categories/Linux/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Uzebox]]></title>
    <link href="http://jcf94.github.io/2015/07/12/2015-07-12-uzebox/"/>
    <id>http://jcf94.github.io/2015/07/12/2015-07-12-uzebox/</id>
    <published>2015-07-12T12:30:40.000Z</published>
    <updated>2015-07-15T13:41:26.000Z</updated>
    <content type="html"><![CDATA[<p>大二开始几个小伙伴一起跟<a href="http://john101.jimdo.com/" target="_blank" rel="external">杨俊</a>做了个单片机的小东西</p>
<p>最后感觉也就是水过了</p>
<p>这几天准备重新把资料理出来看看，没准面试可以用一下。</p>
<p>Orz</p>
<p>基本原理:</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-1.jpg" alt="基本原理"></p>
<a id="more"></a>
<p>从核心部分开始：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-2.jpg" alt="总图"></p>
<h1 id="UZEBOX主机">UZEBOX主机</h1><hr>
<p><a href="http://uzebox.org/wiki/index.php?title=Main_Page" target="_blank" rel="external">UZEBOX的Wiki页面</a></p>
<p>具体电路图如上所示，用到的芯片只有两个，单片机和后面的AD转换芯片，剩下的都是一些简单的电路。</p>
<h2 id="硬件部分">硬件部分</h2><h3 id="CPU">CPU</h3><p>CPU采用了ATmega644，8位的AVR单片机，主要功能是完成所有任务。</p>
<ol>
<li>生成视频同步信号</li>
<li>画面的呈现。这包括滚动和确定精度的透明度来抑制背景</li>
<li>混合并且输出音乐和声音效果</li>
<li>读操纵杆按钮状态</li>
<li>读取和处理通过UART的MIDI数据流</li>
<li>处理对SD卡的读写操作</li>
<li>最后也是最重要的一步：运行游戏</li>
</ol>
<p>这块芯片的标准主频是20MHz，但是使用时需要超频到28.6MHz。</p>
<p>因为AD725的工作频率是14.3MHz，为了防止视频信号采样发生混叠，MCU和AD725的信号需要同步发生。</p>
<h3 id="视频信号">视频信号</h3><p>如上图所示，UZEBOX的视频部分主要靠单片机的C口进行输出，以3/3/2的比例向外输出R/G/B视频信号</p>
<p>红和绿都是用3位表示，蓝色信号2位，经过一个R-2R权电阻网络进行简单的DA转换，可以把三种颜色的数字信号转成0~0.7V的模拟信号，然后继续输入AD725，转换成NTSC格式的视频信号</p>
<p>AD725的主要输入信号是前面来的RGB，然后再加上单片机的同步信号和时钟信号辅助，就能完成视频信号的转换了</p>
<h3 id="声音信号">声音信号</h3><p>声音输出只用到了PD7一个口，是单声道信号进行脉冲宽度调制（PWM）产生的。用电阻把输出信号幅值控制在1V的峰峰值即可</p>
<h3 id="手柄">手柄</h3><p>这里用的是一个简单的SNES（Super Nintendo Entertainment System）的手柄。就是一个触发器和一个移位寄存器，单片机读取移位寄存器里面存储的状态即可。</p>
<h2 id="软件部分">软件部分</h2><h3 id="内核">内核</h3><p>内核就是烧录进单片机里面的主要内容。单片机上没有操作系统，因此内核里面的所有部分事实上只能顺序执行，但是因为执行速度足够快，可以表现得像多任务同时工作一样进行。单片机需要同时完成多项任务：产生视频信号、读取手柄的控制信息、播放音乐等等。</p>
<p>主要工作内容是：</p>
<ol>
<li>初始化端口，计时器和其他硬件外围设备重置</li>
<li>生成复合视频AD725所需的同步脉冲</li>
<li>解码音乐数据，产生声音效果</li>
<li>混合四种声音样本</li>
<li>在规律的间隔时间从混合缓冲器中输出声音样本</li>
<li>对控制器按钮和鼠标移动的读取</li>
<li>读取UART中的入栈数据并将其存储到缓冲区中</li>
</ol>
<h3 id="中断">中断</h3><p>内核使用定时器1，即16位的计数器来触发中断。</p>
<p>计时器开始为0，计数到1820，此时它会自动回转到0，并且生成一个中断。</p>
<p>1820的值是由主晶振频率（28.63636MHZ）除以NTSC扫描线率（15.73426KHZ）得到的。</p>
<p>内核中断负责暂停主程序，进行渲染视频和混合音乐。由于速度和时间要求，需要用汇编语言来写。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-3.jpg" alt="中断"></p>
<h3 id="视频引擎">视频引擎</h3><p>内核提供12种不同的工作模式，每种都有不同的特点，用于实现视频绘制</p>
<h3 id="声音引擎">声音引擎</h3><p>音乐处理涉及到音乐乐谱的读取和波封的处理，这里使用的是MIDI这种紧凑格式的音频，纯软件完成</p>
<h2 id="游戏载入">游戏载入</h2><p>从<a href="https://github.com/Uzebox/uzebox" target="_blank" rel="external">github</a>上下到完整的包是这样的</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">demos         <span class="comment">//各种运行工具以及游戏包</span></span><br><span class="line">gfx           <span class="comment">//颜色以及图像资源等</span></span><br><span class="line">kernel        <span class="comment">//内核，包括初始化、运行主程序、中断、视频/音频引擎等</span></span><br><span class="line">tools         <span class="comment">//编译工具</span></span><br><span class="line">Makefile      <span class="comment">//编译文件</span></span><br></pre></td></tr></table></figure>
<p>执行make之后，会在Rom目录下生成一些.hex和.uze的文件</p>
<p>.uze文件是原本生成了.hex文件之后加上首部打包而成</p>
<p>载入的过程可以有两种：</p>
<ol>
<li>直接将游戏包生成好的.hex文件烧录进Atmega644即可</li>
<li>往单片机中烧录gameloader的.hex文件，之后通过读取SD卡中的.uze文件来载入游戏。gameloader占内存4K，剩下还有60K的内存可供游戏调用</li>
</ol>
<h1 id="改进部分">改进部分</h1><hr>
<p>游戏机制作完成之后，我们对其进行了两方面的改进</p>
<h2 id="无线传输">无线传输</h2><p><a href="http://anarchy.translocal.jp/radio/micro/howtotx.html" target="_blank" rel="external">参考Tetsuo Kogawa的网站</a></p>
<p>将视频信号通过一个简易的无线电路发射出去，可以通过一般的CRT电视来接收</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-4.jpg" alt="无线"></p>
<p>该电路非常简化，制作该电路的时候也是使用双面覆铜板完成</p>
<p>所有暴露在外面的导线都是尽可能地贴近覆铜板，使高频信号尽可能地衰减掉</p>
<p>选择一个电视频道，并调节可调电感来使得两个设备相互适配</p>
<p>当发射机与电视机的距离、频率都调整到一个合适的位置时候，电视机上可以清晰地收到显示的游戏画面</p>
<h2 id="无线控制">无线控制</h2><p>通过三轴加速度传感器来对感知空间三维姿态，并通过无线的方式将其传递到另一台主机上，主机进一步向外输出控制信号</p>
<p>这一部分可以代替原始设计中的手柄部分</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>大二开始几个小伙伴一起跟<a href="http://john101.jimdo.com/">杨俊</a>做了个单片机的小东西</p>
<p>最后感觉也就是水过了</p>
<p>这几天准备重新把资料理出来看看，没准面试可以用一下。</p>
<p>Orz</p>
<p>基本原理:</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-12-uzebox-1.jpg" alt="基本原理"></p>]]>
    
    </summary>
    
      <category term="单片机" scheme="http://jcf94.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="项目" scheme="http://jcf94.github.io/categories/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的七月]]></title>
    <link href="http://jcf94.github.io/2015/07/09/2015-07-09-qiyue/"/>
    <id>http://jcf94.github.io/2015/07/09/2015-07-09-qiyue/</id>
    <published>2015-07-09T15:12:48.000Z</published>
    <updated>2015-07-15T13:43:34.000Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>这是一年中最火热的日子，<br>我将完成这个很大程度上决定我下半生人生走向的选择<br></blockquote>

<p>骨子里面还是个小人物，我一向是个不愿对自己倾注太多信心的人</p>
<p>一是自己确实拿不出什么值得骄傲的成绩</p>
<p>二是即使在自己擅长的领域内，走得越深，见到过的真正的青年科学家（！！）越多，便越发感到敬畏</p>
<p>拿什么跟人家比？</p>
<hr>
<p>前辈告诉我说要多投，海投，要勇敢地上！</p>
<p>还是怪自己大概也是心气太高吧，一般的看不上，，，拿到太强的目标的邀请函了，却又觉得没有信心了</p>
<hr>
<p>毕竟</p>
<p>CMU、USTC、PKU</p>
<p>哪一个都曾经是我仰望不已的存在。。。。。。</p>
<hr>
<a id="more"></a>
<p>就像是向高空拉了几条钢丝锁，如果顺利，一步登天，如果摔下来，那就真是一点后路都没有留下了。</p>
<p>幸而投出去的夏令营已经3中2，而剩下的最后一个也有很大的希望能过。</p>
<hr>
<p>尽管最想去的那一个告诉我的是高达80%的淘汰率，呵呵，，</p>
<hr>
<p>趁着这段时间把以前学过的专业课好好复习下，然后给自己补补英语！</p>
<hr>
<p>无论最终结果会如何，已经无畏地出发在路上了，那是我的星辰大海！！</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=26608576&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>这是一年中最火热的日子，<br>我将完成这个很大程度上决定我下半生人生走向的选择<br></blockquote>

<p>骨子里面还是个小人物，我一向是个不愿对自己倾注太多信心的人</p>
<p>一是自己确实拿不出什么值得骄傲的成绩</p>
<p>二是即使在自己擅长的领域内，走得越深，见到过的真正的青年科学家（！！）越多，便越发感到敬畏</p>
<p>拿什么跟人家比？</p>
<hr>
<p>前辈告诉我说要多投，海投，要勇敢地上！</p>
<p>还是怪自己大概也是心气太高吧，一般的看不上，，，拿到太强的目标的邀请函了，却又觉得没有信心了</p>
<hr>
<p>毕竟</p>
<p>CMU、USTC、PKU</p>
<p>哪一个都曾经是我仰望不已的存在。。。。。。</p>
<hr>]]>
    
    </summary>
    
      <category term="保研" scheme="http://jcf94.github.io/tags/%E4%BF%9D%E7%A0%94/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDU 1402 A * B Problem Plus 快速高精度乘法（FFT）]]></title>
    <link href="http://jcf94.github.io/2015/07/06/2015-07-06-HDU-1402/"/>
    <id>http://jcf94.github.io/2015/07/06/2015-07-06-HDU-1402/</id>
    <published>2015-07-06T02:50:03.000Z</published>
    <updated>2015-07-13T01:47:14.149Z</updated>
    <content type="html"><![CDATA[<h1 id="A_*_B_Problem_Plus">A * B Problem Plus</h1><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p>
<h2 id="Problem_Description">Problem Description</h2><p>Calculate A * B.</p>
<h2 id="Input">Input</h2><p>Each line will contain two integers A and B. Process to end of file.</p>
<p>Note: the length of each integer will not exceed 50000.</p>
<a id="more"></a>
<h2 id="Output">Output</h2><p>For each case, output A * B in one line.</p>
<h2 id="Sample_Input">Sample Input</h2><blockquote>
<p>1<br>2<br>1000<br>2</p>
</blockquote>
<h2 id="Sample_Output">Sample Output</h2><blockquote>
<p>2<br>2000</p>
</blockquote>
<h2 id="题意">题意</h2><p>做两个超大数的乘法，每个数极限是50000位，略大，一般普通的模拟高精会超时</p>
<h2 id="分析">分析</h2><p>普通的模拟高精是$O(n^2)$的复杂度，对于这种特殊的50000长的数据自然是会超了的</p>
<p>故本题的解法就是借用FFT加速的高精度乘法，复杂度在$O(nlogn)$</p>
<p>FFT的详细分析在上一篇中已经讲清楚了，本题即作为模板题</p>
<p>我的模板是在原来自己搞的高精的基础上改的，最初的高精用了4位押位，然而套上这个之后，发现FFT中间的结果大小跟位数也有关，当位数大到一定程度的时候，4位押位在int下会爆。。。然后50000位的极限数据在3位押位下都会爆int。。。好可怕</p>
<p>最后改到2位押位。</p>
<p>大概是我原本的输入输出部分模板写的不好，网上找的参考代码能在100ms以内过，我的这个需要花700ms左右。。。（捂脸）</p>
<blockquote>
<p>下次用的时候考虑是不是需要套原本的高精模板，还有要注意押位的位数问题</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">MYID	: Chen Fan</span><br><span class="line">LANG	: G++</span><br><span class="line">PROG	: FFT</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> nn 70000</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> snn 60000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> gjtype</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> a[nn];</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">ntog</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> s)</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		clean();</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    	<span class="keyword">while</span> (s&gt;<span class="number">0</span>)</span><br><span class="line">    	&#123;</span><br><span class="line">    		i++;</span><br><span class="line">       		a[i]=s%<span class="number">100</span>;</span><br><span class="line">       		s=s/<span class="number">100</span>;</span><br><span class="line">   		&#125;</span><br><span class="line">   		a[<span class="number">0</span>]=i;</span><br><span class="line">   	&#125;</span><br><span class="line">   	<span class="function"><span class="keyword">void</span> <span class="title">stog</span><span class="params">(<span class="keyword">char</span> s1[])</span></span><br><span class="line">   	</span>&#123;</span><br><span class="line">   		clean();</span><br><span class="line">        <span class="keyword">char</span> ss[snn],s[snn];</span><br><span class="line">        <span class="keyword">bool</span> pos=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (s1[<span class="number">0</span>]==<span class="string">'-'</span>) </span><br><span class="line">        &#123;</span><br><span class="line">        	<span class="built_in">strcpy</span>(s,s1+<span class="number">1</span>);</span><br><span class="line">        	pos=<span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="built_in">strcpy</span>(s,s1);</span><br><span class="line">    	<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    	<span class="keyword">while</span> (<span class="built_in">strlen</span>(s)&gt;=<span class="number">2</span>)</span><br><span class="line">    	&#123;</span><br><span class="line">    		i++;</span><br><span class="line">    		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="built_in">strlen</span>(s)-<span class="number">2</span>;j&lt;<span class="built_in">strlen</span>(s);j++)</span><br><span class="line">    		ss[j-<span class="built_in">strlen</span>(s)+<span class="number">2</span>]=s[j];</span><br><span class="line">    		s[<span class="built_in">strlen</span>(s)-<span class="number">2</span>]=<span class="string">'\0'</span>;</span><br><span class="line">    		a[i]=atoi(ss);</span><br><span class="line">    	&#125;</span><br><span class="line">    	<span class="keyword">if</span> (<span class="built_in">strlen</span>(s)&gt;<span class="number">0</span>)</span><br><span class="line">    	&#123;</span><br><span class="line">    		i++;</span><br><span class="line">    		a[i]=atoi(s);</span><br><span class="line">    	&#125;</span><br><span class="line">    	a[<span class="number">0</span>]=i;</span><br><span class="line">    	<span class="keyword">if</span> (!pos) a[a[<span class="number">0</span>]]=-a[a[<span class="number">0</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">out</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">       	<span class="built_in">printf</span>(<span class="string">"%d"</span>,a[a[<span class="number">0</span>]]);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=a[<span class="number">0</span>]-<span class="number">1</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%02d"</span>,a[i]);</span><br><span class="line">		<span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">gjtype a,b,c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(-<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> fstype</span><br><span class="line">&#123;	</span><br><span class="line">	<span class="keyword">double</span> x,y;</span><br><span class="line">	fstype(<span class="keyword">double</span> real = <span class="number">0.0</span>,<span class="keyword">double</span> imag = <span class="number">0.0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		x = real;</span><br><span class="line">		y = imag;</span><br><span class="line">	&#125;</span><br><span class="line">	fstype <span class="keyword">operator</span> -(<span class="keyword">const</span> fstype &amp;b)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> fstype(x-b.x,y-b.y);</span><br><span class="line">	&#125;</span><br><span class="line">	fstype <span class="keyword">operator</span> +(<span class="keyword">const</span> fstype &amp;b)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> fstype(x+b.x,y+b.y);</span><br><span class="line">	&#125;</span><br><span class="line">	fstype <span class="keyword">operator</span> *(<span class="keyword">const</span> fstype &amp;b)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> fstype(x*b.x-y*b.y,x*b.y+y*b.x);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(fstype y[],<span class="keyword">int</span> len,<span class="keyword">int</span> on)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j,k;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>, j = len/<span class="number">2</span>;i &lt;len-<span class="number">1</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (i &lt; j) swap(y[i],y[j]);</span><br><span class="line"></span><br><span class="line">		k = len/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">while</span>(j &gt;= k)</span><br><span class="line">		&#123;</span><br><span class="line">			j -= k;</span><br><span class="line">			k /= <span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(j &lt; k) j += k;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> h = <span class="number">2</span>; h &lt;= len; h &lt;&lt;= <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function">fstype <span class="title">wn</span><span class="params">(<span class="built_in">cos</span>(-on*2*PI/h)</span>,<span class="title">sin</span><span class="params">(-on*2*PI/h)</span>)</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; len;j+=h)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="function">fstype <span class="title">w</span><span class="params">(1,0)</span></span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k = j;k &lt; j+h/<span class="number">2</span>;k++)</span><br><span class="line">			&#123;</span><br><span class="line">				fstype u = y[k];</span><br><span class="line">				fstype t = w*y[k+h/<span class="number">2</span>];</span><br><span class="line">				y[k] = u+t;</span><br><span class="line">				y[k+h/<span class="number">2</span>] = u-t;</span><br><span class="line">				w = w*wn;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(on == -<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	y[i].x /= len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fstype x1[nn],x2[nn];</span><br><span class="line">gjtype cc;</span><br><span class="line"></span><br><span class="line"><span class="function">gjtype <span class="title">fftcheng</span><span class="params">(gjtype aa,gjtype bb)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> len1=aa.a[<span class="number">0</span>],len2=bb.a[<span class="number">0</span>],len=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (len&lt;len1*<span class="number">2</span>||len&lt;len2*<span class="number">2</span>) len&lt;&lt;=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len1;i++) x1[i-<span class="number">1</span>]=fstype(aa.a[i],<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=len1;i&lt;len;i++) x1[i]=fstype(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len2;i++) x2[i-<span class="number">1</span>]=fstype(bb.a[i],<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=len2;i&lt;len;i++) x2[i]=fstype(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	fft(x1,len,<span class="number">1</span>);</span><br><span class="line">	fft(x2,len,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) x1[i]=x1[i]*x2[i];</span><br><span class="line"></span><br><span class="line">	fft(x1,len,-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	cc.clean();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) cc.a[i+<span class="number">1</span>]=(<span class="keyword">int</span>)(x1[i].x+<span class="number">0.5</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cc.a[i+<span class="number">1</span>]+=cc.a[i]/<span class="number">100</span>;</span><br><span class="line">		cc.a[i]%=<span class="number">100</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(cc.a[len] == <span class="number">0</span> &amp;&amp; len &gt; <span class="number">1</span>)len--;</span><br><span class="line"></span><br><span class="line">	cc.a[<span class="number">0</span>]=len;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="comment">//freopen("1.txt","r",stdin);</span></span><br><span class="line">	<span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line"></span><br><span class="line">	gjtype a,b,c;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> s1[snn],s2[snn];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s1,s2)!=EOF)</span><br><span class="line">	&#123;</span><br><span class="line">		a.stog(s1);</span><br><span class="line">		b.stog(s2);</span><br><span class="line"></span><br><span class="line">		c=fftcheng(a,b);</span><br><span class="line">		c.out();</span><br><span class="line"></span><br><span class="line">		<span class="comment">//c=cheng(a,b);</span></span><br><span class="line">		<span class="comment">//c.out();</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="A_*_B_Problem_Plus">A * B Problem Plus</h1><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)</p>
<h2 id="Problem_Description">Problem Description</h2><p>Calculate A * B.</p>
<h2 id="Input">Input</h2><p>Each line will contain two integers A and B. Process to end of file.</p>
<p>Note: the length of each integer will not exceed 50000.</p>]]>
    
    </summary>
    
      <category term="FFT" scheme="http://jcf94.github.io/tags/FFT/"/>
    
      <category term="高精度算法" scheme="http://jcf94.github.io/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="ACM" scheme="http://jcf94.github.io/categories/ACM/"/>
    
      <category term="训练" scheme="http://jcf94.github.io/categories/ACM/%E8%AE%AD%E7%BB%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[快速傅里叶变换FFT算法的用途]]></title>
    <link href="http://jcf94.github.io/2015/07/05/2015-07-05-fft/"/>
    <id>http://jcf94.github.io/2015/07/05/2015-07-05-fft/</id>
    <published>2015-07-05T06:59:09.000Z</published>
    <updated>2015-07-13T01:47:02.261Z</updated>
    <content type="html"><![CDATA[<p>正好复习信号到FFT了，想起来前段时间放了挺久的FFT大数乘法，顺便研究下。</p>
<p>普通的高精度乘法的复杂度需要$O(n^2)$，用了押位之后，一般押4位的话能够达到$O(n^2/16)$，看上去可能效果不错，但仍然是同一个数量级的。</p>
<p>对付更大一点的变态数据（。。。ACM赛场上很少有卡这货的吧。。。-_-////）就需要用的$O(nlogn)$的FFT大数乘法算法了。</p>
<h1 id="数学基础">数学基础</h1><hr>
<p>首先基础是DFT，FFT是DFT的一种快速算法。</p>
<p>从N点DFT出发：</p>
<a id="more"></a>
<p>$$\begin{align}<br>X[K]&amp;=\sum_{n=0}^{N-1}x[n]e^{-j\frac{2\pi K}{N}n}\\<br>&amp;=\sum_{n=0}^{\frac{N}{2}-1}x[2n]e^{-j\frac{2\pi K}{N}2n}+\sum_{n=0}^{\frac{N}{2}-1}x[2n+1]e^{-j\frac{2\pi K}{N}(2n+1)}\\<br>&amp;=\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}+\sum_{n=0}^{\frac{N}{2}-1}x_2[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}e^{-j\frac{2\pi K}{N}}\\<br>&amp;=X_1[K]+e^{-j\frac{2\pi K}{N}}X_2[K]<br>\end{align}$$</p>
<p>也就是说，通过上述变换，我们成功地将一个N点得DFT拆成了2个$\frac{N}{2}$点的DFT</p>
<p>分析一下复杂度：</p>
<p>首先N点DFT的结果$X[K]$有N点，每个点的计算都要对$x[n]$的n个序列值乘上负指数求和，复杂度是$O(n^2)$</p>
<p>如果每一步都采用上面的那种变换方式，那么可以把多出来的一维降掉，变成$O(nlogn)$，这也就是<strong>快速傅里叶变换（FFT）</strong>了！</p>
<h2 id="更进一步">更进一步</h2><p>然而上面这个式子简化到最后是有问题的。</p>
<p>我们把一个N点的DFT拆成$\frac{N}{2}$点的DFT之后，下面得到的两个序列$X_1[K]$和$X_2[K]$都只有$\frac{N}{2}$点。</p>
<p>也就是说直接这么写，当K大于$\frac{N}{2}-1$之后，放在代码里面，后面部分就会出现<u><strong>数组越界</strong></u>的问题！！</p>
<p>继续分析后面部分：</p>
<p>$$\begin{align}<br>X_1[K]&amp;=\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}\\<br>X_1[\frac{N}{2}+K]&amp;=\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi}{\frac{N}{2}}(\frac{N}{2}+K)n}\\<br>&amp;=\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}e^{-j2\pi n}\\<br>&amp;=-\sum_{n=0}^{\frac{N}{2}-1}x_1[n]e^{-j\frac{2\pi K}{\frac{N}{2}}n}\\<br>&amp;=-X_1[K]<br>\end{align}$$</p>
<p>好，这样问题就解决了。</p>
<p>令：</p>
<p>$$W_N^K=e^{-j\frac{2\pi K}{N}}$$</p>
<p>则重新整理上面的运算单元可以得到：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-05-fft1.png" alt="蝶形运算"></p>
<p>这就是著名的蝶形运算了。</p>
<p>然后整个图画出来是这样的：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-05-fft1.gif" alt="8"></p>
<p>8点FFT</p>
<p>或者：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-07-05-fft1.jpg" alt="16"></p>
<p>16点FFT</p>
<h2 id="FFT的用途">FFT的用途</h2><p>综上，FFT就是专门为计算机快速运算而设计的，1点变2点，2点变4点，4点变8点……这样就能在原始数据（原数组）的基础上不断计算下一层的结果，最终完成整个DFT的快速计算。</p>
<p>写代码的话，第一步是处理一下最左边一排原始数据的摆放顺序，是按照二进制逆序排过来的，然后一层一层求和迭代即可。</p>
<h1 id="多项式">多项式</h1><hr>
<p>讲完FFT之后，下面重点来了。</p>
<h2 id="多项式的系数表示法">多项式的系数表示法</h2><p>关于变量$x$的多项式可以表示成：</p>
<p>$$A(x)=a_0+a_1x+a_2x^2+…+a_{n-1}x^{n-1}=\sum_{j=0}^{n-1}a_jx^j$$</p>
<p>多项式是个广泛的概念，如果把大数对应到多项式上面去那就是类似这样：</p>
<p>$$1234=4+3*10+2*10^2+1*10^3$$</p>
<p>若有：</p>
<p>$$B(x)=\sum_{j=0}^{n-1}b_jx^j$$</p>
<p>则：</p>
<p>$$A(x)+B(x)\Rightarrow C(x)=\sum_{j=0}^{n-1}c_jx^j$$</p>
<p>$$c_j=a_j+b_j$$</p>
<p>$$A(x)\cdot B(x)\Rightarrow C(x)=\sum_{j=0}^{2n-2}c_jx^j$$</p>
<p>$$c_j=\sum_{k=0}^{j}a_kb_{j-k}$$</p>
<p>分别是多项式加法和多项式乘法</p>
<p>注意：多项式乘法的过程就是<strong>多项式系数卷积</strong></p>
<h2 id="多项式的点值表示法">多项式的点值表示法</h2><p>令：</p>
<p>$$y_k=A(x_k)$$</p>
<p>则一个次数界为n的多项式$A(x)$的点值表示就是n个这样的点值（任意n个）对所形成的集合：</p>
<p>$$\{(x_0,y_0),(x_1,y_1),…,(x_{n-1},y_{n-1})\}$$</p>
<p>从系数表示法写成点值表示法就是简单地说找n个不同的$x$代进去求出$y$，然后写在一起就行了。</p>
<p>然而用点值确定系数就是个线性求解的过程，称为插值，也是可以算的。</p>
<p>那么点值表示法有什么好处呢？</p>
<p>设上面的点值表示是$A(x)$的，如果已知$B(x)$的是：</p>
<p>$$\{(x_0,y’_0),(x_1,y’_1),…,(x_{n-1},y’_{n-1})\}$$</p>
<p>那么：</p>
<p>$$A(x)+B(x)\Rightarrow C(x)=\{(x_0,y_0+y’_0),(x_1,y_1+y’_1),…,(x_{n-1},y_{n-1}+y’_{n-1})\}$$</p>
<p>$$A(x)\cdot B(x)\Rightarrow C(x)=\{(x_0,y_0y’_0),(x_1,y_1y’_1),…,(x_{n-1},y_{n-1}y’_{n-1})\}$$</p>
<p>分别是多项式加法和多项式乘法</p>
<p>关键在于，这里的多项式乘法的复杂度是$O(n)$！！！！！</p>
<blockquote>
<p>因此只要能够想办法快速地进行两种表示法之间的转换，那么就可以先从系数表示法转换成点值表示法，用$O(n)$相乘之后，再快速转换回去，即可做到快速的多项式相乘</p>
</blockquote>
<hr>
<p>所以！！！！</p>
<p>转换的关键就是！！！！</p>
<p>FFT！！！！</p>
<hr>
<p>以下是多项式乘法的过程：</p>
<ol>
<li>次数界增加一倍：通过加入n个值为0的高阶系数，将整个次数界扩充至$2n$</li>
<li>求值，两次FFT分别求出$A(x)$和$B(x)$的长度为$2n$的点值表示$A(\omega)$和$B(\omega)$</li>
<li>逐个相乘得到$C(\omega)$</li>
<li>再做一次FFT，求逆傅里叶变换得到$C(x)$</li>
</ol>
<p>实现代码详见模板题：<a href="/2015/07/06/2015-07-06-HDU-1402/">HDU 1402 A * B Problem Plus 快速高精度乘法（FFT）</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>正好复习信号到FFT了，想起来前段时间放了挺久的FFT大数乘法，顺便研究下。</p>
<p>普通的高精度乘法的复杂度需要$O(n^2)$，用了押位之后，一般押4位的话能够达到$O(n^2/16)$，看上去可能效果不错，但仍然是同一个数量级的。</p>
<p>对付更大一点的变态数据（。。。ACM赛场上很少有卡这货的吧。。。-_-////）就需要用的$O(nlogn)$的FFT大数乘法算法了。</p>
<h1 id="数学基础">数学基础</h1><hr>
<p>首先基础是DFT，FFT是DFT的一种快速算法。</p>
<p>从N点DFT出发：</p>]]>
    
    </summary>
    
      <category term="FFT" scheme="http://jcf94.github.io/tags/FFT/"/>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ACM" scheme="http://jcf94.github.io/categories/ACM/"/>
    
      <category term="算法学习" scheme="http://jcf94.github.io/categories/ACM/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[信号相关专业复习]]></title>
    <link href="http://jcf94.github.io/2015/07/01/2015-07-01-xinhaoxiangguan/"/>
    <id>http://jcf94.github.io/2015/07/01/2015-07-01-xinhaoxiangguan/</id>
    <published>2015-07-01T12:36:56.000Z</published>
    <updated>2015-07-05T08:23:11.000Z</updated>
    <content type="html"><![CDATA[<p>信号系列是通信工程的重点内容，以<strong>复变函数与积分变换</strong>作为基础的数学课程，主要包含<strong>信号与系统</strong>、升级版<strong>数字信号处理</strong>、然后是以<strong>概率论与数理统计</strong>为数学基础课的<strong>信息论</strong>作为通信方面数学上的理论基础、最后得到<strong>通信原理</strong>、应用方面有<strong>移动通信</strong>。</p>
<h1 id="复变函数与积分变换">复变函数与积分变换</h1><hr>
<ul>
<li>欧拉公式：</li>
</ul>
<p>二维平面中点的坐标：$(r\cos\theta,r\sin\theta)$</p>
<p>$$x=r\cos\theta$$</p>
<p>$$y=r\sin\theta$$</p>
<p>$$z=r(\cos\theta+i\sin\theta)=re^{i\theta}$$</p>
<a id="more"></a>
<ul>
<li>傅里叶变换</li>
</ul>
<p>$$\mathscr{F}[f(t)]=F(w)=\int_{-\infty}^{+\infty}f(t)e^{-jwt}dt$$</p>
<p>$$\mathscr{F}^{-1}[F(w)]=f(t)=\frac{1}{2\pi}\int_{-\infty}^{+\infty}F(w)e^{jwt}dw$$</p>
<ul>
<li>冲激函数$\delta(t)$</li>
</ul>
<p>定义：</p>
<p>$$\delta(t)=\begin{cases}\infty,&amp;t=0\\0,&amp;t\neq0\end{cases}$$</p>
<p>$$\int_{-\infty}^{+\infty}\delta(t)dt=1$$</p>
<p>性质：</p>
<p>$$\int_{-\infty}^{+\infty}\delta(t-t_0)f(t)dt=f(t_0)$$</p>
<p>$$\mathscr{F}[\delta(t)]=1$$</p>
<p>$$\mathscr{F}[1]=2\pi\delta(w)$$</p>
<ul>
<li>卷积积分</li>
</ul>
<p>$$f_1(t)*f_2(t)=\int_{-\infty}^{+\infty}f_1(\tau)f_2(t-\tau)d\tau$$</p>
<p>$$\mathscr{F}[f_1(t)*f_2(t)]=F_1(w)F_2(w)$$</p>
<p>$$\mathscr{F}[f_1(t)f_2(t)]=\frac{1}{2\pi}F_1(w)*F_2(w)$$</p>
<ul>
<li>帕塞瓦尔等式</li>
</ul>
<p>又作能量积分公式。</p>
<p>$$\int_{-\infty}^{+\infty}[f(t)]^2dt=\frac{1}{2\pi}|F(w)|^2dw$$</p>
<ul>
<li>拉普拉斯变换</li>
</ul>
<p>$$\mathscr{L}[f(t)]=F(s)=\int_0^{+\infty}f(t)e^{-st}dt$$</p>
<p>$$\mathscr{L}^{-1}[F(s)]=f(t)$$</p>
<ul>
<li>Z变换</li>
</ul>
<p>$$\mathscr{Z}[f(n)]=F(z)=\sum_{i=0}^nf(n)z^{-n}$$</p>
<h1 id="信号与系统">信号与系统</h1><hr>
<ul>
<li>阶跃函数$\epsilon(t)$</li>
</ul>
<p>定义：</p>
<p>$$\epsilon(t)=\begin{cases}0,&amp;t<0\\\frac{1}{2},&t=0\\1,&t>0\end{cases}$$</0\\\frac{1}{2},&t=0\\1,&t></p>
<p>$$\delta(t)=\frac{d\epsilon(t)}{dt}$$</p>
<p>$$\epsilon(t)=\int_{-\infty}^{t}\delta(x)dx$$</p>
<ul>
<li><p>系统的数学模型：描述连续系统的数学模型是微分方程，描述离散系统的数学模型是差分方程。</p>
</li>
<li><p>一个既具有分解特性、又具有零状态线性和零输入线性的系统称为线性系统。</p>
</li>
<li><p>如果系统的参数都是常数，不随时间变化，则称该系统为时不变系统。</p>
</li>
<li><p>线性时不变系统（LTI系统）用常系数微分方程和差分方程来描述。</p>
</li>
</ul>
<p>微分：</p>
<p>$$y^{(n)}(t)+a_{n-1}y^{(n-1)}(t)+…+a_1y^{(1)}(t)+a_0y(t)=b_mf^{(m)}(t)+b_{m-1}f^{(m-1)}(t)+…+b_1f^{(1)}(t)+b_0f(t)$$</p>
<p>或写为：</p>
<p>$$\sum_{j=0}^na_jy^{(j)}(t)=\sum_{i=0}^mb_if^{(i)}(t)$$</p>
<p>差分：</p>
<p>$$y(k)+a_{n-1}y(k-1)+…+a_0y(k-n)=b_mf(k)+b_{m-1}f(k-1)+…+b_0f(k-m)$$</p>
<p>或写为：</p>
<p>$$\sum_{j=0}^na_{n-j}y(k-j)=\sum_{i=0}^mb_{m-i}f(k-i)$$</p>
<ul>
<li>微分方程的齐次解和特解</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th>函数形式</th>
<th>系数</th>
</tr>
</thead>
<tbody>
<tr>
<td>齐次解</td>
<td>自由响应、瞬态响应</td>
<td>系统本身</td>
<td>激励</td>
</tr>
<tr>
<td>特解</td>
<td>强迫响应、稳态响应</td>
<td>激励</td>
<td>激励</td>
</tr>
</tbody>
</table>
<ul>
<li>零输入响应：激励为零时，仅有系统初始状态引起的响应</li>
</ul>
<p>零输入条件下，微分方程右端为零：</p>
<p>$$\sum_{j=0}^na_jy_{zi}^{(j)}(t)=0$$</p>
<ul>
<li><p>零状态响应：系统初始状态为零时，仅由输入信号引起的响应</p>
</li>
<li><p>全响应：初始状态不为零时LTI系统的响应</p>
</li>
</ul>
<p>$$\overbrace{y(t)}^{全响应}=\rlap{\overbrace{\phantom{\sum_{j=1}^nC_{zij}e^{\lambda jt}}}^{零输入响应}}\underbrace{\sum_{j=1}^nC_{zij}e^{\lambda jt}+\rlap{\overbrace{\phantom{\sum_{j=1}^nC_{zsj}e^{\lambda jt}+y_p(t)}}^{零状态响应}}\sum_{j=1}^nC_{zsj}e^{\lambda jt}}_{自由响应}+\underbrace{y_p(t)}_{强迫响应}$$</p>
<ul>
<li>冲激响应：是激励为单位冲激函数$\delta(t)$时，系统的零状态响应。</li>
</ul>
<p>$$h(t)=T[{0},\delta(t)]$$</p>
<p>激励信号$\delta(t)$的作用是<strong>在$t=0$的瞬间给系统输入了若干能量，储存在系统中</strong>，而<strong>在$t&gt;0$时系统的激励为零，只有冲激引入的那些储能在起作用</strong>，因而系统的冲激响应应由上述储能唯一地确定，因此系统的冲激响应在$t&gt;0$时与该系统的零输入响应具有相同的函数形式。</p>
<ul>
<li>阶跃响应：是激励为单位阶跃函数$\epsilon(t)$时，系统的零状态响应。</li>
</ul>
<p>$$g(t)=T[{0},\epsilon(t)]$$</p>
<p>$$h(t)=\frac{dg(t)}{dt}$$</p>
<p>$$g(t)=\int_{-\infty}^th(x)dx$$</p>
<ul>
<li>卷积积分</li>
</ul>
<p><strong><u>由于LTI系统的线性性质，可将输入信号分解为一系列的冲激函数之和（或积分），利用冲激函数对LTI系统的冲激响应，求解LTI系统任意激励的零状态响应。</u></strong></p>
<p>$$f(t-t_1)*\delta(t-t_2)=f(t-t_2)*\delta(t-t_1)=f(t-t1-t2)$$</p>
<p>$$f_1(t-t_1)*f_2(t-t_2)=f_1(t-t_2)*f_2(t-t_1)=f(t-t1-t2)$$</p>
<p>$$f^{(i)}(t)=f_1^{(j)}(t)*f_2^{(i-j)}(t)$$</p>
<ul>
<li>卷积的物理意义</li>
</ul>
<p>从数学上来说卷积就是定义两个函数的一种乘法。</p>
<p>对离散序列来说就是两个多项式的<strong>乘法</strong>。</p>
<p>物理意义就是冲激响应的线性叠加，所谓冲激响应可以看作是两个函数，另一个函数按冲激信号正交展开。</p>
<p>详见知乎：<a href="http://www.zhihu.com/question/21686447" target="_blank" rel="external">卷积的物理意义是什么？</a></p>
<ul>
<li>信号的分解</li>
</ul>
<p>在信号空间中可以找到若干个相互正交的信号作为基本信号，使得信号空间中任一信号均可表示成它们的线性组合。</p>
<ul>
<li>周期信号的傅里叶级数</li>
</ul>
<p>对周期信号进行分解：</p>
<p>$$f(t)=\frac{1}{2}\sum_{n=-\infty}^{\infty}A_ne^{j\psi_n}e^{jn\Omega t}=\sum_{n=-\infty}^{\infty}F_ne^{jn\Omega t}$$</p>
<p>傅里叶系数：</p>
<p>$$F_n=\frac{1}{T}\int_{-\frac{2}{T}}^{\frac{2}{T}}f(t)e^{jn\Omega t}dt,n=0,\pm1,\pm2$$</p>
<p>表明任意周期信号$f(t)$可分解为许多不同频率的虚指数信号$e^{jn\Omega t}$之和，其各分量的复数幅度为$F_n$</p>
<ul>
<li>帕塞瓦尔方程：</li>
</ul>
<p>$$\int_{t_1}^{t_2}f^2(t)dt=\sum_{j=1}^{\infty}C_j^2K_j$$</p>
<p>表明在区间$t_1$和$t_2$之间信号所含有的能量恒等于此信号在完备正交函数集中各正交分量能量的总和</p>
<ul>
<li>频谱密度与傅里叶变换</li>
</ul>
<p>定义频谱密度函数为：</p>
<p>$$F(j\omega)=\lim_{T\to\infty}F_nT=\int_{-\infty}^{\infty}f(t)e^{-j\omega t}dt$$</p>
<p>上式称为傅里叶变换。</p>
<p>$$f(t)=\frac{1}{2\pi}\int_{-\infty}^{\infty}F(j\omega)e^{j\omega t}d\omega$$</p>
<p>$$F(j\omega)=|F(j\omega)|e^{j\psi(\omega)}=R(\omega)+jX(\omega)$$</p>
<ul>
<li>狄里赫利条件</li>
</ul>
<p>傅里叶变换存在的<strong>充分条件</strong>：在无限区间内$f(t)$绝对可积，即：</p>
<p>$$\int_{-\infty}^{\infty}|f(t)|dt&lt;\infty$$</p>
<ul>
<li>变换</li>
</ul>
<table>
<thead>
<tr>
<th>时域</th>
<th>频域</th>
</tr>
</thead>
<tbody>
<tr>
<td>连续</td>
<td>非周期</td>
</tr>
<tr>
<td>离散</td>
<td>周期</td>
</tr>
<tr>
<td>周期</td>
<td>离散</td>
</tr>
<tr>
<td>非周期</td>
<td>连续</td>
</tr>
</tbody>
</table>
<ul>
<li>频移特性/调制特性</li>
</ul>
<p>若：</p>
<p>$$f(t)\leftrightarrow F(j\omega)$$</p>
<p>且$\omega_0$为常数，则：</p>
<p>$$f(t)e^{\pm j\omega_0t}\leftrightarrow F[j(\omega\pm\omega_0)]$$</p>
<ul>
<li><p>信号的能量谱与其自相关函数是一对傅里叶变换</p>
</li>
<li><p>正余弦函数的傅里叶变换</p>
</li>
</ul>
<p>已知常数1的傅里叶变换：</p>
<p>$$\mathscr{F}[1]=2\pi\delta(w)$$</p>
<p>根据频移特性：</p>
<p>$$\mathscr{F}[e^{j\omega_0t}]=2\pi\delta(\omega-\omega_0)$$</p>
<p>$$\mathscr{F}[e^{-j\omega_0t}]=2\pi\delta(\omega+\omega_0)$$</p>
<p>则：</p>
<p>$$\mathscr{F}[cos(\omega_0t)]=\mathscr{F}[\frac{1}{2}(e^{j\omega_0t}+e^{-j\omega_0t})]=\pi[\delta(\omega-\omega_0)+\delta(\omega+\omega_0)]$$</p>
<p>$$\mathscr{F}[sin(\omega_0t)]=\mathscr{F}[\frac{1}{2j}(e^{j\omega_0t}-e^{-j\omega_0t})]=j\pi[\delta(\omega+\omega_0)-\delta(\omega-\omega_0)]$$</p>
<ul>
<li>冲激串序列的傅里叶变换</li>
</ul>
<p>$$\mathscr{F}[\delta_T(t)]=\mathscr{F}[\sum_{m=-\infty}^{\infty}\delta(t-mT)]=\Omega\sum_{n=-\infty}^{\infty}\delta(\omega-n\Omega)=\Omega\delta_{\Omega}(\omega)$$</p>
<ul>
<li>LTI系统的频率响应</li>
</ul>
<p>$$\begin{matrix}f(t)&amp;*&amp;h(t)&amp;=&amp;y(t)\\ \updownarrow&amp;&amp;\updownarrow&amp;&amp;\updownarrow\\ F(j\omega)&amp;\cdot&amp;H(j\omega)&amp;=&amp;Y(j\omega)\end{matrix}$$</p>
<ul>
<li>奈奎斯特采样定理</li>
</ul>
<p>采样：</p>
<p>$$f(t)\times\delta_{T_s}(t)=f_s(t)$$</p>
<p>$$F(j\omega)*\omega_s\delta_{T_s}(\omega)=F_s(j\omega)$$</p>
<p>&gt;</p>
<p>频域上，相当于对原信号进行了无数次搬移，为了防止信号发生混叠，搬移之后的频谱不能重叠。故$\omega_s\geq2\omega_m$。</p>
<p><strong>但这只是充分条件。</strong></p>
<p>压缩采样：<br>1.原始信号在某正交基底上是稀疏的；<br>2.利用观测矩阵对该正交基底进行观测，得到观测值；（也可理解为一种采样，但是采样率可以不受奈奎斯特定理约束）<br>3.传输观测之后的数据；<br>4.恢复原始信号。</p>
<p>类似。。小波变换</p>
<p>知乎上<a href="http://www.zhihu.com/question/24913651" target="_blank" rel="external">对于压缩感知的问题</a></p>
<ul>
<li>拉普拉斯变换与Z变换</li>
</ul>
<p>都是傅里叶变换的几种特殊形式。</p>
<p>拉普拉斯变换-处理连续系统</p>
<p>Z变换-处理离散系统</p>
<h1 id="数字信号处理">数字信号处理</h1><hr>
<ul>
<li>CTFT</li>
</ul>
<p>假设有原始信号：$x(t)$</p>
<p>频率：$f_0$</p>
<p>周期：$T_0=\frac{1}{f_0}$</p>
<p>$\Omega_0=2\pi f_0=\frac{2\pi}{T_0}$</p>
<p>定义连续傅里叶变换：</p>
<p>$$X(j\Omega)=\int_{-\infty}^{\infty}x(t)e^{-j\Omega t}dt$$</p>
<ul>
<li>DTFT</li>
</ul>
<p>令：$x[n]=x(nT_s)$</p>
<p>采样频率：$f_s$</p>
<p>采样周期：$T_s=\frac{1}{f_s}$</p>
<p>$\omega_s=2\pi f_s=\frac{2\pi}{f_s}$</p>
<p>定义离散时间傅里叶变换：</p>
<p>$$X(j\omega)=\sum_{n=-\infty}^{\infty}x[n]e^{-j\omega n}$$</p>
<blockquote>
<p>不是CTFT乘上冲激串序列采样得到的！！！！DTFT直接是函数值，而$f(t)$乘上冲激串序列后变成了一个冲激串序列和函数</p>
</blockquote>
<ul>
<li>DFT</li>
</ul>
<p>把有限长序列看成是周期序列的一个周期，则作N点DFT：</p>
<p>$$X[K]=\sum_{n=0}^{N-1}x[n]e^{-j\frac{2\pi K}{N}n}$$</p>
<p>$$\omega=\frac{2\pi K}{N}$$</p>
<p>$$K=\frac{\omega N}{2\pi}$$</p>
<ul>
<li>FFT</li>
</ul>
<p>参见 <a href="/2015/07/05/2015-07-05-fft/">快速傅里叶变换FFT算法的用途</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>信号系列是通信工程的重点内容，以<strong>复变函数与积分变换</strong>作为基础的数学课程，主要包含<strong>信号与系统</strong>、升级版<strong>数字信号处理</strong>、然后是以<strong>概率论与数理统计</strong>为数学基础课的<strong>信息论</strong>作为通信方面数学上的理论基础、最后得到<strong>通信原理</strong>、应用方面有<strong>移动通信</strong>。</p>
<h1 id="复变函数与积分变换">复变函数与积分变换</h1><hr>
<ul>
<li>欧拉公式：</li>
</ul>
<p>二维平面中点的坐标：$(r\cos\theta,r\sin\theta)$</p>
<p>$$x=r\cos\theta$$</p>
<p>$$y=r\sin\theta$$</p>
<p>$$z=r(\cos\theta+i\sin\theta)=re^{i\theta}$$</p>]]>
    
    </summary>
    
      <category term="信号处理" scheme="http://jcf94.github.io/tags/%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/"/>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="我的大学" scheme="http://jcf94.github.io/categories/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[长大OJ诞生记（三）用HEXO作为主页]]></title>
    <link href="http://jcf94.github.io/2015/07/01/2015-07-01-oj-hexo/"/>
    <id>http://jcf94.github.io/2015/07/01/2015-07-01-oj-hexo/</id>
    <published>2015-07-01T12:16:35.000Z</published>
    <updated>2015-07-13T12:22:04.000Z</updated>
    <content type="html"><![CDATA[<p>之前找Lwy童鞋做的主页用的时间太久了，响应速度等方面现在都出现了一定的问题</p>
<p>正好前段时间搞自己博客的时候看到个带首页的Hexo主题，测试了一下，响应速度各方面都挺适合</p>
<p>顺手给换上了，顺便博文部分可以作为日常通知什么的</p>
<p>然后再顺手修复了一堆bug，重装了一下内网映射的虚拟机，目前稳定性更上一个台阶</p>
<blockquote>
<p>最近都不崩溃了，花生壳稳定得我想哭。。。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前找Lwy童鞋做的主页用的时间太久了，响应速度等方面现在都出现了一定的问题</p>
<p>正好前段时间搞自己博客的时候看到个带首页的Hexo主题，测试了一下，响应速度各方面都挺适合</p>
<p>顺手给换上了，顺便博文部分可以作为日常通知什么的</p>
<p>然后再顺手修]]>
    </summary>
    
      <category term="Hexo" scheme="http://jcf94.github.io/tags/Hexo/"/>
    
      <category term="OJ" scheme="http://jcf94.github.io/tags/OJ/"/>
    
      <category term="网站" scheme="http://jcf94.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[微波技术与天线 复习笔记]]></title>
    <link href="http://jcf94.github.io/2015/06/27/2015-06-27-weibojishuyutianxian/"/>
    <id>http://jcf94.github.io/2015/06/27/2015-06-27-weibojishuyutianxian/</id>
    <published>2015-06-27T04:25:35.000Z</published>
    <updated>2015-06-28T08:16:32.564Z</updated>
    <content type="html"><![CDATA[<h1 id="绪论">绪论</h1><hr>
<ul>
<li><p><u><strong>微波</strong>是电磁波谱中介于超短波与红外线之间的波段，频率范围从<strong>300MHz（波长1m）</strong>至<strong>3000GHz（波长0.1mm）</strong></u></p>
</li>
<li><p>微波、天线与电波：三者的共同基础都是<strong>电磁场理论</strong>，是电磁场在<strong>不同边界值条件下</strong>的应用</p>
</li>
</ul>
<p>微波：研究如何<strong>导引</strong>电磁波在微波传输系统中的有效传输</p>
<p>天线：1.有效地辐射或者接受电磁波；2.把无线电波能量转换为导行波能量</p>
<p>电波：分析和研究电波在空间的传播方式和特点</p>
<a id="more"></a>
<h1 id="第一章_均匀传输线理论">第一章 均匀传输线理论</h1><hr>
<ul>
<li><p><u>微波传输线是用传输<strong>微波信息和能量</strong>的各种形式传输系统的总称，它的作用是<strong>引导</strong>电磁波沿一定方向传输，因此又称为<strong>导波系统</strong>，其所引导的电磁波被称为<strong>导行波</strong></u></p>
</li>
<li><p>一般将截面尺寸、形状、媒质分布、材料及边界条件均不变的导波系统称为<strong>规则导波系统</strong></p>
</li>
<li><p>微波无源器件、均匀传输线、有源元器件以及天线一起构成微波系统</p>
</li>
</ul>
<hr>
<ul>
<li><p><u>将传输线上导行波的<strong>电压与电流之比</strong>定义为传输线的<strong>特性阻抗</strong>，用 $Z_0$ 来表示，其倒数称为特性导纳，用$Y_0$来表示</u></p>
</li>
<li><p>常用平行双导线传输线的特性阻抗有<strong>250$\Omega$、400$\Omega$和600$\Omega$</strong>三种</p>
</li>
<li><p>传输线上<strong>任意一点的电压与电流之比</strong>称为传输线在该点的<strong>阻抗</strong></p>
</li>
<li><p>均匀无耗传输线上任意一点的<strong>输入阻抗</strong>与<strong>观察点的位置</strong>、传输线的<strong>特性阻抗</strong>、<strong>终端负载阻抗</strong>及<strong>工作频率</strong>有关</p>
</li>
<li><p>无耗传输线上任意相距<strong>${1 \over 2}$波长阻抗相同，${1 \over 4}$波长阻抗变换</strong></p>
</li>
<li><p><u>定义传输线上任意一点的<strong>反射波电压（或电流）与入射波电压（或电流）</strong>之比为<strong>电压（或电流）的反射系数$\Gamma$</strong></u></p>
</li>
<li><p>终端反射系数：</p>
</li>
</ul>
<p>$$\Gamma_1=\frac {Z_1-Z_0}{Z_1+Z_0}=|\Gamma_1|e^{j\phi_1}$$</p>
<ul>
<li>反射系数：</li>
</ul>
<p>$$\Gamma(z)=|\Gamma_1|e^{-j2\beta z}=|\Gamma_1|e^{j(\phi_1-2\beta z)}$$</p>
<p>$$\Gamma(0)=\Gamma_1$$</p>
<ul>
<li>输入阻抗与反射系数的关系：</li>
</ul>
<p>$$Z_{in}(z)=Z_0\frac{1+\Gamma(z)}{1-\Gamma(z)}$$</p>
<p>$$\Gamma(z)=\frac{Z_{in}(z)-Z_0}{Z_{in}(z)+Z_0}$$</p>
<ul>
<li>相移常数</li>
</ul>
<p>$$\beta=\frac{2\pi f}{c}=\frac{2\pi}{\lambda}$$</p>
<ul>
<li><p>反射系数也具有<strong>${1 \over 2}$波长重复性</strong></p>
</li>
<li><p>当传输线<strong>特性阻抗一定</strong>时，输入阻抗与反射系数有<strong>一一对应</strong>的关系</p>
</li>
<li><p>当$Z_1=Z_0$时，反射系数为0，即终端无反射，称为<strong>负载匹配</strong></p>
</li>
<li><p>定义传输线上<strong>波腹点电压振幅与波节点电压振幅之比</strong>为<strong>电压驻波比</strong></p>
</li>
</ul>
<p>$$\rho=\frac{|U|_{max}}{|U|_{min}}=\frac{1+|\Gamma_1|}{1-|\Gamma_1|}$$</p>
<p>$$\Gamma_1=\frac{\rho-1}{\rho+1}$$</p>
<table>
<thead>
<tr>
<th>无耗传输线的状态</th>
<th>负载阻抗</th>
<th>任意一点的输入阻抗</th>
<th>反射系数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>行波状态</td>
<td>$Z_1=Z_0$</td>
<td>$Z_{in}(z)=Z_0$</td>
<td>$\Gamma_1=0$，终端无反射</td>
<td>负载匹配</td>
</tr>
<tr>
<td>纯驻波状态</td>
<td>短路、开路或纯电抗</td>
<td></td>
<td>$\Gamma_1=1$，终端全反射</td>
<td></td>
</tr>
<tr>
<td>行驻波状态</td>
<td>终端接任意负数阻抗负载</td>
<td></td>
<td></td>
<td>既有行波又有纯驻波</td>
</tr>
</tbody>
</table>
<ul>
<li>行驻波状态时的波腹点和波节点</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>电压幅度</th>
<th>电流幅度</th>
<th>位置</th>
<th>阻抗</th>
</tr>
</thead>
<tbody>
<tr>
<td>波腹点</td>
<td>最大</td>
<td>最小</td>
<td>$z_{max}=\frac{\lambda}{4\pi}\phi_1+n\frac{\lambda}{2}(n=0,1,2,…)$</td>
<td>$R_{max}=Z_0\rho$</td>
</tr>
<tr>
<td>波节点</td>
<td>最小</td>
<td>最大</td>
<td>$z_{min}=\frac{\lambda}{4\pi}\phi_1+(2n\pm 1)\frac{\lambda}{4}(n=0,1,2,…)$</td>
<td>$R_{min}=\frac{Z_0}{\rho}$</td>
</tr>
</tbody>
</table>
<p>可见：</p>
<p>$$R_{max}R_{min}=Z_0^2$$</p>
<p>匹配传输线的特性阻抗：</p>
<p>$$Z_{01}=\sqrt{Z_0R}$$</p>
<hr>
<ul>
<li><p><strong>负载阻抗匹配</strong>：<strong>负载阻抗</strong>等于传输线的特性阻抗，传输线上只有从信源到负载的入射波，而无反射波。<strong>匹配负载完全吸收了由信源入射来的微波功率。</strong></p>
</li>
<li><p><strong>源阻抗匹配</strong>：<strong>电源内阻</strong>等于传输线的特性阻抗。<strong>入射功率不随负载变化。</strong></p>
</li>
<li><p><strong>共轭阻抗匹配</strong>：不匹配电源，当<strong>负载阻抗折合到电源参考面上的输入阻抗</strong>为电源内阻的共轭值时，<strong>负载能得到最大的功率值</strong></p>
</li>
</ul>
<h1 id="第二章_规则金属波导">第二章 规则金属波导</h1><hr>
<ul>
<li><p>当工作波长<strong>小于</strong>截止波长时，此模可以在波导中传输，称为传导模</p>
</li>
<li><p>当工作波长<strong>大于</strong>截止波长时，此模不能在波导中传输，称为截止模</p>
</li>
<li><p>激励波导的三种方法：<strong>电激励、磁激励和电流激励</strong></p>
</li>
</ul>
<h2 id="矩形波导">矩形波导</h2><ul>
<li><p>宽边尺寸a，窄边尺寸b</p>
</li>
<li><p>截止波数：</p>
</li>
</ul>
<p>$$k_{cmn}=\sqrt{(\frac{m\pi}{a})^2+(\frac{n\pi}{b})^2}$$</p>
<ul>
<li>截止波长：</li>
</ul>
<p>$$\lambda_{cTE_{mn}}=\lambda_{cTM_{mn}}=\frac{2\pi}{k_{cmn}}=\frac{2}{\sqrt{(\frac{m}{a})^2+(\frac{n}{b})^2}}$$</p>
<ul>
<li>相移常数</li>
</ul>
<p>$$\beta=\frac{2\pi}{\lambda}\sqrt{1-(\frac{\lambda}{\lambda_c})^2}=\sqrt{k^2-k_c^2}$$</p>
<ul>
<li>相速与波导波长</li>
</ul>
<p>$$\nu_p=\frac{\omega}{\beta}$$<br>$$\lambda_g=\frac{2\pi}{\beta}$$</p>
<ul>
<li>例如：</li>
</ul>
<p>$$\lambda_{cTE_{10}}=2a$$<br>$$\lambda_{cTE_{01}}=2b$$<br>$$\lambda_{cTM_{11}}=\frac{2ab}{\sqrt{a^2+b^2}}$$</p>
<h3 id="TE波">TE波</h3><ul>
<li>$TE_{01}$为<strong>最低次模（主模）</strong>，其余称为高次模</li>
</ul>
<h3 id="TM波">TM波</h3><ul>
<li>$TM_{11}$为<strong>最低次模</strong>，其余均为高次模</li>
</ul>
<h2 id="圆形波导">圆形波导</h2><ul>
<li><p>外导体内径a</p>
</li>
<li><p>截止波数：</p>
</li>
</ul>
<p>$$k_{cTE_{mn}}=\frac{\mu_{mn}}{a}$$<br>$$k_{cTM_{mn}}=\frac{\nu_{mn}}{a}$$</p>
<ul>
<li>截止波长：</li>
</ul>
<p>$$\lambda_{cTE_{mn}}=\frac{2\pi}{k_{cTE_{mn}}}=\frac{2\pi a}{\mu_{mn}}$$<br>$$\lambda_{cTM_{mn}}=\frac{2\pi}{k_{cTM_{mn}}}=\frac{2\pi a}{\nu_{mn}}$$</p>
<ul>
<li>在所有的模式中，$TE_{11}$模截止波最长，其次为$TM_{01}$模，三种典型模式的截止波长为：</li>
</ul>
<p>$$\lambda_{cTE_{11}}=3.4126a$$<br>$$\lambda_{cTM_{01}}=2.6127a$$<br>$$\lambda_{cTE_{01}}=1.6398a$$</p>
<h1 id="第三章_微波集成传输线">第三章 微波集成传输线</h1><hr>
<ul>
<li>各种集成微波传输系统：</li>
</ul>
<ol>
<li><strong>准TEM波传输线</strong>，主要包括微带传输线和共面波导等</li>
<li><strong>非TEM波传输线</strong>，主要包括槽线、鳍线等</li>
<li><strong>开放式介质波导传输线</strong>，主要包括介质波导、镜像波导等</li>
<li><strong>半开放式介质波导</strong>，主要包括H形波导、G形波导等</li>
</ol>
<ul>
<li>对于耦合微带线，可以将激励分为<strong>奇模激励和偶模激励</strong></li>
</ul>
<p>设两线的激励电压分别为$U_1、U_2$，则可表示为两个<strong>等幅同相</strong>电压激励$U_e（奇模激励）$和两个<strong>等幅反相</strong>电压激励$U_o$</p>
<h1 id="第四章_微波网络基础">第四章 微波网络基础</h1><hr>
<ul>
<li>阻抗矩阵：</li>
</ul>
<p>$$U_1=Z_{11}I_1+Z_{12}I_2$$</p>
<p>$$U_2=Z_{21}I_1+Z_{22}I_2$$</p>
<p>$$\begin{bmatrix}U_1\\U_2\end{bmatrix}=\begin{bmatrix}Z_{11}&amp;Z_{12}\\Z_{21}&amp;Z_{22}\end{bmatrix}\begin{bmatrix}I_1\\I_2\end{bmatrix}$$</p>
<p>$$[U]=[Z][I]$$</p>
<p>其中$[U]$为电压矩阵，$[I]$为电流矩阵，$[Z]$为阻抗矩阵，其中$Z_{11}$、$Z_{22}$分别是端口1和端口2的自阻抗，$Z_{12}$、$Z_{21}$分别是端口1和端口2的互阻抗。</p>
<p>$\left.Z_{11}=\frac{U_1}{I_1}\right|_{I_2=0}$为$T_2$面开路时，端口1的输入阻抗</p>
<p>$\left.Z_{12}=\frac{U_1}{I_2}\right|_{I_1=0}$为$T_1$面开路时，端口2至端口1的转移阻抗</p>
<p>$\left.Z_{21}=\frac{U_2}{I_1}\right|_{I_2=0}$为$T_2$面开路时，端口1至端口2的转移阻抗</p>
<p>$\left.Z_{22}=\frac{U_2}{I_2}\right|_{I_1=0}$为$T_1$面开路时，端口2的输入阻抗</p>
<ul>
<li>导纳矩阵</li>
</ul>
<p>$$I_1=Y_{11}U_1+Y_{12}U_2$$</p>
<p>$$I_2=Y_{21}U_1+Y_{22}U_2$$</p>
<p>$$\begin{bmatrix}I_1\\I_2\end{bmatrix}=\begin{bmatrix}Y_{11}&amp;Y_{12}\\Y_{21}&amp;Y_{22}\end{bmatrix}\begin{bmatrix}U_1\\U_2\end{bmatrix}$$</p>
<p>$$[I]=[Y][U]$$</p>
<p>$\left.Y_{11}=\frac{I_1}{U_1}\right|_{U_2=0}$为$T_2$面短路时，端口1的输入导纳</p>
<p>$\left.Y_{12}=\frac{I_1}{U_2}\right|_{U_1=0}$为$T_1$面短路时，端口2至端口1的转移导纳</p>
<p>$\left.Y_{21}=\frac{I_2}{U_1}\right|_{U_2=0}$为$T_2$面短路时，端口1至端口2的转移导纳</p>
<p>$\left.Y_{22}=\frac{I_2}{U_2}\right|_{U_1=0}$为$T_1$面短路时，端口2的输入导纳</p>
<p>$$[Z][Y]=[E]$$</p>
<p>$$[Y]=[Z]^{-1}$$</p>
<ul>
<li>转移矩阵</li>
</ul>
<p>转移矩阵也称为A矩阵</p>
<p>$$U_1=AU_2+B(-I_2)$$</p>
<p>$$I_1=CU_2+D(-I_2)$$</p>
<p>$$\begin{bmatrix}U_1\\I_1\end{bmatrix}=\begin{bmatrix}A&amp;B\\C&amp;D\end{bmatrix}\begin{bmatrix}U_2\\ -I_2\end{bmatrix}$$</p>
<p>$\left.A=\frac{U_1}{U_2}\right|_{I_2=0}$为$T_2$开路时电压的转移参数</p>
<p>$\left.B=\frac{U_1}{-I_2}\right|_{U_2=0}$为$T_2$短路时转移阻抗</p>
<p>$\left.C=\frac{I_1}{U_2}\right|_{I_2=0}$为$T_2$开路时转移导纳</p>
<p>$\left.D=\frac{I_1}{-I_2}\right|_{U_2=0}$为$T_2$短路时电流的转移参数</p>
<p>n个双端口网络级联，则有：</p>
<p>$$[A]=[A_1][A_2]…[A_n]$$</p>
<ul>
<li>散射矩阵</li>
</ul>
<p>对于线性网络，归一化入射波和归一化反射射波之间是线性关系，故有线性方程：</p>
<p>$$b_1=S_{11}a_1+S_{12}a_2$$</p>
<p>$$b_2=S_{21}a_1+S_{22}a_2$$</p>
<p>$$\begin{bmatrix}b_1\\b_2\end{bmatrix}=\begin{bmatrix}S_{11}&amp;S_{12}\\S_{21}&amp;S_{22}\end{bmatrix}\begin{bmatrix}a_1\\a_2\end{bmatrix}$$</p>
<p>$$[b]=[S][a]$$</p>
<p>$\left.S_{11}=\frac{b_1}{a_1}\right|_{a_2=0}$表示端口2匹配时，端口1的反射系数</p>
<p>$\left.S_{12}=\frac{b_1}{a_2}\right|_{a_1=0}$表示端口1匹配时，端口2到端口1的反向传输系数</p>
<p>$\left.S_{21}=\frac{b_2}{a_1}\right|_{a_2=0}$表示端口2匹配时，端口1到端口2的正向传输系数</p>
<p>$\left.S_{22}=\frac{b_2}{a_2}\right|_{a_1=0}$表示端口1匹配时，端口2的反射系数</p>
<p>对于互易网络：$S_{12}=S_{21}$</p>
<p>对于对称网络：$S_{11}=S_{22}$</p>
<p>对于无耗网络：$[S]^+[S]=[E]$<br>其中$[S]^+$是$[S]$的转置共轭矩阵，$[E]$为单位矩阵</p>
<h1 id="第五章_微波元器件">第五章 微波元器件</h1><hr>
<ul>
<li>理想衰减器</li>
</ul>
<p>$$\begin{bmatrix}S_\alpha\end{bmatrix}=\begin{bmatrix}0&amp;e^{-\alpha l}\\e^{-\alpha l}&amp;0\end{bmatrix}$$</p>
<ul>
<li>理想相移器</li>
</ul>
<p>$$\begin{bmatrix}S_\theta\end{bmatrix}=\begin{bmatrix}0&amp;e^{-j\theta}\\e^{-j\theta}&amp;0\end{bmatrix}$$</p>
<ul>
<li>理想隔离器</li>
</ul>
<p>$$\begin{bmatrix}S\end{bmatrix}=\begin{bmatrix}0&amp;0\\1&amp;0\end{bmatrix}$$</p>
<ul>
<li>Y形结环形器</li>
</ul>
<p>$$\begin{bmatrix}S\end{bmatrix}=\begin{bmatrix}S_{11}&amp;S_{12}&amp;S_{13}\\S_{21}&amp;S_{22}&amp;S_{23}\\S_{31}&amp;S_{32}&amp;S_{33}\end{bmatrix}$$</p>
<ul>
<li><strong>定向耦合器</strong>，是一种具有<strong>定向传输特性</strong>的四端口元件。</li>
</ul>
<p>端口1：输入端</p>
<p>端口2：直通输出端</p>
<p>端口3：耦合输出端</p>
<p>端口4：隔离端</p>
<p>性能指标：耦合度、隔离度、定向度、输入驻波比和工作带宽</p>
<h1 id="第六章_天线辐射与接收的基本理论">第六章 天线辐射与接收的基本理论</h1><hr>
<p>*　天线应具有以下功能：</p>
<ol>
<li>天线应能将导波能量尽可能多转变为<strong>电磁波能量</strong></li>
<li>天线应使电磁波尽可能集中于确定的方向上，即<strong>天线具有方向性</strong></li>
<li>天线应能发射或接收规定极化的电磁波，即<strong>天线有适当的极化</strong></li>
<li>天线应有足够的<strong>工作频带</strong></li>
</ol>
<ul>
<li><p><u>电基本振子是一段长度$l$<strong>远小于波长</strong>、电流$I$<strong>振幅均匀分布、相位相同</strong>的直线电流元。它是线天线的基本组成部分，任意线天线均可看成是由一系列电基本振子组成的。</u></p>
</li>
<li><p>天线的电参数：</p>
</li>
</ul>
<ol>
<li><u><strong>天线方向图</strong>：指在<strong>离天线一定距离处</strong>，辐射场的<strong>相对场强（归一化模值）</strong>随方向变化的曲线图，通常采用通过天线最大辐射方向上的<strong>两个相互垂直的</strong>平面方向图来表示</u></li>
<li><u><strong>天线效率</strong>：定义为天线<strong>辐射功率与输入功率</strong>之比</u></li>
<li><u><strong>增益系数</strong>：是综合衡量天线<strong>能量转换和方向特性</strong>的参数，它是<strong>方向系数与天线效率的乘积</strong>，记为G</u></li>
<li><u><strong>极化和交叉极化电平</strong>：极化特性是指天线在<strong>最大辐射方向</strong>上电场矢量的方向<strong>随时间变化</strong>的规律。有线极化、圆极化、椭圆极化等。引入交叉极化电平来表征<strong>线极化的纯度</strong>。</u></li>
<li><u><strong>频带宽度</strong>：当工作频率变化时，天线的<strong>有关电参数不超出规定范围的频率范围</strong>称为天线的频带宽度，简称天线的带宽</u></li>
<li><u><strong>输入阻抗与驻波比</strong></u></li>
<li><u><strong>有效长度</strong>：在保持实际天线最大辐射方向上的<strong>场强值不变</strong>的条件下，假设天线上<strong>电流分布为均匀分布</strong>时天线的<strong>等效长度</strong>。有效长度越长，表明天线的辐射能力越强。</u></li>
</ol>
<h1 id="第七章_电波传播概论"><del>第七章 电波传播概论</del></h1><h1 id="第八章_线天线">第八章 线天线</h1><hr>
<ul>
<li><p>横向尺寸<strong>远小于</strong>纵向尺寸并<strong>小于波长</strong>的细长结构的天线称为线天线</p>
</li>
<li><p><u>为了加强天线的<strong>方向性</strong>，将若干<strong>辐射单元</strong>按某种方式排列所构成的系统称为<strong>天线阵列</strong></u></p>
</li>
<li><p>相似元：各阵元的形状与尺寸相同，且以相同的姿态排列</p>
</li>
<li><p><strong>元因子</strong>$|F(\theta,\varphi)|$表示组成天线阵的<strong>单个辐射元</strong>的方向图函数，其值<strong>仅取决于天线元本身的类型和尺寸</strong>，体现了天线元的方向性对天线阵方向性的影响</p>
</li>
<li><p><strong>阵因子</strong>表示<strong>各向同性元</strong>所组成的天线阵的方向性，其值取决于天线阵的排列方式及其天线元上激励电流的相对振幅和相位</p>
</li>
<li><p>在各天线元为相似元的条件下，天线阵的方向图函数是<strong>单元因子与阵因子之积</strong>，这个特性称为<strong>方向图乘积定理</strong></p>
</li>
<li><p>最大辐射方向在<strong>垂直于阵轴方向</strong>的天线阵称为<strong>边射式直线阵</strong></p>
</li>
<li><p>最大辐射方向在<strong>阵轴方向</strong>的天线阵称为<strong>端射式直线阵</strong></p>
</li>
<li><p><strong>均匀直线阵</strong>是等间距、各阵元电流的幅度<strong>相等（等幅分布）</strong>而相位依次灯亮递增或递减的直线阵</p>
</li>
</ul>
<h1 id="第九章_面天线">第九章 面天线</h1><hr>
<ul>
<li><p>面天线又称口径天线，它所载的电流<strong>沿天线体的金属表面</strong>分布，且面天线的口径尺寸<strong>远大于</strong>工作波长</p>
</li>
<li><p><u><strong>惠更斯-菲涅尔原理</strong>：在空间任意一点的场，是包围天线的<strong>封闭曲面</strong>上各点的<strong>电磁扰动产生的次级辐射</strong>在该点<strong>叠加</strong>的结果</u></p>
</li>
<li><p><strong>旋转抛物面天线</strong>由两部分组成：1.抛物线绕其焦轴旋转而成的抛物反射面；2.置于抛物面焦点处的馈源（照射器）</p>
</li>
</ul>
<h1 id="第十章_微波应用系统"><del>第十章 微波应用系统</del></h1><hr>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="绪论">绪论</h1><hr>
<ul>
<li><p><u><strong>微波</strong>是电磁波谱中介于超短波与红外线之间的波段，频率范围从<strong>300MHz（波长1m）</strong>至<strong>3000GHz（波长0.1mm）</strong></u></p>
</li>
<li><p>微波、天线与电波：三者的共同基础都是<strong>电磁场理论</strong>，是电磁场在<strong>不同边界值条件下</strong>的应用</p>
</li>
</ul>
<p>微波：研究如何<strong>导引</strong>电磁波在微波传输系统中的有效传输</p>
<p>天线：1.有效地辐射或者接受电磁波；2.把无线电波能量转换为导行波能量</p>
<p>电波：分析和研究电波在空间的传播方式和特点</p>]]>
    
    </summary>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="我的大学" scheme="http://jcf94.github.io/categories/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[小记]]></title>
    <link href="http://jcf94.github.io/2015/06/25/2015-06-25-baoyan/"/>
    <id>http://jcf94.github.io/2015/06/25/2015-06-25-baoyan/</id>
    <published>2015-06-25T15:34:09.000Z</published>
    <updated>2015-06-26T14:17:43.000Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>直面现实的时候，才会觉得害怕<br>总有一天我们是要离开象牙塔的<br></blockquote>

<p>今晚被拉去听了我们学院的考研解读会。</p>
<p>其实当初说要求每个班都有要去的人数指标的时候就已经想到了这可能会是个坑了，果然，我说我真没想到我听的第一个宣讲会会是我自己学校的。</p>
<blockquote>
<p>整个解读会的主题就是留本校留本校留本校留本校留本校…</p>
</blockquote>
<p>说真的，其实也是听了今晚院领导的各种“吹”，才赫然发现我们学校，<strong>真心不错</strong>！！也难怪分数线一年比一年高、、、</p>
<p>然而人各有志，也是真心想离开这里。。。</p>
<a id="more"></a>
<hr>
<p>开始投夏令营的时候投了3个，中科大、北大、中山卡耐基，直到今天似乎终于大部分的学校都截止报名了，然后幸而我也收到了第一个确认。</p>
<p>之前想想还是挺忐忑的，虽然以前已经有了两年前PSW保去复旦的先例了，总还是对自己的学校不太有信心。</p>
<blockquote>
<p>知名度太低，谁知道你是个211？没当成<strong>民办三本</strong>就已经很好啦（虽然我们平时自己也是这么自黑的）</p>
</blockquote>
<p>而且纵观我们学院这几年保出去的那些，西交西电居多，如此大胆往这么高的地方投的，可能真的不多吧。</p>
<hr>
<blockquote>
<p>然而我<strong>不甘心</strong>。不甘心我的星辰大海，只有这么点大吧？</p>
</blockquote>
<p>也是怪自己要求太高，直博的不想去，挑计算机，又重点想找自己想学的系统结构比较强的。。。然后最后就只剩几个了。</p>
<p>一边考着试，一边忐忑地等着结果，今天考完了这学期的倒数第二门，距离告别大三只差最后一门仙姑的《微波技术与天线》啦~</p>
<hr>
<blockquote>
<p>得到第一个接收回复算是终于稍微有点底了。</p>
</blockquote>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-25-baoyan-1.jpg" alt="huifu"></p>
<hr>
<p>我现在最想拿的还是中山卡耐基的offer。</p>
<blockquote>
<p>在中大待一年，赴美卡耐基待一年，然后拿到两个学校的学位，留美打拼几年之后再回国。</p>
</blockquote>
<p>想想也是挺好的。</p>
<hr>
<p>日子过得挺累，或许好多事情原本就不应该我去多担心吧。</p>
<p>就是自从去年家里掏空积蓄买了那套房开始，正好又碰上行业不景气，老爸的厂里生意巨差。</p>
<p>也是真的不敢给他们再多压力了，也是想自己赶紧能够出来赚到自己的钱，每次一想到爸妈，就会觉得他们很累。</p>
<blockquote>
<p>之前花了好久考虑到底要不要读研？呵呵，直接毕业出去工作算了。。。</p>
</blockquote>
<p>结果弄到最后我居然想的是出国这条要花更多钱的路？</p>
<p>或许这就是一条专属于程序员的路吧。</p>
<p>我对自己尽最大的可能估测如果能拿到10k/月的薪资已经是很好了，然而这样给人打工能到什么时候？又能怎么还清背后的一屁股债啊。。。</p>
<p>程序员在美帝整体的待遇还是很不错的，EE/CS毕业生平均大概能找到6W/年的工资吧，努力一点，节省一点，折合成RMB就能多很多。</p>
<p>而且总的来说，这个行业在那边发展的也是更好一些，等到学成打拼几年之后带着积蓄归国，想想也是个不错的选择不是吗？</p>
<hr>
<p>也许我还是把事情想得太简单了吧，之前在知乎上搜了相关的问题也都是喜忧参半。</p>
<ul>
<li>这篇文章给了我很大的鼓舞</li>
</ul>
<p><a href="http://www.zhihu.com/question/24876778/answer/29381504" target="_blank" rel="external">家境一般如何出国留学？</a></p>
<ul>
<li>这个则是留给我更多的思考，当然我并不想留在美帝。。。情况应该能好一些</li>
</ul>
<p><a href="http://www.zhihu.com/question/27829455" target="_blank" rel="external">寒门学子能否通过赴美攻读研究生，最终留在美国？</a></p>
<hr>
<p>T_T 夜深了，想不明白的只有回头再考虑了</p>
<p>明天中山卡耐基会在西交有个宣讲会，去听下再作打算吧。</p>
<blockquote>
<p>然而我还不一定能过人家的初审。。。。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>直面现实的时候，才会觉得害怕<br>总有一天我们是要离开象牙塔的<br></blockquote>

<p>今晚被拉去听了我们学院的考研解读会。</p>
<p>其实当初说要求每个班都有要去的人数指标的时候就已经想到了这可能会是个坑了，果然，我说我真没想到我听的第一个宣讲会会是我自己学校的。</p>
<blockquote>
<p>整个解读会的主题就是留本校留本校留本校留本校留本校…</p>
</blockquote>
<p>说真的，其实也是听了今晚院领导的各种“吹”，才赫然发现我们学校，<strong>真心不错</strong>！！也难怪分数线一年比一年高、、、</p>
<p>然而人各有志，也是真心想离开这里。。。</p>]]>
    
    </summary>
    
      <category term="保研" scheme="http://jcf94.github.io/tags/%E4%BF%9D%E7%A0%94/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Size Balanced Tree]]></title>
    <link href="http://jcf94.github.io/2015/06/19/2015-06-19-sbt/"/>
    <id>http://jcf94.github.io/2015/06/19/2015-06-19-sbt/</id>
    <published>2015-06-19T09:27:28.000Z</published>
    <updated>2015-07-13T01:46:44.549Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>这将会是你踏入高级数据结构的第一步。<br></blockquote>

<p>终于要开始给队里面讲这种比较高级的数据结构了，也趁此机会自己好好理理。</p>
<p>首先要讲的是这个：</p>
<h1 id="二叉搜索树">二叉搜索树</h1><hr>
<p>二叉搜索树又叫二叉排序树，它的定义很简单：</p>
<ol>
<li><p>这是一棵二叉树</p>
</li>
<li><p>令x为二叉树中某个结点上表示的值，那么其左子树上所有结点的值都要不大于x，其右子树上所有结点的值都要不小于x</p>
</li>
</ol>
<a id="more"></a>
<p>存储结构一般用链表或者结构体数组模拟链表等等均可。</p>
<p><strong>中序遍历</strong>二叉排序树可得到一个关键字的有序序列，一个无序序列可以通过构造一棵二叉排序树变成一个有序序列，构造树的过程也可以看成是<strong>对无序序列进行排序</strong>的过程。</p>
<p>基本操作有几种：</p>
<ul>
<li>插入</li>
</ul>
<p>每次插入的新的结点都是二叉排序树上新的叶子结点，在进行插入操作时，不必移动其它结点，只需改动某个结点的指针，由空变为非空即可。</p>
<ul>
<li>查找</li>
</ul>
<p>根据查找值的大小与当前子树的根节点相比，更小就找左边，更大就找右边，知道找到目标或者返回无结果。</p>
<ul>
<li>子树中的最大/最小值</li>
</ul>
<p>从根开始走到最左边是最小，走到最右边是最大。</p>
<ul>
<li>前驱或后继</li>
</ul>
<p>查找比当前点小的最大值（前驱）或比当前点更大的最小值（后继）。考虑左子树的最大值和右子树的最小值，若没有左右子树则考虑父节点。</p>
<ul>
<li>删除</li>
</ul>
<p>删除的第一步是要先找到该节点，然后在子树中找个前驱或者后继来替换掉该结点即可。</p>
<p>搜索，插入，删除的复杂度等于树高，因此一般的操作都是O(logn)的。</p>
<p>思想其实很简单，具体的实现就不贴代码了，因为确实也比较简单。</p>
<h2 id="普通的二叉搜索树存在的问题">普通的二叉搜索树存在的问题</h2><hr>
<blockquote>
<p><strong>！！！树高并不稳定！！！</strong><br>或者说，<strong>不平衡</strong></p>
</blockquote>
<p>考虑一组本来就有序的数列，将其插入二叉搜索树，结果就是二叉树会退化成一条链，所有结点只有右子树，左子树是空的。</p>
<p>因而预期的O(logn)的操作会退化成O(n)，数据稍大点这种结构就悲剧了。</p>
<p>为了解决这个问题，机智的人类想出了改进方案：</p>
<h1 id="平衡树">平衡树</h1><hr>
<p>平衡树是在二叉查找树的基础上，增加维护操作，使得二叉查找树保持左右子树<strong>平衡</strong>，以最大限度地保证整体的效率。这种结构就叫做<strong>平衡树</strong>。</p>
<p>当然，维护也是需要消耗时间的，一般来说维护消耗的时间越长，树越平衡。具体的还要看实际情况。</p>
<p>一般常见的平衡树有不少种：红黑树、AVL树、SBT、Treap、Splay等等。</p>
<p>它们的基本思想都是通过结点的左右旋来保持原本二叉搜索树的性质不变，然后高效完成。区别就是保持平衡的方式不同。</p>
<p>比如红黑树是把结点分成红黑两种，然后各种旋转稳定，貌似效率相当高，然而实现比较麻烦。</p>
<p>Treap是用优先级的思想，在树上加上堆($Treap=Tree+Heap$)。</p>
<p>相比起来Splay比较特殊，Splay其实并不是一棵严格意义上的平衡树，因为它的操作并不是主要为了保证左右平衡的，它的特点主要是结构比较灵活，可以用来处理一些正常平衡树完成不了的问题，缺点就是<strong>常数大</strong>，效率可能不高。嗯，这是后话。</p>
<p>今天的重点是这个：</p>
<h1 id="SBT">SBT</h1><hr>
<p>节点大小平衡树(Size Balanced Tree)是一种自平衡二叉查找树。</p>
<p>它是由中国广东中山纪念中学的<strong><a href="http://baike.baidu.com/link?url=IMXNAlg4eSURJj4WnvexBcdQkQzxLN0M9NpkZWjiNq-Kg6uT5dxXOjmso69yfdyExqG9gGD4RthT7Nz7n5Oy5K" target="_blank" rel="external">陈启峰</a></strong>（也是个神人，本来那年拿到了北美地区的ACM冠军，结果封神之路上遇到了Watashi）发明的。陈启峰于2006年底完成论文《<a href="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-Qifeng-Chen《Size Balanced Tree》.pdf" target="_blank" rel="external">Size Balanced Tree</a>》，并在2007年的全国青少年信息学奥林匹克竞赛冬令营中发表。</p>
<p>相比红黑树、AVL树等自平衡二叉查找树，SBT更易于实现。据陈启峰在论文中称，SBT是“目前为止速度最快的高级二叉搜索树”。</p>
<h2 id="旋转">旋转</h2><p>首先是所有平衡树中都会用到的旋转操作，平衡树需要不断改变树的结构，但是改变结构的同时又必须保证的是整棵树的二叉查找树性质<strong>不能被破坏掉</strong>（要是二叉查找树性质都没了，下面就不用玩了）。</p>
<p>调整方式就是逐点进行左旋或者右旋：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-1.png" alt="rotate"></p>
<p>以上图作为例子，左右旋实现起来其实也很简单，就是交换一下x、y的父子关系，然后调整B子树的连接情况，且能够保证整体的二叉搜素性质不改变。</p>
<h2 id="SBT的特殊性质">SBT的特殊性质</h2><p>我们给二叉搜索树的结点增加一个size域，用来保存以该节点为根的子树中一共有多少个结点。</p>
<p>上面说了，SBT是通过结点大小(Size)来调整整棵树的平衡性的，它相比一般的二叉搜索树多出来的性质有两条：</p>
<p>对于SBT中的每一个结点t，有：</p>
<ol>
<li><p>$size[right[t]]&gt;=size[left[left[t]]],size[right[left[t]]]$</p>
</li>
<li><p>$size[left[t]]&gt;=size[left[right[t]]],size[right[right[t]]]$</p>
</li>
</ol>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-2.png" alt="maintain"></p>
<p>以上图为例，性质是：</p>
<ol>
<li>$size[R]&gt;=size[A]$</li>
<li>$size[R]&gt;=size[B]$</li>
<li>$size[L]&gt;=size[C]$</li>
<li>$size[L]&gt;=size[D]$</li>
</ol>
<h2 id="如何维护这种性质？Maintain(&amp;_t)">如何维护这种性质？Maintain(&amp; t)</h2><p><strong>为了便于说明，以下部分左右旋与Maintain函数的参数传递均为实参</strong></p>
<p>我们从上图开始，把整棵树的结构分成几种情况来看：</p>
<h3 id="Case_1：size[left[left[t]]]&gt;size[right[t]]">Case 1：size[left[left[t]]]&gt;size[right[t]]</h3><ul>
<li>首先对t进行右旋，此时t更新成了原图中的L</li>
</ul>
<p>得到如下的结果：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-3.png" alt="3"></p>
<ul>
<li><p>则对于图中的T，其子树不一定满足性质，需要Maintain(T)</p>
</li>
<li><p>当T调整完之后，T的子树与L可能也不一定满足性质，需要再次Maintain(L)</p>
</li>
</ul>
<p>该过程的伪代码为：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">If size[<span class="attribute">left</span>[<span class="attribute">left</span>[t]]]&gt;size[<span class="attribute">right</span>[t]] then</span><br><span class="line">	<span class="function"><span class="title">Right-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(right[t])</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(t)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Case_2:_size[right[left[t]]]&gt;size[right[t]]">Case 2: size[right[left[t]]]&gt;size[right[t]]</h3><p>这种情况要稍微复杂一些：</p>
<p>我们把原图中的B再往下画一层：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-4.png" alt="4"></p>
<ul>
<li>首先对L进行左旋</li>
</ul>
<p>得到：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-5.png" alt="5"></p>
<ul>
<li>再右旋T</li>
</ul>
<p>得到：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-6.png" alt="6"></p>
<ul>
<li><p>经过上面两步操作之后，整棵树的结构可以说是完全改变了，具体形态也可能变得难以预测。但是根据左右旋的性质，我们可以保证上图的结果中A、E、F、R都是性质完好的SBT，所以只要分别Maintain(L)和Maintain(T)即可。</p>
</li>
<li><p>经过上面那一步，我们能保证L和T以及其子树都是性质完好了，但是它们之间的任然不能确保，所以需要再Maintain(B)一次</p>
</li>
</ul>
<p>该过程的伪代码：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">If s[<span class="attribute">right</span>[<span class="attribute">left</span>[t]]&gt;s[<span class="attribute">right</span>[t]] then</span><br><span class="line">	<span class="function"><span class="title">Left-Rotate</span><span class="params">(left[t])</span></span></span><br><span class="line">	<span class="function"><span class="title">Right-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(left[t])</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(right[t])</span></span></span><br><span class="line">	<span class="function"><span class="title">Maintain</span><span class="params">(t)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Case_3:_size[right[right[t]]]&gt;size[left[t]]">Case 3: size[right[right[t]]]&gt;size[left[t]]</h3><p>情况与第一种类似，刚好相反</p>
<h3 id="Case_4:_size[left[right[t]]]&gt;size[left[t]]">Case 4: size[left[right[t]]]&gt;size[left[t]]</h3><p>情况与第二种类似，刚好相反</p>
<h3 id="总结">总结</h3><p>按照上述说明，Maintain函数就是四个if语句分开即可，但是中间可能会有一些不必要的操作，故作者在<a href="(http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-19-sbt-Qifeng-Chen《Size Balanced Tree》.pdf">论文</a>)中也对其进行了改进。</p>
<p>可以发现1、2与3、4的判断是可以分开的，于是可以添加一个标记参数，已确定接下来的Maintain中需要检查哪一边</p>
<p>改进之后的伪代码：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Maintain (t,flag)</span><br><span class="line">	If flag=false then</span><br><span class="line">		If size[<span class="attribute">left</span>[<span class="attribute">left</span>[t]]]&gt;size[<span class="attribute">right</span>[t]] then</span><br><span class="line">			<span class="function"><span class="title">Right-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">		Elseif size[<span class="attribute">right</span>[<span class="attribute">left</span>[t]]&gt;size[<span class="attribute">right</span>[t]] then</span><br><span class="line">			<span class="function"><span class="title">Left-Rotate</span><span class="params">(left[t])</span></span></span><br><span class="line">			<span class="function"><span class="title">Right-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">		Else exit</span><br><span class="line">	Elseif size[<span class="attribute">right</span>[<span class="attribute">right</span>[t]]]&gt;size[<span class="attribute">left</span>[t]] then</span><br><span class="line">    	<span class="function"><span class="title">Left-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">	Elseif size[<span class="attribute">left</span>[<span class="attribute">right</span>[t]]]&gt;size[<span class="attribute">left</span>[t]] then</span><br><span class="line">		<span class="function"><span class="title">Right-Rotate</span><span class="params">(right[t])</span></span></span><br><span class="line">		<span class="function"><span class="title">Left-Rotate</span><span class="params">(t)</span></span></span><br><span class="line">    Else exit</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">Maintain</span><span class="params">(left[t],false)</span></span></span><br><span class="line">    <span class="function"><span class="title">Maintain</span><span class="params">(right[t],true)</span></span></span><br><span class="line">    <span class="function"><span class="title">Maintain</span><span class="params">(t,false)</span></span></span><br><span class="line">    <span class="function"><span class="title">Maintain</span><span class="params">(t,true)</span></span></span><br></pre></td></tr></table></figure>
<h2 id="愉快地使用SBT">愉快地使用SBT</h2><p>SBT的核心操作是Maintain，经过上面这么多内容，我想你已经掌握了。</p>
<p>SBT支持所有普通二叉查找树的操作（显而易见），而有了Maintain，之后所有的操作都是在普通的二叉查找树的基础上加以改进即可，可以衍生出更多有用的操作。</p>
<ul>
<li>插入</li>
</ul>
<p>正常的二叉查找树插入操作，插入完之后Maintain维护性质</p>
<ul>
<li>删除</li>
</ul>
<p>直接使用正常的二叉查找树删除操作即可。</p>
<blockquote>
<p>你说SBT性质可能会被破坏？</p>
</blockquote>
<p>嗯，是的。确实可能会出现这种情况，然而平衡树的操作是为了是的树的平均深度的平衡性。对于删除来说，删除一个结点并不会增加树的深度，所以在这里不用Maintain对整体并不会有什么影响，下次其他操作的Maintain就可以修复这个问题了。</p>
<ul>
<li>查找</li>
</ul>
<p>与正常的二叉查找树相同</p>
<ul>
<li>查找第k大</li>
</ul>
<p>由于每个结点的Size域，我们可以快速找出整个数列中第k大的数。根结点是第size[左子树]+1小的数，所以从根结点出发，按照大小关系不断遍历左右子树即可。</p>
<p>复杂度也是O(logn)的。</p>
<h2 id="最终代码示例">最终代码示例</h2><p>这份模板是我自己改过好多遍的，当初学这个的时候特别痛苦。网站找的别人的模板要不就有问题，要不就写得让人觉得很难受。然后找到的几个人的模板还都不一样，参考都累。</p>
<p>最后自己在纸上推左右旋推了很久才定下来，后来做题的时候又改进过好多遍。</p>
<p>推荐大家多画图。。。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">MYID	: Chen Fan</span><br><span class="line">LANG	: G++</span><br><span class="line">PROG	: Size Balanced Tree</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN 100010</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sons[MAXN][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> size[MAXN],data[MAXN];</span><br><span class="line"><span class="keyword">int</span> sbt=<span class="number">0</span>,sbttail=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> &amp;t,<span class="keyword">int</span> w)</span> <span class="comment">//rotate(&amp;node,0/1)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k=sons[t][<span class="number">1</span>-w];</span><br><span class="line">	<span class="keyword">if</span> (!k) <span class="keyword">return</span> ;</span><br><span class="line">	sons[t][<span class="number">1</span>-w]=sons[k][w];</span><br><span class="line">	sons[k][w]=t;</span><br><span class="line">	size[k]=size[t];</span><br><span class="line">	size[t]=size[sons[t][<span class="number">0</span>]]+size[sons[t][<span class="number">1</span>]]+<span class="number">1</span>;</span><br><span class="line">	t=k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">maintain</span><span class="params">(<span class="keyword">int</span>&amp; t,<span class="keyword">bool</span> flag)</span> <span class="comment">//maintain(&amp;node,flag)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!t) <span class="keyword">return</span> ;</span><br><span class="line">	<span class="keyword">if</span> (!flag)</span><br><span class="line">		<span class="keyword">if</span> (size[sons[sons[t][<span class="number">0</span>]][<span class="number">0</span>]]&gt;size[sons[t][<span class="number">1</span>]]) rotate(t,<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (size[sons[sons[t][<span class="number">0</span>]][<span class="number">1</span>]]&gt;size[sons[t][<span class="number">1</span>]]) </span><br><span class="line">		&#123;</span><br><span class="line">			rotate(sons[t][<span class="number">0</span>],<span class="number">0</span>);</span><br><span class="line">			rotate(t,<span class="number">1</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">return</span> ;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">if</span> (size[sons[sons[t][<span class="number">1</span>]][<span class="number">1</span>]]&gt;size[sons[t][<span class="number">0</span>]]) rotate(t,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (size[sons[sons[t][<span class="number">1</span>]][<span class="number">0</span>]]&gt;size[sons[t][<span class="number">0</span>]])</span><br><span class="line">		&#123;</span><br><span class="line">			rotate(sons[t][<span class="number">1</span>],<span class="number">1</span>);</span><br><span class="line">			rotate(t,<span class="number">0</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">return</span> ;</span><br><span class="line">	</span><br><span class="line">	maintain(sons[t][<span class="number">0</span>],<span class="keyword">false</span>);</span><br><span class="line">	maintain(sons[t][<span class="number">1</span>],<span class="keyword">true</span>);</span><br><span class="line">	maintain(t,<span class="keyword">false</span>);</span><br><span class="line">	maintain(t,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span>&amp; t,<span class="keyword">int</span> v,<span class="keyword">int</span> pos)</span> <span class="comment">//insert(&amp;root,value,pos/0)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!size[t])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!pos)</span><br><span class="line">		&#123;</span><br><span class="line">			sbttail++;</span><br><span class="line">			pos=sbttail;</span><br><span class="line">		&#125;</span><br><span class="line">		data[pos]=v;</span><br><span class="line">		size[pos]=<span class="number">1</span>;</span><br><span class="line">		sons[pos][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">		sons[pos][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">		t=pos;</span><br><span class="line">	&#125; <span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		size[t]++;</span><br><span class="line">		<span class="keyword">if</span> (v&lt;data[t]) insert(sons[t][<span class="number">0</span>],v,pos);</span><br><span class="line">		<span class="keyword">else</span> insert(sons[t][<span class="number">1</span>],v,pos);</span><br><span class="line">		maintain(t,v&gt;=data[t]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> last; <span class="comment">//last node</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span>&amp; t,<span class="keyword">int</span> v)</span> <span class="comment">//value=del(&amp;root,key)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	size[t]--;</span><br><span class="line">	<span class="keyword">if</span> (v==data[t]||(v&lt;data[t]&amp;&amp;sons[t][<span class="number">0</span>]==<span class="number">0</span>)||(v&gt;data[t]&amp;&amp;sons[t][<span class="number">1</span>]==<span class="number">0</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> ret=data[t];</span><br><span class="line">		<span class="keyword">if</span> (sons[t][<span class="number">0</span>]==<span class="number">0</span>||sons[t][<span class="number">1</span>]==<span class="number">0</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			last=t;</span><br><span class="line">			t=sons[t][<span class="number">1</span>]+sons[t][<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> data[t]=del(sons[t][<span class="number">0</span>],data[t]+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">return</span> ret;</span><br><span class="line">	&#125; <span class="keyword">else</span></span><br><span class="line">	<span class="keyword">if</span> (v&lt;data[t]) <span class="keyword">return</span> del(sons[t][<span class="number">0</span>],v);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> del(sons[t][<span class="number">1</span>],v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delk</span><span class="params">(<span class="keyword">int</span>&amp; t,<span class="keyword">int</span> k)</span> <span class="comment">//value=del(&amp;root,k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	size[t]--;</span><br><span class="line">	<span class="keyword">if</span> (size[sons[t][<span class="number">0</span>]]+<span class="number">1</span>==k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> ret=data[t];</span><br><span class="line">		<span class="keyword">if</span> (sons[t][<span class="number">0</span>]==<span class="number">0</span>||sons[t][<span class="number">1</span>]==<span class="number">0</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			last=t;</span><br><span class="line">			t=sons[t][<span class="number">1</span>]+sons[t][<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> data[t]=delk(sons[t][<span class="number">0</span>],data[t]+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">return</span> ret;</span><br><span class="line">	&#125; <span class="keyword">else</span></span><br><span class="line">	<span class="keyword">if</span> (k&lt;=size[sons[t][<span class="number">0</span>]]) <span class="keyword">return</span> delk(sons[t][<span class="number">0</span>],k);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> delk(sons[t][<span class="number">1</span>],k-<span class="number">1</span>-size[sons[t][<span class="number">0</span>]]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">select</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> k)</span> <span class="comment">//node=select(root,k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (k==size[sons[t][<span class="number">0</span>]]+<span class="number">1</span>) <span class="keyword">return</span> t;</span><br><span class="line">	<span class="keyword">if</span> (k&lt;=size[sons[t][<span class="number">0</span>]]) <span class="keyword">return</span> select(sons[t][<span class="number">0</span>],k);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> select(sons[t][<span class="number">1</span>],k-<span class="number">1</span>-size[sons[t][<span class="number">0</span>]]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> x)</span> <span class="comment">//node=search(root,x)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (t==<span class="number">0</span>||x==data[t]) <span class="keyword">return</span> t;</span><br><span class="line">	<span class="keyword">if</span> (x&lt;data[t]) <span class="keyword">return</span> search(sons[t][<span class="number">0</span>],x);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> search(sons[t][<span class="number">1</span>],x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deb_out</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"-------\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"sbttail=%d sbt=%d\n"</span>,sbttail,sbt);</span><br><span class="line">	<span class="keyword">for</span>	(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=sbttail;i++)</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%2d: key=%2d size=%2d left=%2d right=%2d\n"</span>,i,data[i],size[i],sons[i][<span class="number">0</span>],sons[i][<span class="number">1</span>]);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"-------\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	sbttail=<span class="number">0</span>;</span><br><span class="line">	sbt=<span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>	(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">15</span>;i++) insert(sbt,i,<span class="number">0</span>);</span><br><span class="line">	deb_out();</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//printf("%d\n",del(sbt,8));</span></span><br><span class="line">	insert(sbt,<span class="number">8</span>,<span class="number">0</span>);</span><br><span class="line">	deb_out();</span><br><span class="line">	del(sbt,<span class="number">8</span>);</span><br><span class="line">	del(sbt,<span class="number">8</span>);</span><br><span class="line">	<span class="comment">//printf("%d\n",search(sbt,8));</span></span><br><span class="line">	deb_out();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="后话">后话</h2><p>SBT可以用来快速维护一组数的插入、查找、删除、找第k大，然而你会发现只是想要单纯地实现这个功能，C++ STL 中的set就可以做到。哦对了，set不能找第k大……</p>
<blockquote>
<p>事实上set里面就是用<strong>红黑树</strong>来进行维护的。。。<br>然而我并不会红黑树。。。<br>然而你们也并不需要会红黑树。。。<br>因为直接用set就好了啊。。。-_-///<br>不用set那么用SBT嘛，这种东西学一个就差不多了</p>
</blockquote>
<p>所以虽然SBT效率高，但是扩展性似乎并没有特别强，一般需要用到的也就是只有动态多次求第k的时候。</p>
<p>真正想要见识一下神器的，请在未来好好研究学习Treap和Splay吧，这两个在应用的时候比SBT的用途广很多。</p>
<p>如需要模板题练手，请点击页面下方的标签查看详情。</p>
<p>当然模板可以参考，不过还是不要复制粘贴代码了，最好能自己写一遍。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>这将会是你踏入高级数据结构的第一步。<br></blockquote>

<p>终于要开始给队里面讲这种比较高级的数据结构了，也趁此机会自己好好理理。</p>
<p>首先要讲的是这个：</p>
<h1 id="二叉搜索树">二叉搜索树</h1><hr>
<p>二叉搜索树又叫二叉排序树，它的定义很简单：</p>
<ol>
<li><p>这是一棵二叉树</p>
</li>
<li><p>令x为二叉树中某个结点上表示的值，那么其左子树上所有结点的值都要不大于x，其右子树上所有结点的值都要不小于x</p>
</li>
</ol>]]>
    
    </summary>
    
      <category term="SBT" scheme="http://jcf94.github.io/tags/SBT/"/>
    
      <category term="平衡树" scheme="http://jcf94.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
      <category term="ACM" scheme="http://jcf94.github.io/categories/ACM/"/>
    
      <category term="算法学习" scheme="http://jcf94.github.io/categories/ACM/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[专业知识整理]]></title>
    <link href="http://jcf94.github.io/2015/06/19/2015-06-19-zhuanye/"/>
    <id>http://jcf94.github.io/2015/06/19/2015-06-19-zhuanye/</id>
    <published>2015-06-19T02:15:23.000Z</published>
    <updated>2015-07-01T12:47:12.000Z</updated>
    <content type="html"><![CDATA[<p>昨天刚开了大三大四的专业班会，本来是几个大四的讲解保研、考研、工作经验的，最后系主任吴老大站起来总结陈词。。。</p>
<blockquote>
<p>不愧是吴老大啊！一下就抓住了问题的关键，连着又把我们教育了一通。。。</p>
</blockquote>
<p>起因是：保研的学姐说她面试的时候被人老师问到个整流电路，答不上来，问到个采样定理，答不上来。找工作的学长说他面试的时候被人总监让写个C语言程序，写不出来。</p>
<p>然后吴老大果断抓住重点，开始批评教育！！！</p>
<blockquote>
<p>隐忧啊什么的<br><strong>要重基础！要重基础！要重基础！</strong>重要的事情要说好多遍！</p>
</blockquote>
<p>好吧，好像确实很有道理的样子。正好接下来也要准备夏令营面试。打算慢慢开始重新整理下大一到现在学过的专业课。</p>
<p>先占个坑。</p>
<a id="more"></a>
<p>嗯！首先理下之前学过的课,</p>
<h1 id="前三年学过的课程">前三年学过的课程</h1><hr>
<p>2012-2013学年<br>秋<br><del>[24050010]计算机应用基础</del><br><del>[12070060]机械制图</del><br><del>[14030010]体育（1）</del><br><del>[64050010]军事理论</del><br><del>[11070010]思想道德修养与法律基础</del><br><del>[13030011]大学英语（1）</del><br>[12031011]高等数学(1)<br><del>[24040010]通信技术导论</del><br><del>[2404001S]入学教育与毕业教育</del><br><del>[6405001S]军训</del><br>春<br><del>[12040011]大学物理（1）</del><br><del>[14030020]体育（2）</del><br><del>[11160010]中国近现代史纲要</del><br><del>[13030012]大学英语（2）</del><br>[12031012]高等数学(2)<br>[24050030]C语言程序设计<br><del>[33<strong>**</strong>]公共艺术类课</del><br>[24040020]数据库原理及应用<br><del>[24040030]计算机软件技术基础</del></p>
<p>2013-2014学年<br>秋<br><del>[11050010]马克思主义基本原理概论</del><br><del>[13030013]大学英语（3）</del><br>[12031030]线性代数<br><del>[12040012]大学物理（2）</del><br><del>[14030030]体育（3）</del><br>[12031110]复变函数与积分变换<br><del>[12040110]物理实验</del><br><del>[11080440]文献检索</del><br>[32051010]电路分析基础<br>[24040040]电磁场与电磁波<br>[24040050]信号与系统<br><del>[2404031S]公益劳动</del><br>春<br><del>[11060010]毛泽东思想和中国特色社会主义理论体系概论</del><br><del>[13030014]大学英语（4）</del><br>[12031040]概率论与数理统计<br><del>[14030040]体育（4）</del><br>[32053010]模拟电子技术基础<br>[24040060]数字信号处理<br>[24040070]自动控制概论<br>[24040080]传感器基础<br><del>[11<strong>**</strong>]思想政治理论课实践</del><br><del>[2404006S]数字信号处理课程设计</del></p>
<p>2014-2015学年<br>秋<br>[24040090]微机原理与接口技术<br>[24040100]高频电子线路<br>[24040110]通信系统原理<br>[32054010]数字电子技术基础<br>[24040130]信息论与编码技术<br><del>[24040120]专业英语</del><br>[24040150]数字图像处理<br><del>[2404009S]微机原理与接口技术课程设计</del><br><del>[3205702S]电子技术基础课程设计</del><br><del>[2404010S]高频电子线路课程设计</del><br>春<br>[24040160]数字光纤通信<br>[24040170]微波技术与天线<br>[24040180]现代交换技术<br>[24040190]移动通信<br>[24040230]数据通信与计算机网络<br>[24040210]单片机原理<br>[24040220]VHDL语言与数字EDA设计<br>[24040200]数字视频技术<br><del>[2404032S]电装实习</del><br><del>[2404022S]EDA课程设计</del></p>
<hr>
<h1 id="数学相关">数学相关</h1><h2 id="高等数学">高等数学</h2><h2 id="线性代数">线性代数</h2><h2 id="复变函数与积分变换">复变函数与积分变换</h2><p>作为信号系列的数学基础课，向上支撑信号系统、数字信号处理之类的课。</p>
<p>详见 <a href="/2015/07/01/2015-07-01-xinhaoxiangguan/">信号相关专业复习</a></p>
<h2 id="概率论与数理统计">概率论与数理统计</h2><hr>
<h1 id="专业课">专业课</h1><hr>
<h2 id="电学/无线电">电学/无线电</h2><h3 id="电路分析基础">电路分析基础</h3><h3 id="模拟电子技术基础">模拟电子技术基础</h3><h3 id="数字电子技术基础">数字电子技术基础</h3><h3 id="高频电子线路">高频电子线路</h3><h3 id="电磁场与电磁波">电磁场与电磁波</h3><h3 id="微波技术与天线">微波技术与天线</h3><p>主要内容是研究由电磁场与电磁波衍生出来的无线电技术，微波、天线与电波传播</p>
<p>详见 <a href="/2015/06/27/2015-06-27-weibojishuyutianxian/">微波技术与天线 复习笔记</a></p>
<hr>
<h2 id="信号/通信">信号/通信</h2><h3 id="信号与系统">信号与系统</h3><h3 id="数字信号处理">数字信号处理</h3><h3 id="信息论与编码技术">信息论与编码技术</h3><h3 id="通信系统原理">通信系统原理</h3><p>详见 <a href="/2015/07/01/2015-07-01-xinhaoxiangguan/">信号相关专业复习</a></p>
<h3 id="数字光纤通信">数字光纤通信</h3><h3 id="现代交换技术">现代交换技术</h3><p>介绍一些交换网中使用的技术，程控交换机等。</p>
<p>详见 <a href="/2015/05/28/2015-05-28-xiandaijiaohuan/">现代交换原理 复习笔记 部分</a></p>
<h3 id="移动通信">移动通信</h3><hr>
<h2 id="计算机应用/硬件">计算机应用/硬件</h2><h3 id="C语言程序设计">C语言程序设计</h3><h3 id="数据库原理及应用">数据库原理及应用</h3><h3 id="微机原理与接口技术">微机原理与接口技术</h3><h3 id="数据通信与计算机网络">数据通信与计算机网络</h3><h3 id="单片机原理">单片机原理</h3><h3 id="VHDL语言与数字EDA设计">VHDL语言与数字EDA设计</h3><hr>
<h2 id="自动化">自动化</h2><h3 id="自动控制概论">自动控制概论</h3><h3 id="传感器基础">传感器基础</h3><hr>
<h2 id="图像处理">图像处理</h2><h3 id="数字图像处理">数字图像处理</h3><h3 id="数字视频技术">数字视频技术</h3><p>介绍数字视频处理技术。</p>
<p>详见 <a href="/2015/05/30/2015-05-30-shuzishipin/">数字视频 复习笔记</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>昨天刚开了大三大四的专业班会，本来是几个大四的讲解保研、考研、工作经验的，最后系主任吴老大站起来总结陈词。。。</p>
<blockquote>
<p>不愧是吴老大啊！一下就抓住了问题的关键，连着又把我们教育了一通。。。</p>
</blockquote>
<p>起因是：保研的学姐说她面试的时候被人老师问到个整流电路，答不上来，问到个采样定理，答不上来。找工作的学长说他面试的时候被人总监让写个C语言程序，写不出来。</p>
<p>然后吴老大果断抓住重点，开始批评教育！！！</p>
<blockquote>
<p>隐忧啊什么的<br><strong>要重基础！要重基础！要重基础！</strong>重要的事情要说好多遍！</p>
</blockquote>
<p>好吧，好像确实很有道理的样子。正好接下来也要准备夏令营面试。打算慢慢开始重新整理下大一到现在学过的专业课。</p>
<p>先占个坑。</p>]]>
    
    </summary>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="我的大学" scheme="http://jcf94.github.io/categories/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[退役帖 伪]]></title>
    <link href="http://jcf94.github.io/2015/06/13/2015-06-13-tuiyi/"/>
    <id>http://jcf94.github.io/2015/06/13/2015-06-13-tuiyi/</id>
    <published>2015-06-13T05:20:32.000Z</published>
    <updated>2015-06-19T07:41:34.153Z</updated>
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>曾经为之付出过这么多的努力，在这个圈子中也认识了这么多优秀的人<br>要我怎么说放手？<br></blockquote>

<p>之前最后一次外出参赛是今年的省赛，也就是上周的这个时候吧，还正坐在赛场上苦思冥想中。。。</p>
<p>丧气的话也不想说了，毕竟还是自己实力不够，心态不行，真正的高手就算被水题坑了，也还是能够坚持做出其他的题来。</p>
<p>这段时间忙的事很多，学校里面是考试、实验、课设，另一边还要自己准备材料投夏令营。原本想着这个自己做的博客也要好好写，好好弄，结果干完正事之后也就几乎不想再碰电脑了。</p>
<p>然后翻了下前面写的几篇，越看越觉得画风不太对。。。都是日常和随笔。。。莫名其妙地就从原本想搞的技术博变成个情感交流博了（捂脸）。。。嗯！有空一定把前面博客园的帖子移回来！嗯！有空一定！</p>
<p>也是想了好多事。</p>
<a id="more"></a>
<hr>
<h1 id="回忆篇：">回忆篇：</h1><p>说说我回忆中的历程吧。</p>
<h2 id="OI是个起点">OI是个起点</h2><p>要说我最早接触coding是在什么时候？</p>
<p>其实早到初中。</p>
<p>我已经忘了那年是怎么被老师看中的了。唯一记得的是那时还是初一，还是在三中北校区的时候，有天，漂亮的女电脑老师找到我和脑袋，交给我们一份Pascal的资料说问我们想不想学？于是历史的车轮开始转动。</p>
<p>现在想想小时候还真是全能搞。。。-_-///初中参加过作文比赛、数学竞赛、英语竞赛、物理竞赛、化学竞赛，然而当时也并不看重计算机的。只是记得就上过一学期的课，然后NOIP普及组的初赛并没有过。。。</p>
<p>后来我们之后三中就再也没有听说过老师有再带过其他人了。想来也是命运和偶然。</p>
<hr>
<p>后来考到了温中，跟脑袋一起考进了前四班，又遇到了在我人生中领路的又一个重要老师。军辉顶着当时学校其他老师都不怎么支持的压力，毅然拉出了一个WZOI团队！</p>
<p>机房里每人一台电脑，一本黄皮书，一个暑假。刷完书的留下来，这台电脑贴上标签以后归你用，刷不完的继续或者离开。然后军辉自己开车带我们去椒江打NOIP的初赛，自己开车带我们去绍兴打复赛。</p>
<p>三年的暑假都给了OI，其实我也从来没有后悔过。开始的初衷是感兴趣，也许拿了奖高考能加分。后来我们能出成绩那年，国家出政策说加分取消。我问自己还要不要学下去？</p>
<blockquote>
<p>要！这么好玩的事情，真的不想放手！</p>
</blockquote>
<p>然后高三即使到了最后，我也依然继续留在了机房。</p>
<p>前几天翻那年今日还翻出以前自己高二时候写的东西来：</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-13-tuiyi-1.jpg" alt="gaosan"></p>
<hr>
<p>后来那年比的最后一次NOIP也就这样了，成绩并没有好到能进省队啊，NOI啊，保送啊。我仍然是个弱渣，小透明而已。</p>
<p>再后来高考没有考好。出成绩的时候就已经蒙了。</p>
<p>我爸妈说后面的事情你自己选择吧，如果想复读一年，大不了再接送你上学一年</p>
<hr>
<p>最终我还是没勇气打电话给之前联系好的复读班，第二天爸妈找了个路桥那边专业帮人填志愿的老师，我翘掉了这天本来要去参加的初中同学会。</p>
<p>那时候我提的唯一两个要求</p>
<blockquote>
<p>211<br>通信工程</p>
</blockquote>
<p>最后出录取结果的那天，前三个志愿都差几分，第四个——<strong>长安大学</strong>，上了。</p>
<p>什么鬼？从来没听过这个学校的名字好么。。。</p>
<p>然而我来了。</p>
<hr>
<h2 id="ACM不是终点">ACM不是终点</h2><p>大学是个新开始，我极尽锋芒地展现着我的一切。</p>
<p>顺利地选上军训负责人，当上班长，加入我想去的学生组织，带领班级开始在学院的各种我能做到的比赛中争冠，选上下一级的班导员，作为成功学长给下几级新生讲解经验，建立社团……</p>
<p>我敢说我们专业是我们学院中我们这级，乃至我们往后这么多级中表现最为出色的！</p>
<blockquote>
<p>话说我越想越觉得我在这里和在家里就是两个完全不同的人。。。-_-///大概在家习惯了小透明，习惯了在所有人眼中我都是可以忽略的那一个。可是在这里，有太多我需要承担的事情了，上面是老师，下面是我的班，我的社团，都是我的人。<br>然后自己下意识地就把两个世界分开了。我从来没想过要介绍大学同学给高中同学认识，也从来不想跟大学的同学讲太多我以前的事情。<br>就像是踏上火车的那一瞬间，一个我沉睡，另一个我就切换过来了。只有在电话里和网络的另一头，才维持着另外一种联系。<br><strong>说双子座双重人格神马的都可以哪凉快哪呆着去啦。。。哥才没有精神分裂！！</strong></p>
</blockquote>
<p>很难描述当我第一次听说长大也有一群人在搞ACM时的心情。那就像是，竟然都会有他乡遇故知的感觉。</p>
<p>后来我见到了在我这条路上给予我们最大支持的老师，也知道了长大的ACM现状其实并不好。然而对我来说，这样一个平台让我觉得我的未来还能够继续坚持我所喜欢的，还能继续为我曾经的梦想奋斗！</p>
<p>荆老师也很高兴能够有一个有着很多基础的新生加入，那时候也是对我寄予厚望吧。。。只可惜最后在我手上还是没能够实现长大ACM的辉煌。</p>
<h3 id="我的第一队">我的第一队</h3><p>大一一来马上就被荆老师加入了当时长大ACM的一队。我的队友是高我两级的PSW，和高我一级的LQ。</p>
<p>PSW是长大之前实力最强的ACM选手了，我们一起去过南京邀请赛、西安省赛、成都现场赛。可惜最后他要毕业离开的时候，还是只能遗憾地希望我能够撑起未来振兴长大的重担。</p>
<p>还能说什么呢？只能怪那时候的自己没有觉悟，要忙班里的事，要忙学生组织的事，总想着未来还有时间，没有能再多抓紧时间训练了。</p>
<p>我后来想了下，我的一整个大一乃至大二，编程实力都没有过太大的进步，除了Pascal转C之外，几乎都只是在吃高中留下来的那点老本。</p>
<blockquote>
<p>现实总是这么讽刺，没有经历的时候很难自己觉悟，等到自己觉得晚了的时候，那就真的已经晚了。</p>
</blockquote>
<h3 id="第二队">第二队</h3><p>PSW毕业去了复旦，然后是<a href="http://bigballon.github.io/" target="_blank" rel="external">LW</a>转到我们队开始一起努力。</p>
<p>LW也是从大一开始就跟我关系最好的几个之一了。</p>
<p>我们一起加的科协，一起在组织里学习奋斗，一起在学院的比赛中为自己的班级相互拼。</p>
<p>这年我们第一次开始尝试运营我们自己的OJ站。遗憾最后IP还是被学校回收了。</p>
<p>这年情况也没有怎么好转，打过西安邀请赛、北京邀请赛。还是一次一次让荆老师失望。</p>
<h3 id="Xorzip!!">Xorzip!!</h3><p>真正让我们觉得长大ACM事业出现转机的还是在大二最后的时候。</p>
<p>我和LW一起遇到了<a href="http://www.cnblogs.com/AOQNRMGYXLMV/" target="_blank" rel="external">SYH</a>。（<a href="http://www.jianshu.com/p/7feeac080171" target="_blank" rel="external">代码也可以这样有趣</a>）</p>
<p>他对于算法，对于ACM的狂热之于我们俩有过之而无不及，也是比我们两个还要努力。</p>
<p>只能说相见恨晚吧，如果再早一年遇到他，可能长大历史会更早一些被改写，因为这一年中，我们开创了长大史上太多个<strong>第一次</strong>。</p>
<ul>
<li>虽然那年的网络赛我们还是一样菜，我们<strong>第一次</strong>开始能够分析清楚比赛中出现的各种题目类型了！</li>
<li>长大的外出参赛队<strong>第一次</strong>有了<strong>正式的队名</strong>！从来以前派出去的队伍都只叫长大队，Xorzip也是我们历史上<strong>第一个独立队名</strong></li>
<li>以前从来参赛都是比完就走，我们<strong>第一次</strong>开始留下来详细听赛后题目解析，体会颁奖典礼中其他人的感受</li>
<li><strong>第一次</strong>开始真正融入ACM的圈子，<strong>第一次</strong>开始跟外校的其他高手们有了交流</li>
<li><strong>第一次</strong>建立了我们的<strong>ACM协会</strong>，长大ACM集训队<strong>第一次</strong>有了正式的组织</li>
<li><strong>第一次</strong>有了一套初步的训练体系，<strong>第一次</strong>从大一开始就带出了许多新人入门</li>
<li><strong>第一次</strong>举办规模盛大的赛事，邀请到这么多学校的高手们过来参加</li>
<li>……</li>
<li>……</li>
</ul>
<p>这一年我们见证了温岭中学WZOI团队中4位当时跟我一起努力奋斗的同学为他们的学校打进了Final。</p>
<p>见证了俄罗斯男神<a href="http://codeforces.com/profile/tourist/" target="_blank" rel="external">tourist</a>在Final中AC掉所有题目，破纪录封神！</p>
<p>见证了陕西省整体的ACM环境逐渐活跃起来，各校都开始奋起直追。</p>
<p>然而…</p>
<p>然而…</p>
<p>我还是没有做到。</p>
<hr>
<p>我从不后悔当初离开家乡当初来到这里，从不后悔走上这样一条路，只是恨自己没有实力。</p>
<p>赛场上最后几分钟时看着其他队伍纷纷出题，看着自己的排名一步一步往下滑，那种感觉刻骨铭心。</p>
<p>要说现在觉得遗憾的事情，很多：</p>
<ul>
<li>遗憾自己到最后都还是没有足够的实力把长大带向辉煌</li>
<li>遗憾自己这么多年还是辜负了荆老师、前辈的期望</li>
<li>遗憾当初不能醒悟过来，抓紧时间</li>
</ul>
<p>不过也很高兴这一路上认识了这么多优秀的人，认识了一起从零开始把A协拉起来的这么多小伙伴。</p>
<p>要感谢的人也太多太多。</p>
<p>然而…</p>
<p>然而…</p>
<p>我们马上就要大四了</p>
<hr>
<p>上周省赛回来的时候，同队的队友都比较沮丧。本来是抱着争金保银的目标去的，却因为出题方判题和数据的问题弄了个什么都没有。</p>
<p>这种心情真是难受至极。</p>
<p>LW说这应该是他最后一次比赛了。</p>
<hr>
<h1 id="未来篇：">未来篇：</h1><p>本来也想着，如果保研能够顺利，下学期还能再拼一把区域赛。</p>
<p>现实是，虽然总是被认识的人称为大神，然而我知道我并不是啊！</p>
<p>我剩余的大学时光都奉献给了ACM，却没有能够创造出太大的成就。而其他方面对于我来说却基本都是零。</p>
<p>之前已经有过被拒和落选的经历了，我也不能够确定剩下的三所学校的夏令营能不能顺利通过申请。</p>
<p>保研或是考研，区别只是先后而已，最终面对的竞争仍然还是那么激烈。</p>
<hr>
<p>也是很感谢爸妈从高中以来的支持，无论是我高三毅然坚持OI竞赛的选择，大学选专业，还是到了大学之后做的各种事情，他们都是说只要我觉得那些事情是正确的，他们就会支持我。</p>
<hr>
<p>今年暑假的大部分时间我应该还会待在学校里，可能会到8月初再回家一趟。</p>
<p>也是希望能将我所学的所有算法知识都教给现在长大ACM的队员们，今年暑假抓紧时间的话，应该还是能有很大进步的。</p>
<p>至少过了这个暑假之后，他们的实力要赶上、超越我们现在的水平！！</p>
<p><strong>我相信，长大ACM的未来是光明的！</strong></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=26624725&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<blockquote class="blockquote-center"><br>曾经为之付出过这么多的努力，在这个圈子中也认识了这么多优秀的人<br>要我怎么说放手？<br></blockquote>

<p>之前最后一次外出参赛是今年的省赛，也就是上周的这个时候吧，还正坐在赛场上苦思冥想中。。。</p>
<p>丧气的话也不想说了，毕竟还是自己实力不够，心态不行，真正的高手就算被水题坑了，也还是能够坚持做出其他的题来。</p>
<p>这段时间忙的事很多，学校里面是考试、实验、课设，另一边还要自己准备材料投夏令营。原本想着这个自己做的博客也要好好写，好好弄，结果干完正事之后也就几乎不想再碰电脑了。</p>
<p>然后翻了下前面写的几篇，越看越觉得画风不太对。。。都是日常和随笔。。。莫名其妙地就从原本想搞的技术博变成个情感交流博了（捂脸）。。。嗯！有空一定把前面博客园的帖子移回来！嗯！有空一定！</p>
<p>也是想了好多事。</p>]]>
    
    </summary>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="ACM" scheme="http://jcf94.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[生日 记]]></title>
    <link href="http://jcf94.github.io/2015/06/02/2015-06-02-birthday/"/>
    <id>http://jcf94.github.io/2015/06/02/2015-06-02-birthday/</id>
    <published>2015-06-02T15:22:58.000Z</published>
    <updated>2015-06-13T08:27:27.148Z</updated>
    <content type="html"><![CDATA[<p>不知不觉已经到了第21个生日，真心不想承认，又老了一岁……</p>
<p>然后就想着，去年的今天我在干什么？</p>
<p>明年的今天我会在干什么？明年大概就是快到了大家都要离开的日子了吧，嗯，我想明年一定不会放过这个日子！</p>
<a id="more"></a>
<hr>
<p>最常用的两个应用的提醒倒是跟的很快~~</p>
<p>空间总是最早就跟上的。记得大学刚开始那段日子，每天刷空间总是会记得先看看最近好友的生日，后来看得越来越少了，再后来空间看得也越来越少了。</p>
<p>也是越长大，似乎想说的话就越少了/^.^/，也都是下意识地只想说给自己那一个小圈子里的人听。于是空间状态越发越少，朋友圈越发越少…</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-033.jpg" alt="qzone"></p>
<p>话说从用网易云音乐开始就觉得它推荐的歌单很准，每次打开都能找到自己想听的歌。</p>
<p>换了不少音乐站，最后一直在用的也就是网易云和QQ啦。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-034.jpg" alt="wangyiyun"></p>
<hr>
<p>然后今年的生日没有告诉过别人，想着本来也就不是太看重这个日子啦。然后这几天事情各种多，考试、报告的deadline、然后是各种不算太好的消息、包括对未来的迷茫。原本想好的好好读个研究生的想法也因为突然的各种现实而动摇了，唉…不想说了</p>
<p>只是觉得心里挺空的，之前在忙着考试忙着赶报告的时候可以什么都不想。一旦考完了，放松下来之后，好多问题就自己冒出来到脑子里啦。总是想得都太远，也不知道这样是好事还是坏事。</p>
<p>嗯！生日嘛，本该就该是个高兴的日子啦，还有几个人能够记着，那就够了。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-031.jpg" alt="w1"></p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-032.jpg" alt="w2"></p>
<hr>
<p>最后是刚到的这两本书。</p>
<p><img src="http://7xjh3j.com1.z0.glb.clouddn.com/2015-06-035.jpg" alt="book"></p>
<p>虽说还要纠结下半年究竟该做何选择，然而我总认为我所要坚持的大方向还是这块自己感兴趣的东西，那就继续学咯~不管以后的日子会怎么样，不辜负自己的心意就好了。</p>
<p>愿你们的每一天都过得愉快。</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=368800&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>不知不觉已经到了第21个生日，真心不想承认，又老了一岁……</p>
<p>然后就想着，去年的今天我在干什么？</p>
<p>明年的今天我会在干什么？明年大概就是快到了大家都要离开的日子了吧，嗯，我想明年一定不会放过这个日子！</p>]]>
    
    </summary>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[数字视频 复习笔记]]></title>
    <link href="http://jcf94.github.io/2015/05/30/2015/2015-05-30-shuzishipin/"/>
    <id>http://jcf94.github.io/2015/05/30/2015/2015-05-30-shuzishipin/</id>
    <published>2015-05-30T13:42:29.000Z</published>
    <updated>2015-06-28T04:46:23.125Z</updated>
    <content type="html"><![CDATA[<h2 id="第一章_绪论">第一章 绪论</h2><h3 id="视频图像处理的概念">视频图像处理的概念</h3><p>视频是一组图像在<strong>时间轴</strong>上的<strong>有序排列</strong>，是二维图像在一维时间轴上构成的<strong>图像序列</strong>，又称<strong>动态图像、活动图像、运动图像</strong>。不止包含了静止图像的内容，还包含了目标的<strong>运动信息</strong>和<strong>客观世界随时间变化的信息</strong>。</p>
<p>序列&gt;帧&gt;像素</p>
<h3 id="视频图像处理系统的组成">视频图像处理系统的组成</h3><ol>
<li>图像<strong>采集</strong></li>
<li>图像<strong>显示</strong></li>
<li>图像<strong>存储</strong></li>
<li>图像<strong>通信</strong></li>
<li>图像<strong>处理和分析</strong></li>
</ol>
<a id="more"></a>
<p>图像处理和分析：</p>
<ol>
<li>图像变换</li>
<li>图像编码压缩</li>
<li>图像增强复原</li>
<li>图像分割</li>
<li>图像理解和识别</li>
</ol>
<hr>
<h2 id="第二章_视频图象的表示">第二章 视频图象的表示</h2><h3 id="图像的基本概念">图像的基本概念</h3><ol>
<li>光通量：光源辐射出来的光功率，单位流明（lm）</li>
<li>照度：单位面积上的光通量，单位勒克斯（lx，$1ls=1lm/m^2$）</li>
<li>亮度：观察者感觉光的量度，有主观性，又称辉度</li>
<li>视敏度：人眼对不同波长可见光的敏感程度</li>
<li>亮度适应级：一定条件下，人眼的亮度适应区间</li>
</ol>
<h3 id="分辨率">分辨率</h3><ol>
<li>图像分辨率<br>图像中存储的信息，单位像素/英寸（pixel per inch, ppi）</li>
<li>显示分辨率<br>构成画面像素点的多少，用宽高像素*像素表示</li>
<li>打印分辨率<br>又叫输出分辨率，决定打印机打印的惊喜程度，单位点/英寸（dot per inch, dpi）</li>
</ol>
<h3 id="人眼的视觉特性">人眼的视觉特性</h3><table>
<thead>
<tr>
<th></th>
<th>锥状细胞</th>
<th>柱状细胞</th>
</tr>
</thead>
<tbody>
<tr>
<td>结构</td>
<td>一个细胞连一个神经末梢</td>
<td>几个细胞连一个神经末梢</td>
</tr>
<tr>
<td>功能</td>
<td>感光/感色，区分细节</td>
<td>感光，提供整体形象</td>
</tr>
<tr>
<td>作用时间</td>
<td>强光下、白天</td>
<td>弱光下、黑夜</td>
</tr>
<tr>
<td>视觉</td>
<td>亮视觉</td>
<td>暗视觉</td>
</tr>
</tbody>
</table>
<p>锥状细胞分为<strong>红敏、绿敏、蓝敏</strong>。</p>
<p>三基色原理。</p>
<p>影响人眼分辨力的因素：<strong>环境照度、景物相对对比度、被观察物体的距离和运动状态</strong></p>
<ol>
<li>人眼对亮度响应有<strong>非线性特性，对灰度误差不敏感</strong></li>
<li>人眼对<strong>亮度</strong>信号的空间分辨率大于对色度信号的空间分辨率</li>
<li>人眼容易感觉到<strong>边缘位置</strong>的变化，而对于边缘部分的灰度误差不敏感</li>
<li>时间域的<strong>掩蔽效应</strong>，当视频图像序列中相邻画面的变化剧烈（如场景切换）时，人眼的分辨率会突然剧烈的下降</li>
<li><strong>视觉惰性</strong>，人眼的亮度感觉总是滞后于实际亮度，<strong>视觉暂留</strong></li>
<li><strong>闪烁感觉</strong>，周期性光脉冲频率高到一定程度后人眼无法区分</li>
</ol>
<h3 id="颜色模型">颜色模型</h3><table>
<thead>
<tr>
<th></th>
<th>RGB</th>
<th>HSI</th>
<th>YUV</th>
</tr>
</thead>
<tbody>
<tr>
<td>主要用于</td>
<td>计算机显示器</td>
<td>描述人眼的视觉特性</td>
<td>电视信号，彩色兼容黑白</td>
</tr>
<tr>
<td>说明</td>
<td>分别表示红绿蓝三色的分解采样量</td>
<td>色调H，饱和度S，密度I（对应亮度和灰度）</td>
<td>亮度Y，色度U、V</td>
</tr>
</tbody>
</table>
<p><strong>真彩色</strong>：每个像素值都用三基色分量描述</p>
<p><strong>伪彩色</strong>：每个像素颜色采用颜色查找表表现</p>
<p><strong>直接色</strong>：每个像素点的RGB值分别用查找表表现</p>
<h3 id="图像的数字化">图像的数字化</h3><p>视频图象数字化两种方法：</p>
<ol>
<li>复合编码：先数字化再分离<br>先用高速模/数转换器对模拟视频（彩色全电视信号）进行数字化，再在数字域中分离</li>
<li>分量编码：先分离再数字化<br>从模拟视频（彩色电视信号）中分离出彩色分量的亮度和色度，得到YUV或YIQ分量，再用3个模/数转换器对3个分量分别数字化</li>
</ol>
<p>采样方式：隔行采样</p>
<h3 id="图像量化">图像量化</h3><ol>
<li>有记忆量化和无记忆量化：取样点是否独立</li>
<li>均匀量化和非均匀量化：量化步长是否一致</li>
<li>标量量化和矢量量化：<br>标量量化：一维量化，所有取样使用同一个量化器进行量化，每个取样的量化都和其他所有取样无关(无记忆量化)，常用均方误差量化器<br>矢量量化：多维量化，先将K个取样值序列形成K维空间中的一个矢量,然后将此矢量进行量化</li>
</ol>
<p>非均匀量化：</p>
<ol>
<li>基于人的视觉特性特点，对于亮度值急剧变化的部分，粗量化；对亮度值变化比较平缓的部分，细量化。</li>
<li>计算所有可能的亮度值出现的概率分布，对于出现概率大的那些亮度值，细量化；对于出现概率小的那些亮度值，粗量化</li>
</ol>
<p>非均匀采样：在细节多区域采样密，在平滑区域采样少</p>
<p>空间分辨率：图像的大小，空间分辨率=最大行数*每行的最大像素数。</p>
<p>灰度分辨率：一个像素值单位幅度上包含的灰度级，用一个字节存储一个像素值，则灰度级数为256</p>
<h3 id="图像格式">图像格式</h3><table>
<thead>
<tr>
<th></th>
<th>矢量图形</th>
<th>位图图像</th>
</tr>
</thead>
<tbody>
<tr>
<td>定义</td>
<td>图形，指用一组绘图指令描述和记录的各种图形，包括直线、弧线、圆、矩形的大小形状等</td>
<td>图像，由一组计算机内存位组成，这些位定义了图像中每个像素点的亮度和颜色</td>
</tr>
<tr>
<td>文件内容</td>
<td>图形指令</td>
<td>图像点阵数据</td>
</tr>
<tr>
<td>生成</td>
<td>相应软件生成</td>
<td>用绘图软件生成；用彩色扫描仪扫描二维图片；用摄像机以及帧捕获设备获得数字化画面</td>
</tr>
<tr>
<td>所需磁盘空间</td>
<td>小</td>
<td>大</td>
</tr>
<tr>
<td>常用格式</td>
<td>WHF、DRW、CDR、DXF、EPS、FLI、FLC、CGM等</td>
<td>BMP、PCX、GIF、TIFF</td>
</tr>
</tbody>
</table>
<h2 id="第三章_图像变换">第三章 图像变换</h2><h3 id="傅里叶变换_FT">傅里叶变换 FT</h3><h3 id="离散傅里叶变换_DFT">离散傅里叶变换 DFT</h3><h3 id="快速傅里叶变换_FFT_(掌握)">快速傅里叶变换 FFT (<strong>掌握</strong>)</h3><h3 id="离散余弦变换_DCT">离散余弦变换 DCT</h3><h3 id="K-L变换">K-L变换</h3><p>均方误差（MSE）意义下的最佳变换。</p>
<h3 id="连续小波变换_CWT">连续小波变换 CWT</h3><p>小波变换：把一个信号分解为将基本小波经过缩放和平移之后的一系列小波</p>
<h3 id="小波变换">小波变换</h3><h2 id="第六章_视频图像分割">第六章 视频图像分割</h2><h3 id="视频图像分割的相关概念">视频图像分割的相关概念</h3><p>从语义信息分析，视频由大量<strong>场景</strong>组成的，每个场景由一个或多个<strong>镜头</strong>组成，镜头由一系列的<strong>帧</strong>组成的。</p>
<p>视频对象分割：把视频序列中（一个镜头）人们感兴趣的或具有某种重要特性的一个或多个<strong>视频对象</strong>从视频场景中提取出来。</p>
<p>同一视频对象具有<strong>相似</strong>的属性，如<strong>亮度、色彩、纹理及运动特征等</strong>。</p>
<p>一个<strong>视频对象</strong>是指视频图像序列中的同一个物理对象。位于一个图像中的视频对象称为一个<strong>视频对象区</strong>。</p>
<p>为了表示用户感兴趣的区域 ，MPEG-4标准提出了视频对象的概念，其<strong>编码是基于对象</strong>的，由此，对比特率控制可以基于对象。为了实现高效压缩，每个视频对象用三类信息来描述：<strong>运动信息、形状信息、纹理信息</strong>，再根据这些信息完成视频的编码和解码。</p>
<h3 id="视频分割基本理论">视频分割基本理论</h3><p>按照是否需要人工参与分：自动方式、半自动方式</p>
<p>按照视频分割过程中利用的信息分：</p>
<ol>
<li><strong>时域分割</strong>算法用来检测和分割物体的<strong>运动边缘</strong>；</li>
<li><strong>空间域分割</strong>算法利用特定的判决原则将图像<strong>分割成区域集合</strong>；</li>
<li><strong>时空联合分割</strong>算法结合了时域分割和空间域分割的优点。</li>
</ol>
<p>按照是否提供压缩形式分：压缩域分割、非压缩域分割</p>
<p>按照用途分：用于视频压缩编码、用于内容交互多媒体应用</p>
<h3 id="视频分割技术">视频分割技术</h3><h4 id="空间域分割">空间域分割</h4><blockquote>
<p>视频帧内的分割，即图像分割，将图像分割为有意义的区域集合，这些区域之间通常具有明显的边界。</p>
</blockquote>
<p>基于空间域的分割技术主要有：</p>
<ul>
<li>基于灰度的空域分割；</li>
<li>基于区域的空域分割；</li>
<li>基于边缘的空域分割；</li>
<li>基于纹理的空域分割等</li>
<li>分水岭算法：基于数学形态学的图像分割算法</li>
</ul>
<h5 id="区域生长（Region_Growing）（掌握）">区域生长（Region Growing）（掌握）</h5><blockquote>
<p>将具有相似性质的像素集合起来构成区域</p>
</blockquote>
<p>区域生长法的关键：</p>
<ol>
<li>选择或确定一组能正确代表所需区域的<strong>种子像素</strong>；</li>
<li>确定在<strong>生长</strong>过程中能将<strong>相邻像素</strong>包括进来的准则；</li>
<li>制定让生长过程停止的<strong>条件或规则</strong></li>
</ol>
<p>常见区域生长算法种类：</p>
<ol>
<li>以单像素为单位的区域生长法</li>
<li>以区域为单位的区域生长法（子图合并）</li>
</ol>
<h4 id="时间域分割技术">时间域分割技术</h4><h5 id="帧间差分的变化检测">帧间差分的变化检测</h5><blockquote>
<p>时域中检测运动对象的基本方法，采用帧间差分法可消除视频数据的帧间冗余信息，提取变化检测掩模（Change Detection Mask）。</p>
</blockquote>
<p>基本原理：通过检测前、后帧之间的帧差，从而把当前视频分割成相对于参考帧“变化的”和“未变化的”区域。</p>
<p>前后帧的偏移帧差：<br>$$d_{k,k+1}(x,y)=|f_{k+1}(x,y)-f_k(x,y)|$$</p>
<p>局限性：</p>
<ol>
<li>阈值选取至关重要的，无通用阈值设定方法；</li>
<li>对某些视频序列无能为力的，如纹理不够充分、某些帧对象存在运动而另外一些帧没有运动；</li>
<li>对于对象间的相互遮挡区、显露区的判断是直接用亮度信号估算参数；</li>
<li>差分检测受噪声影响不敏感，还受运动估算精度的影响</li>
</ol>
<h4 id="块匹配的运动估计">块匹配的运动估计</h4><blockquote>
<p>基于对时间图像序列变化的检测。</p>
</blockquote>
<p>运动物体特征：检测图像变化，可以在不同的层次上进行，如像素、边缘或区域</p>
<p>二维运动估计：估计运动前后相邻时刻两幅图像上对应点的坐标,以获取二维运动矢量。假设物体点的亮度在此运动和时间间隔保持不变。</p>
<p>几种匹配准则：</p>
<ol>
<li>最大互相关函数</li>
<li>最小均方误差函数（MSE）</li>
<li>最小平均绝对差值函数（MAD）</li>
<li>最大匹配像素统计（MPC）</li>
</ol>
<h4 id="光流法">光流法</h4><p>运动场：给图像中<strong>每一像素点赋予一个速度向量</strong>，就形成了<strong>图像运动场</strong>(motion field)，对应于物体的三维运动</p>
<p>光流定义：视频序列<strong>空间坐标关于时间的变化率</strong>，对应于像素的<strong>瞬时速度矢量</strong>，也是运动物体在一帧图像到下一帧图像相对应像素点间的位移量</p>
<p>光流：图像亮度模式的<strong>表观(视在)运动</strong>，“可察觉”的二维运动，依赖于<strong>光照条件</strong>和<strong>物体表面的纹理</strong>。假设光流就是真实的二维运动，估算二维运动矢量。</p>
<h2 id="第九章_视频跟踪">第九章 视频跟踪</h2><h2 id="第十章_视频压缩编码">第十章 视频压缩编码</h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="第一章_绪论">第一章 绪论</h2><h3 id="视频图像处理的概念">视频图像处理的概念</h3><p>视频是一组图像在<strong>时间轴</strong>上的<strong>有序排列</strong>，是二维图像在一维时间轴上构成的<strong>图像序列</strong>，又称<strong>动态图像、活动图像、运动图像</strong>。不止包含了静止图像的内容，还包含了目标的<strong>运动信息</strong>和<strong>客观世界随时间变化的信息</strong>。</p>
<p>序列&gt;帧&gt;像素</p>
<h3 id="视频图像处理系统的组成">视频图像处理系统的组成</h3><ol>
<li>图像<strong>采集</strong></li>
<li>图像<strong>显示</strong></li>
<li>图像<strong>存储</strong></li>
<li>图像<strong>通信</strong></li>
<li>图像<strong>处理和分析</strong></li>
</ol>]]>
    
    </summary>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="我的大学" scheme="http://jcf94.github.io/categories/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[现代交换原理 复习笔记 部分]]></title>
    <link href="http://jcf94.github.io/2015/05/28/2015/2015-05-28-xiandaijiaohuan/"/>
    <id>http://jcf94.github.io/2015/05/28/2015/2015-05-28-xiandaijiaohuan/</id>
    <published>2015-05-28T15:56:10.000Z</published>
    <updated>2015-06-28T04:39:22.880Z</updated>
    <content type="html"><![CDATA[<p>感觉我也是醉醉的，人比较懒，愿意打字都不愿意动笔了……</p>
<hr>
<h2 id="第1章_绪论">第1章 绪论</h2><h3 id="交换">交换</h3><p>所谓交换，就是在通信网上，负责在通信的源和目的终端之间建立通信信道，传送通信信息的机制，也就是根据目的地，在源和目的终端之间传送通信信息。网内的任一个用户可以按着自己的要求与网内的其他用户进行信息交换</p>
<a id="more"></a>
<ul>
<li><p>交换式通信网通信过程</p>
<blockquote>
<ol>
<li>呼叫建立阶段</li>
<li>消息传输阶段</li>
<li>释放阶段</li>
</ol>
</blockquote>
</li>
<li><p>交换方式</p>
<blockquote>
<p>电路交换 CS （Circuit Switch）<br>报文交换 MS （Message Switch）<br>分组交换 PS （Package Switch）</p>
<blockquote>
<p>数据报 Datagram<br>虚电路 VC (Virtual Circuit)</p>
<blockquote>
<p>交换虚电路 SVC （Switching Virtual Circuit）<br>永久虚电路 PVC （Permanent Virtual Circuit）</p>
</blockquote>
</blockquote>
</blockquote>
</li>
</ul>
<table>
<thead>
<tr>
<th>分类</th>
<th>电路交换</th>
<th>报文交换</th>
<th>分组交换</th>
</tr>
</thead>
<tbody>
<tr>
<td>方式</td>
<td>通信之前先建立通路，通信时通路独占，通信结束，通路释放</td>
<td>无需建立通路（无连接）</td>
<td>将报文分成若干个报文组（packet)，每个报文组要加上地址、编号、校验码，然后以报文组为存储转发单位逐节点转发，到达目的地再按编号组装成原报文</td>
</tr>
<tr>
<td>接续时间</td>
<td>较长</td>
<td>较短</td>
<td>较短</td>
</tr>
<tr>
<td>传输时延</td>
<td>短</td>
<td>长，偏差很大</td>
<td>较短</td>
</tr>
<tr>
<td>数据可靠性</td>
<td>一般</td>
<td>较高</td>
<td>高</td>
</tr>
<tr>
<td>对业务过载的反应</td>
<td>拒绝接收呼叫</td>
<td>信息存储在交换机中，传输时延加大</td>
<td>减小用户输入信息流量（流量控制），时延加大</td>
</tr>
<tr>
<td>异种终端之间的相互通信</td>
<td>不可</td>
<td>可</td>
<td>可</td>
</tr>
<tr>
<td>电路利用率</td>
<td>低</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>交换机成本</td>
<td>较低</td>
<td>较高</td>
<td>较高</td>
</tr>
<tr>
<td>实时会话业务</td>
<td>适用</td>
<td>不适用</td>
<td>轻负载下适用</td>
</tr>
</tbody>
</table>
<ul>
<li>分组交换<blockquote>
<p>基于<strong>统计时分复用</strong>，实时性较好，线路利用率高。</p>
<ol>
<li>数据报方式:以分组为基本单位逐节点转发，且不同节点可沿不同的路径传输，类似报文交换。</li>
<li>虚电路:首先网络在通信两端建立逻辑连接，然后用户数据以分组为单位沿该路径顺序传送到达终点（逐节点转发）。类似于电路交换，但通路不是一直占用。</li>
</ol>
</blockquote>
</li>
</ul>
<h3 id="程控交换机">程控交换机</h3><ul>
<li><p>交换机网络接续方式</p>
<blockquote>
<ol>
<li>空分</li>
<li>时分</li>
</ol>
</blockquote>
</li>
<li><p>控制方式</p>
<blockquote>
<ol>
<li>集中控制</li>
<li>分级控制</li>
<li>全分散控制</li>
</ol>
</blockquote>
</li>
<li><p>五级长途电话网</p>
<blockquote>
<ol>
<li>省间中心 C1</li>
<li>省中心 C2</li>
<li>地区中心 C3</li>
<li>县中心 C4</li>
<li>本地端局 C5</li>
</ol>
</blockquote>
</li>
<li><p>三级国际电话网</p>
<blockquote>
<ol>
<li>国际中心局 CT1：各CT1之间均有直达链路</li>
<li>CT2</li>
<li>接口局 CT3</li>
</ol>
</blockquote>
</li>
<li><p>路由分类</p>
<blockquote>
<ol>
<li>基干路由：一部分是C1级交换中心之间的低呼损电路群；另一部分是同一交换区内相邻级之间的低呼损电路群。基干路由上的话务量不允许溢出</li>
<li>直达路由：先选择高效直达路由。当高效直达路由忙时，选择迂回路由。选择的顺序是“由远而近”，即先在被叫端“自下而上”选择。然后在主叫端“自上而下”选择。最后选择最终路由。</li>
</ol>
</blockquote>
</li>
<li><p>本地电话网</p>
<blockquote>
<ol>
<li>去话汇接</li>
<li>来话汇接</li>
<li>来去话汇接</li>
<li>集中汇接</li>
<li>主辅汇接</li>
</ol>
</blockquote>
</li>
</ul>
<h2 id="第2章_交换机理论基础">第2章 交换机理论基础</h2><ul>
<li>话务量<br>考察时间内各次服务时间总和<br>Y表示话务量，T表示时间总和，<br>$$A= {Y\over T}=n{S\over T}=λS$$<br>$$λ={n\over T}$$</li>
</ul>
<h2 id="第3章_信令系统">第3章 信令系统</h2><h3 id="概述">概述</h3><ul>
<li><p>信令<br>信令是各交换局在完成呼叫接续中使用的一种通信语言，它是控制交换机产生动作的命令。</p>
</li>
<li><p>信令的分类</p>
<blockquote>
<ol>
<li>按工作区域分<br>1) 用户线信令<br>2) 局间信令<br>3) 交换机内部信令</li>
<li>按传送方向分<br>1) 前向信令<br>2) 后向信令</li>
<li>按功能分<br>1) 监视信令（线路信令）：用来监视或改变线路上的呼叫状态或条件<br>2) 选择信令（记发器信令）：由主叫用户发出的数字信号（电话号码），即被叫用户的地址信息<br>3) 操作信令（管理信令）</li>
<li>按传播途径分<br>1) <strong>随路信令（带内信令）</strong>：通过话路传送的信令<br>2) <strong>公共信道信令（带外信令）</strong>：信令传送和话路分开的信令</li>
</ol>
</blockquote>
</li>
<li><p>信令的传送方式</p>
<blockquote>
<ol>
<li>端到端：对电路质量要求较高</li>
<li>逐段转发：对线路要求较低</li>
<li>混合方式：中国1号记发器信令在劣质电路中使用逐段转发方式，在优质电路中使用端到端方式，No.7信令通常使用逐段转发方式但也可提供端到端信令。</li>
</ol>
</blockquote>
</li>
<li><p>控制方式</p>
<blockquote>
<ol>
<li>非互控（脉冲方式）：设备简单，但可靠性差</li>
<li>半互控方式：发端每发送一组信令之后必须受到确认后才能再发</li>
<li>全互控方式：连续发送，不中断，直到受到证实之后才停止。抗干扰能力强，可靠性好，但发码速度慢<br>中国1号记发器信令使用<strong>全互控方式</strong>，保证可靠性，但影响了速度；No.7信令使用非互控方式，速度快，同时采用一些措施来保证可靠性。</li>
</ol>
</blockquote>
</li>
</ul>
<h3 id="中国No-1信令">中国No.1信令</h3><p>中国1号信令是一种<strong>随路信令</strong>。<br>方式分为线路信令和记发器信令。<br>数据类型分为模拟型线路信令（直流型线路信令、带内单频信令）和数字型线路信令。 </p>
<ul>
<li><p>带内单频线路信令<br><strong>单频2600Hz</strong>，基本脉冲为<strong>长脉冲600ms</strong>，<strong>短脉冲150ms</strong>，两信令<strong>最小标称间隔300ms</strong>。</p>
</li>
<li><p>局间数字型线路信令<br>一个复帧由<strong>16</strong>个子帧组成，记为<strong>F0~F15</strong><br>每一个子帧有<strong>32</strong>个时隙，<strong>256bit</strong>，<strong>T=125us</strong>，记为<strong>TS0~TS31</strong><br>每一个时隙包含<strong>8bit</strong>二进制码字<br><strong>TS0</strong>用于收发端同步，称为帧同步时隙，也称为帧定位码组<br><strong>TS1~TS15以及TS17~TS31</strong>是话音时隙<br><strong>TS16</strong>用来传送复帧同步及数字型线路信令，称为信令时隙。一路话音信号的线路信令只需要<strong>4bit</strong>，即一个<strong>TS16</strong>时隙可以传送两路。</p>
</li>
<li><p>No.1记发器信令 RS（Resister Signal）<br><strong>多频互控方式信令，MFC（Multiple Frequency Control）</strong>，传送方式为<strong>端到端</strong>，劣质电路上也可采用<strong>逐段转发</strong>方式，控制方式为<strong>全互控</strong>。</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>组别</th>
<th>名称</th>
<th>基本含义</th>
<th>容量</th>
</tr>
</thead>
<tbody>
<tr>
<td>I</td>
<td>KA</td>
<td>主叫用户类别</td>
<td>15</td>
</tr>
<tr>
<td>I</td>
<td>KC</td>
<td>长途接续类别</td>
<td>5</td>
</tr>
<tr>
<td>I</td>
<td>KE</td>
<td>市内接续类别</td>
<td>5</td>
</tr>
<tr>
<td>I</td>
<td>数字信令</td>
<td>0~9</td>
<td>10</td>
</tr>
<tr>
<td>II</td>
<td>KD</td>
<td>发端呼叫类别</td>
<td>6</td>
</tr>
<tr>
<td>A</td>
<td>A</td>
<td>收号状态和接续状态</td>
<td>6</td>
</tr>
<tr>
<td>B</td>
<td>KB</td>
<td>被叫用户状态</td>
<td>6</td>
</tr>
</tbody>
</table>
<ul>
<li>前向I组和后向A组互控，前向II组和后向B组互控</li>
</ul>
<h3 id="No-7_信令">No.7 信令</h3><p>局间的NO.7信令链路是由两端的信令终端设备和它们之间的数据链路组成。<br>最适合采用64kbit/s的数字信道，也适合模拟信道和较低速率下的工作，适合由数字程控交换机和数字传输设备所组成的综合数字网。<br>高可靠性。<br><strong>公共信道信令</strong>。<br>用于支持<strong>蜂窝移动通信</strong>、<strong>PCN</strong>、<strong>ATM</strong>等，用于支持国际网和国内网。</p>
<hr>
<ul>
<li>No.7信令网的基本组成部件有<strong>信令点SP</strong>、<strong>信令转接点STP</strong>和<strong>信令链路SL</strong></li>
</ul>
<hr>
<ul>
<li>SP是处理控制消息的节点，产生消息的信令点为该消息的起源点，消息到达的信令点为该消息的目的地节点。<br>信令点编码有两种：<br><strong>14位（国际）</strong>：3位大区、8位区域网、3位信号点<br><strong>24位（国内）</strong>：8位主信令区、8位分信令区、8位信令点<br>源信令点编码<strong>OPC(Origin Point Code)</strong>，目的信令点编码记为<strong>DPC(Destination Point Code)</strong>。</li>
</ul>
<hr>
<ul>
<li><strong>信令转接点STP</strong>分为综合型和独立型两种。独立型STP是只具有<strong>消息传递部分MTP</strong>和<strong>信令连接控制部分SCCP</strong>功能的信令转接点设备；综合型STP是除了具有消息传递部分MTP和信令连接控制部分SCCP的功能外，还具有<strong>用户部分</strong>功能(例如TUP/ISUP、TCAP、INAP)的信令转接点设备。</li>
</ul>
<hr>
<ul>
<li><strong>信令链路SL</strong>连接各个信令点或信令转接点<br>在两个相邻信令点之间传送信令消息的链路称为信令链路。<br>相同属性的信令链路组成一组链路集。<br>到同一局向的所有链路可属一个链路集，也可属多个链路集；但两个相邻的信令点之间的信令链路只能属于一个链路集。<br>对于相邻两个信令点之间的所有链路，都有一个统一编号，称为<strong>信令链路编码SLC(Signalling Link Code)</strong>。</li>
</ul>
<hr>
<ul>
<li>信令链路的连接方式<br>根据通话电路和信令链路的关系，可采用三种工作方式：</li>
</ul>
<ol>
<li><strong>直连工作方式</strong>：信令链路直接连接两个SP，信令消息直达。</li>
<li><strong>准直联工作方式</strong>：信令消息可能会通过STP转接，路径是<strong>预先设定好</strong>的。</li>
<li><strong>完全分离工作方式</strong>：可能会有多条转接路径，而路由是<strong>动态分配</strong>的。</li>
</ol>
<hr>
<ul>
<li>协议集<br>No.7信令的基本功能结构由<strong>消息传递部分(MTP)（底层）</strong>和<strong>用户部分(UP)（高层）</strong>组成。</li>
</ul>
<hr>
<ul>
<li>消息传递部分 MTP<br>主要是在信令网中提供<strong>可靠的</strong>信令消息传递，并在系统和信令网故障情况下，具有为保证可靠的信息传送而作出响应并采取必要措施的能力。<br>它由三个功能级组成：</li>
</ul>
<ol>
<li><strong>信令数据链路功能(MTP1)</strong>：相当于<strong>物理层</strong>，定义了数字信令链路的物理、电气及功能特性</li>
<li><strong>信令链路控制功能(MTP2)</strong>：相当于<strong>数据链路层</strong>，提供<strong>流量控制</strong>、<strong>消息顺序确认</strong>及<strong>检错重传</strong>功能</li>
<li><strong>信令网络功能(MTP3)</strong>：相当于<strong>网络层</strong>，提供<strong>路由功能</strong></li>
</ol>
<hr>
<ul>
<li>用户部分 UP<br>定义了通信网的各类用户(业务)所需要的信令及其编码，规定用户部分(UP)与消息传递部分（MTP）之间的信号传输关系。控制各种基本呼叫的建立和释放。</li>
</ul>
<ol>
<li><strong>ISDN用户部分ISUP、电话用户部分TUP、数据用户部分DUP</strong>：一般都用ISUP替代全部。</li>
<li><strong>信令连接控制部分SCCP</strong>：本身相当于<strong>传输层</strong>，但是与<strong>MTP-3共同组成网络层</strong>，<strong>与MTP共同组成网络业务部分NSP</strong>。加强消息传递功能。</li>
<li><strong>事务处理能力应用部分TCAP</strong>：提供节点之间的传递信息的手段以及对相互独立的各种应用提供通用的业务</li>
<li><strong>TC用户</strong>：指各种应用，目前有智能网应用部分(INAP)、移动应用部分(MAP)、运行维护管理应用部分(OMAP)</li>
</ol>
<hr>
<ul>
<li>CCS7信令单元格式<br>信令消息是以<strong>信号单元</strong>的方式传送，而<br>且采用<strong>不等长信号单元</strong>。以<strong>8bit</strong>为长度单位<br>它有三种信号单元：</li>
</ul>
<ol>
<li><strong>消息信令单元MSU</strong>：用来传送<strong>第三级以上</strong>的各层发送的信息。</li>
<li><strong>链路状态信令单元LSSU</strong>：用来传送信令链路状态</li>
<li><strong>填充信令单元FISU</strong>：是在信令链路上没有消息要传送时，向对端发送的空信号，用来维持信令链路的通信状态，同时可证实对端发来的信令单元。</li>
</ol>
<ul>
<li><p><strong>信令信息字段 SIF(Signalling Information Field)</strong>是MSU特有的，长度为<strong>2~272个8位组</strong>，包含路由标记和信令数据，就是实际发送的消息。</p>
</li>
<li><p>LSSU和FISU都由信令链路功能级生成及处理。</p>
</li>
</ul>
<hr>
<ul>
<li>电话用户部分TUP<br>电话用户消息的内容是在消息信令单元MSU中的<strong>信令信息字段SIF</strong>中传送的。由<strong>标记、标题码和信令信息</strong>三部分组成。</li>
</ul>
<ol>
<li>初始地址消息<strong>IAM（无附加）</strong>或<strong>IAI（附加信息）</strong>：含有下一个交换局为建立呼叫、确定路由所需的有关信息。初始地址消息蕴含了占用电路的功能</li>
<li>后序地址消息<strong>SAM（一次传多位）</strong>和<strong>SAO（一次传一位）</strong>：传送剩余的被叫号码。</li>
<li>地址全消息<strong>ACM</strong></li>
<li>地址不全消息<strong>ADI</strong></li>
<li>被叫用户状态：用户市忙<strong>SLB</strong>、用户长忙<strong>STB</strong>、线路不工作<strong>LOS</strong>、空号<strong>UNN</strong>和发送专用信息音<strong>SST</strong></li>
<li>应答信号<strong>ANC（计费）</strong>、<strong>ANN（免费）</strong></li>
<li>后向拆线信号<strong>CBK</strong>、前向拆线信号<strong>CLF</strong></li>
</ol>
<p>首先发送：</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>空</th>
<th>CIC</th>
<th>OPC</th>
<th>DPC</th>
</tr>
</thead>
<tbody>
<tr>
<td>长度</td>
<td>4</td>
<td>12</td>
<td>24</td>
<td>24</td>
</tr>
</tbody>
</table>
<ul>
<li>话音电路标识CIC</li>
</ul>
<hr>
<ul>
<li>ISDN用户部分ISUP<br>ISUP可以全面支持ISDN用户的基本承载业务和补充业务，而且可以<strong>完全实现TUP（电话用户部分）和DUP（数据用户部分）</strong>的功能</li>
</ul>
<p>首先发送：</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>空</th>
<th>SLS</th>
<th>OPC</th>
<th>DPC</th>
</tr>
</thead>
<tbody>
<tr>
<td>长度</td>
<td>4</td>
<td>12</td>
<td>24</td>
<td>24</td>
</tr>
</tbody>
</table>
<ul>
<li>信令链路选择SLS</li>
</ul>
<hr>
<ol>
<li>初始地址消息<strong>IAM（无附加）</strong>或<strong>IAI（附加信息）</strong>：含有下一个交换局为建立呼叫、确定路由所需的有关信息。初始地址消息蕴含了占用电路的功能</li>
<li>后序地址消息<strong>SAM（一次传多位）</strong>和<strong>SAO（一次传一位）</strong>：传送剩余的被叫号码。</li>
<li>地址全消息<strong>ACM</strong></li>
<li>地址不全消息<strong>ADI</strong></li>
<li>被叫用户状态：用户市忙<strong>SLB</strong>、用户长忙<strong>STB</strong>、线路不工作<strong>LOS</strong>、空号<strong>UNN</strong>和发送专用信息音<strong>SST</strong></li>
<li>应答信号<strong>ANC（计费）</strong>、<strong>ANN（免费）</strong></li>
<li>后向拆线信号<strong>CBK</strong>、前向拆线信号<strong>CLF</strong></li>
</ol>
<table>
<thead>
<tr>
<th>—-</th>
<th>ISUP</th>
<th>TUP</th>
</tr>
</thead>
<tbody>
<tr>
<td>初始地址消息</td>
<td>IAM</td>
<td>IAM/IAI</td>
</tr>
<tr>
<td>后序地址消息（重叠发送时）</td>
<td></td>
<td>SAM/SAO</td>
</tr>
<tr>
<td>地址全消息</td>
<td>ACM</td>
<td>ACM</td>
</tr>
<tr>
<td>地址不全消息</td>
<td>ADI</td>
<td>ADI</td>
</tr>
<tr>
<td>应答信号</td>
<td>ANM</td>
<td>ANC/ANN</td>
</tr>
<tr>
<td>故障信号</td>
<td>包含在REL中</td>
<td>SLB/STB/LOS/UNN</td>
</tr>
<tr>
<td>挂机信号</td>
<td></td>
<td>CBK（后向）</td>
</tr>
<tr>
<td>拆线信号</td>
<td>REL（链路清除）</td>
<td>CLF（前向）</td>
</tr>
<tr>
<td>拆线证实</td>
<td>RLC</td>
<td>RLG</td>
</tr>
</tbody>
</table>
<h2 id="第4章_数字程控交换原理与技术">第4章 数字程控交换原理与技术</h2><ul>
<li>交换机的基本组成</li>
</ul>
<ol>
<li>话路部分<br>用户电路<br>中继器<br>交换网络<br>信令设备</li>
<li>控制系统</li>
</ol>
<hr>
<ul>
<li>控制方式</li>
</ul>
<ol>
<li>集中控制</li>
<li>分散控制：资源分散，控制功能集中<br>1) 分级控制：上下级结构、每个层次的处理机处理一部分内容<br>2) 全分散控制：平行结构、将系统划分为几个模块，每个模块相互通信，相互配合<br>3) 基于容量分担的全分散控制：综合上两个、在平行结构中分层<br>容量分担：资源分散、功能集中<br>功能分担：资源集中、功能分散<br>话务分担：<br>容量分担：</li>
</ol>
<table>
<thead>
<tr>
<th>—-</th>
<th>集中控制</th>
<th>分散控制</th>
</tr>
</thead>
<tbody>
<tr>
<td>优点</td>
<td>处理机能够及时掌握、了解整个系统的运行状态，使用和管理系统的全部资源，不会出现资源争夺的冲突</td>
<td>任何一个模块故障，整体仍然能够运行，扩容方便，灵活</td>
</tr>
<tr>
<td>缺点</td>
<td>灵活性差，经济性差（处理级复杂、昂贵），软件庞大，维护困难</td>
<td>各部分独立，可能会出现资源冲突，公共资源难以共享，单独模块的容量过小</td>
</tr>
<tr>
<td>适合</td>
<td>小容量交换机</td>
</tr>
</tbody>
</table>
<hr>
<ul>
<li>处理机的冗余配置</li>
</ul>
<ol>
<li>重要的进行1+1配置</li>
<li>不重要的进行n+1配置</li>
</ol>
<ul>
<li>1+1的三种方式</li>
</ul>
<table>
<thead>
<tr>
<th>—-</th>
<th>同步双工</th>
<th>双机互助（话务分担）</th>
<th>主/备用</th>
</tr>
</thead>
<tbody>
<tr>
<td>特点</td>
<td>两机同步工作，比较执行结果</td>
<td>各自独立工作，一旦一台出错，另一台承担全部工作</td>
<td>一台联机一台备用，一旦出故障则主/备用切换</td>
</tr>
<tr>
<td>优点</td>
<td>对硬件故障反应快</td>
<td>过负荷能力强，对软件故障有容错能力，可一台服务一台调试升级</td>
<td>实现简单，热备用时备用机保存主机的相关数据，可以随时接替工作</td>
</tr>
<tr>
<td>缺点</td>
<td>对软件无容错能力，需要不停复核，降低了效率</td>
<td>为避免双机争抢资源，双机通信频繁，软件复杂，对硬件故障反应速度不如同步双工</td>
<td>冷备用切换时会产生延误或者连接中断等</td>
</tr>
</tbody>
</table>
<hr>
<p>4.3.1</p>
<hr>
<ul>
<li><p>程控交换机的硬件结构<br>程控交换机的硬件包括<strong>话路系统</strong>、<strong>中央处理系统（控制系统）</strong>，<strong>维护与操作系统</strong>三部分</p>
</li>
<li><p>用户电路的七大功能，被称为：BORSCHT</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>B</th>
<th>Battery Feed</th>
<th>馈电</th>
</tr>
</thead>
<tbody>
<tr>
<td>O</td>
<td>Overvoltage</td>
<td>过压保护</td>
</tr>
<tr>
<td>R</td>
<td>Ring</td>
<td>振铃</td>
</tr>
<tr>
<td>S</td>
<td>Supervision</td>
<td>监视</td>
</tr>
<tr>
<td>C</td>
<td>CODEC&amp;filter</td>
<td>编解码和滤波</td>
</tr>
<tr>
<td>H</td>
<td>Hybrid</td>
<td>混合</td>
</tr>
<tr>
<td>T</td>
<td>Test</td>
<td>测试</td>
</tr>
</tbody>
</table>
<hr>
<ul>
<li><p>交换网络结构<br>交换网络是由若干个交换单元按照一定的<strong>拓扑结构</strong>和<strong>控制方式</strong>构成的网络</p>
</li>
<li><p>交换网络的<strong>三个基本要素</strong><br>交换单元、不同交换单元间的拓扑连接和控制方式</p>
</li>
<li><p>多级交换网络的拓扑结构可用三个参数来说明：</p>
</li>
</ul>
<ol>
<li>每个交换单元的容量。</li>
<li>交换单元的级数。</li>
<li>交换单元间的连接通路(链路)</li>
</ol>
<ul>
<li><p>内部阻塞<br>从交换网络不同输入端来的信息在交换网络中交换时发生的对同一公共资源发生争抢的情况。在竞争资源时失败的信息会被阻塞，直到公共资源被释放。</p>
</li>
<li><p>内部阻塞概率</p>
</li>
</ul>
<p>$$a={A \over n*m}$$</p>
<ul>
<li>无阻塞网络 <strong>Clos网络</strong> 输入m*n 输出 j*k</li>
</ul>
<table>
<thead>
<tr>
<th>—-</th>
<th>第一级</th>
<th>第二级</th>
<th>第三级</th>
</tr>
</thead>
<tbody>
<tr>
<td>个数</td>
<td>m</td>
<td>n+j-1</td>
<td>k</td>
</tr>
<tr>
<td>入线数</td>
<td>n</td>
<td>m</td>
<td>n+j-1</td>
</tr>
<tr>
<td>出线数</td>
<td>n+j-1</td>
<td>k</td>
<td>j</td>
</tr>
</tbody>
</table>
<ul>
<li>中间一级可以继续拆分</li>
</ul>
<hr>
<ul>
<li><p>空分交换机/空间接线器<br>用来实现多个输入复用线与多个输出复用线之间的空间交换，而不改变其时隙位置</p>
</li>
<li><p>基本结构</p>
</li>
</ul>
<ol>
<li>交叉点矩阵：开关阵列</li>
<li>控制存储器</li>
</ol>
<ul>
<li>时分交换机<br>共享存储器型的交换单元</li>
</ul>
<ol>
<li>话音存储器SM：用于存储话音信号</li>
<li>控制存储器CM：用于存储控制命令字</li>
</ol>
<ul>
<li>TST网络<br>TST网络是在电路交换系统中经常使用的一种交换网<br>络，它是三级交换网络，两侧为T接线器，中间一级为S接线<br>器，S级的出入线数决定于两侧T接线器的数量。</li>
</ul>
<ol>
<li>第1级，T接线器：负责输入母线的时隙交换。</li>
<li>S接线器：负责母线之间的空间交换。</li>
<li>第2级，T接线器：负责输出母线的时隙交换</li>
</ol>
<ul>
<li>常用的有<br>$TS^nT$、$ST^nS$、T/结合、TTT等</li>
</ul>
<hr>
<ul>
<li>交换软件中使用的语言</li>
</ul>
<ol>
<li>规范描述语言SDL：用于系统设计阶段，用来说明对程控交换机的各种功能要求和技术规范，并描述功能和状态的变化情况；</li>
<li>高级语言和汇编语言：用来编写软件程序；</li>
<li>人机对话语言MML：主要用于人机对话，在软件测试和运行维护阶段使用</li>
</ol>
<hr>
<ul>
<li>局数据</li>
</ul>
<ol>
<li>配置数据</li>
<li>路由和中继规则</li>
<li>No.7信令数据</li>
<li>计费数据</li>
<li>新业务提供情况</li>
</ol>
<ul>
<li>用户数据</li>
</ul>
<ol>
<li>用户电话号码、用户设备号码</li>
<li>用户线类别</li>
<li>话机类别</li>
<li>用户的服务等级</li>
<li>用户对新业务的使用权及已经登记的新业务</li>
<li>用户计费数据</li>
</ol>
<hr>
<ul>
<li>程控交换机中操作系统主要功能是：</li>
</ul>
<ol>
<li>任务调度</li>
<li>存储器管理</li>
<li>进程之间的通信、处理机之间通信</li>
<li>定时管理</li>
<li>系统监督和恢复</li>
<li>I／O设备管理、文件管理等</li>
</ol>
<ul>
<li><p>优先级<br>按照对实时性要求的不同，程序的优先级大致可分为<strong>中断级、时钟级和基本级</strong></p>
</li>
<li><p>比特型时间表<br>一个时间表所能调度的程序数等于该时间表的列数，时间表能够支持的不同周期数等于时间表行数n的不同因子数</p>
</li>
</ul>
<hr>
<ul>
<li>呼叫处理的过程</li>
</ul>
<ol>
<li>输入处理：负责采集话路设备的状态信息的变化和有关信息，只负责检测事件而不进行处理。本质上是软件和硬件之间的接口程序，和硬件设备直接联系，通过周期性的扫描程序实现状态信息的采集。</li>
<li>内部处理：主要任务是分析收集的信息和各类发生的事件，分配资源，并根据所发生的时间及与该事件有关进程的当前状态决定下一步的动作。由于对时间没有严格要求，一般情况下，采用队列方式来完成。</li>
<li>输出处理：依据内部分析的结果完成对话路设备的驱动。如交换网络的接续、向用户发生各种信令音等</li>
</ol>
<h2 id="第5章_分组交换原理与技术">第5章 分组交换原理与技术</h2><h2 id="第6章_ATM原理与技术">第6章 ATM原理与技术</h2>]]></content>
    <summary type="html">
    <![CDATA[<p>感觉我也是醉醉的，人比较懒，愿意打字都不愿意动笔了……</p>
<hr>
<h2 id="第1章_绪论">第1章 绪论</h2><h3 id="交换">交换</h3><p>所谓交换，就是在通信网上，负责在通信的源和目的终端之间建立通信信道，传送通信信息的机制，也就是根据目的地，在源和目的终端之间传送通信信息。网内的任一个用户可以按着自己的要求与网内的其他用户进行信息交换</p>]]>
    
    </summary>
    
      <category term="复习笔记" scheme="http://jcf94.github.io/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="我的大学" scheme="http://jcf94.github.io/categories/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[通宵那些事]]></title>
    <link href="http://jcf94.github.io/2015/05/28/2015/2015-05-28-diary/"/>
    <id>http://jcf94.github.io/2015/05/28/2015/2015-05-28-diary/</id>
    <published>2015-05-28T12:14:10.000Z</published>
    <updated>2015-05-28T12:33:39.000Z</updated>
    <content type="html"><![CDATA[<p>已经快要忘了上一次通宵是在什么时候了，曾经做数学建模的时候是通过的，最后应该也是在期末的某次，一边要弄课设，一边又有考试，然后想着通宵赶紧把课设做做完，留出白天的时间来好好复习。</p>
<p>说起来还是自己平时的执行效率太低，总是没有办法全心全意地复习，拖啊拖啊拖啊的，就拖成了现在这个样子。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>已经快要忘了上一次通宵是在什么时候了，曾经做数学建模的时候是通过的，最后应该也是在期末的某次，一边要弄课设，一边又有考试，然后想着通宵赶紧把课设做做完，留出白天的时间来好好复习。</p>
<p>说起来还是自己平时的执行效率太低，总是没有办法全心全意地复习，拖啊拖啊拖啊的，就]]>
    </summary>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开始使用Github]]></title>
    <link href="http://jcf94.github.io/2015/05/26/2015/2015-05-26-start/"/>
    <id>http://jcf94.github.io/2015/05/26/2015/2015-05-26-start/</id>
    <published>2015-05-26T07:34:31.000Z</published>
    <updated>2015-05-27T04:54:28.000Z</updated>
    <content type="html"><![CDATA[<p>之前的博客都是写在博客园上的，现在转移至github。</p>
<p>第一次用Markdown这种语法，真心简洁明了，短小精悍啊~ 各种格式也是帅爆</p>
<p>算是从5月26号正式开始跑这个博客吧，27号最后换了个比较喜欢的主题，然后开始慢慢改自己的东西，估计以后一段时间用的都是这个样式了。</p>
<p>然后有空会开始把博客园的东西一篇一篇移回到这里来。</p>
<hr>
<p>最近一周各种考试+实验+写报告，满满的都是事情…</p>
<p>然而这么忙，我发现我还是控制不住自己啊啊…就开始折腾这个博客了…这种自己都觉得坑爹啊的奇怪习惯真得改改了啊啊啊（捂脸）</p>
<p>好好复习去了……</p>
<p>最后吐槽一句，这学期的考试真的好难啊啊啊啊啊啊啊~~~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前的博客都是写在博客园上的，现在转移至github。</p>
<p>第一次用Markdown这种语法，真心简洁明了，短小精悍啊~ 各种格式也是帅爆</p>
<p>算是从5月26号正式开始跑这个博客吧，27号最后换了个比较喜欢的主题，然后开始慢慢改自己的东西，估计以后一段时]]>
    </summary>
    
      <category term="随笔" scheme="http://jcf94.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日常" scheme="http://jcf94.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[test]]></title>
    <link href="http://jcf94.github.io/2015/05/26/2015/2015-05-26-test/"/>
    <id>http://jcf94.github.io/2015/05/26/2015/2015-05-26-test/</id>
    <published>2015-05-26T05:07:16.000Z</published>
    <updated>2015-06-13T05:19:32.611Z</updated>
    <content type="html"><![CDATA[<h1 id="一级标题">一级标题</h1><h2 id="二级标题">二级标题</h2><pre><code>这是一段不加格式的代码
<span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span>
<span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span>

<span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;

<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>
</span>{
    <span class="built_in">printf</span>(<span class="string">"Helloworld\n"</span>);

    <span class="keyword">return</span> <span class="number">0</span>;
}
</code></pre><h3 id="三级标题">三级标题</h3><a id="more"></a>
<h4 id="四级标题">四级标题</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一段正常的代码</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Helloworld\n"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>$$这是一串数学公式$$<br>$$e=mc^2$$</p>
<blockquote>
<p>这是一堆<br>引用</p>
<blockquote>
<p>这是一堆<br>引用</p>
<blockquote>
<p>这是一堆<br>引用</p>
<blockquote>
<p>这是一堆<br>引用</p>
<blockquote>
<p>又名块注释</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p><em>这是一句斜体</em></p>
<p><em>这也是一句斜体</em></p>
<p><strong>这是一句加粗</strong></p>
<p><strong>这也是一句加粗</strong></p>
<ul>
<li>这是无序列表</li>
</ul>
<ul>
<li>这也是无序列表</li>
</ul>
<ul>
<li>这还是无序列表</li>
</ul>
<ol>
<li>这是有序列表</li>
<li>这也是有序列表</li>
</ol>
<p>这是一个<a href="http://baidu.com" target="_blank" rel="external">链接</a></p>
<p>这是一堆链接<a href="http://google.com" target="_blank" rel="external">Google</a>，<a href="http://baidu.com" target="_blank" rel="external">baidu</a></p>
<blockquote>
<p>下面来测试一下带图</p>
</blockquote>
<p><img src="/images/photo.jpg" alt="alt text" title="图片测试"></p>
<p><del>删除线</del></p>
<table>
<thead>
<tr>
<th style="text-align:left">这是一个</th>
<th style="text-align:center">表格</th>
<th style="text-align:right">OK</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">左对齐</td>
<td style="text-align:center">居中</td>
<td style="text-align:right">右对齐</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一级标题">一级标题</h1><h2 id="二级标题">二级标题</h2><pre><code>这是一段不加格式的代码
<span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span>
<span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span>

<span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;

<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>
</span>{
    <span class="built_in">printf</span>(<span class="string">"Helloworld\n"</span>);

    <span class="keyword">return</span> <span class="number">0</span>;
}
</code></pre><h3 id="三级标题">三级标题</h3>]]>
    
    </summary>
    
      <category term="测试" scheme="http://jcf94.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>